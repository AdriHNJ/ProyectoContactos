{"version":3,"sources":["redux/types/configTypes.ts","redux/reducers/configReducers.ts","pages/expedientePage/redux/expedienteType.ts","pages/expedientePage/redux/expedienteReducer.ts","pages/administracionPages/emailAdministracion/redux/administracionEmailType.ts","pages/administracionPages/legalAdministracion/redux/administracionLegalReducer.ts","pages/loginPage/redux/authType.ts","pages/loginPage/redux/authReducer.ts","redux/types/sharedUtilsType.ts","redux/reducers/sharedUtilsReducer.ts","pages/administracionPages/emailAdministracion/redux/administracionEmailReducer.ts","pages/companyAdministracionPages/sujetoPage/redux/sujetoType.ts","pages/companyAdministracionPages/sujetoPage/redux/sujetoReducer.ts","pages/companyAdministracionPages/companyPage/redux/companiesType.ts","pages/companyAdministracionPages/companyPage/redux/companiesReducer.ts","pages/companyAdministracionPages/plantillasAdministracion/redux/modulo/moduloType.ts","pages/companyAdministracionPages/plantillasAdministracion/redux/modulo/moduloReducer.ts","pages/companyAdministracionPages/plantillasAdministracion/redux/componente/componenteType.ts","pages/companyAdministracionPages/plantillasAdministracion/redux/componente/componenteReducer.ts","pages/usuarioAdministracionPages/usuarioPage/redux/usuarioType.ts","pages/usuarioAdministracionPages/usuarioPage/redux/usuarioReducer.ts","pages/usuarioAdministracionPages/datoUsuarioPage/redux/datoUsuarioType.ts","pages/usuarioAdministracionPages/datoUsuarioPage/redux/datoUsuarioReducer.ts","pages/companyAdministracionPages/plantillasAdministracion/redux/moduloComponente/moduloComponenteType.ts","pages/companyAdministracionPages/plantillasAdministracion/redux/moduloComponente/moduloComponenteReducer.ts","pages/companyAdministracionPages/companyPage/redux/CalculadoraTransferencias/calculadoraTransferenciasType.ts","pages/companyAdministracionPages/companyPage/redux/CalculadoraTransferencias/calculadoraTransferenciasReducer.ts","pages/companyAdministracionPages/companyPage/redux/Email/emailType.ts","pages/companyAdministracionPages/companyPage/redux/Email/emailReducer.ts","pages/companyAdministracionPages/companyPage/redux/Enlace/enlaceType.ts","pages/companyAdministracionPages/companyPage/redux/Enlace/enlaceReducer.ts","pages/administracionPages/perfilPage/redux/perfilType.ts","pages/administracionPages/perfilPage/redux/perfilReducer.ts","pages/companyAdministracionPages/plantillasAdministracion/redux/plantilla/plantillaComponenteType.ts","pages/companyAdministracionPages/plantillasAdministracion/redux/plantilla/plantillaComponenteReducer.ts","redux/combineReducers.ts","redux/store.ts","pages/loginPage/redux/authActions.ts","redux/utils/reduxUtils.ts","pages/companyAdministracionPages/companyPage/models/companyModuloModel.ts","pages/companyAdministracionPages/companyPage/redux/companiesActions.ts","pages/companyAdministracionPages/sujetoPage/models/sujetoModel.tsx","pages/companyAdministracionPages/sujetoPage/models/sujetosCampoDatoModel.tsx","pages/companyAdministracionPages/sujetoPage/service/sujetoService.ts","pages/companyAdministracionPages/companyPage/models/companyModel.ts","pages/companyAdministracionPages/companyPage/models/companyCampoDatoModel.ts","pages/loginPage/service/authService.ts","pages/companyAdministracionPages/companyPage/models/calculadoraTransferenciaModel.ts","pages/companyAdministracionPages/companyPage/services/calculadoraService.ts","pages/companyAdministracionPages/companyPage/models/configuracionEnvioEmailModel.ts","pages/companyAdministracionPages/companyPage/services/emailService.ts","pages/companyAdministracionPages/companyPage/models/enlaceModel.ts","pages/companyAdministracionPages/companyPage/services/enlacesService.ts","pages/companyAdministracionPages/companyPage/services/companiesServices.ts","utils/media-query.ts","utils/sharedUitls.ts","utils/allowAuthUtil.ts","utils/allowModuloUtil.ts","components/notFound/notFound.tsx","redux/actions/configActions.ts","pages/expedientePage/redux/expedienteActions.ts","models/columnModel.ts","pages/expedientePage/models/expedienteTableModel.ts","utils/dateUtils.ts","pages/expedientePage/models/expedienteModel.ts","pages/expedientePage/models/ExpedienteCampoDatoModel.ts","pages/expedientePage/service/expedienteService.ts","components/form/itemComponent.tsx","pages/expedientePage/components/vehiculo/expedienteVehiculoDatos.tsx","pages/expedientePage/components/expedienteDatosComponent.tsx","pages/expedientePage/components/coste/expedienteCostesComponent.tsx","pages/expedientePage/components/expedienteHistorialComponent.tsx","pages/expedientePage/components/expedienteDocumentosComponent.tsx","pages/expedientePage/components/expedienteInfoTabs.tsx","pages/expedientePage/components/coste/expedienteDetalleCostesComponet.tsx","pages/expedientePage/components/expedienteInfo.tsx","pages/expedientePage/models/coste/expedienteCosteModel.ts","pages/expedientePage/service/costeService.ts","pages/expedientePage/models/vehiculo/vehiculoModel.ts","pages/expedientePage/service/vehiculoService.ts","pages/expedientePage/models/tarePendiente/tareaPendienteModel.ts","pages/expedientePage/service/tareaPendiente.ts","pages/expedientePage/models/documento/documentoModel.ts","pages/expedientePage/service/documentosService.ts","pages/expedientePage/components/expedienteIndexNew.tsx","pages/expedientePage/expedientePage.tsx","assets/newlogo.png","components/pwaIos/pwaIos.jsx","pages/companyAdministracionPages/companyPage/redux/Enlace/enlaceActions.ts","pages/loginPage/login.tsx","pages/loginPage/components/cambiarContrase√±a.tsx","assets/Calculadora.png","pages/accesoSoloCalculadoraPage/accesoSoloCalculadoraPage.tsx","components/loader/loaderComponent.tsx","pages/administracionPages/AdministracionTabsPage.tsx","components/feedBack/services/feedbackService.ts","components/feedBack/feebackComponent.tsx","routes/routes.tsx","serviceWorker.ts","assets/user.png","components/menuGeneric/menuUtils.ts","components/user-panel/user-panel.tsx","components/header/header.tsx","components/footer/footer.tsx","contexts/navigation.tsx","components/side-navigation-menu/dataSourceTemas.ts","components/side-navigation-menu/side-navigation-menu.tsx","components/side-nav-inner-toolbar/side-nav-inner-toolbar.tsx","utils/patches.ts","app-info.ts","components/tasks/tasks.tsx","pages/profile/profile.tsx","pages/companyAdministracionPages/companyPage/pages/companiesAdministracionComponent.tsx","pages/companyAdministracionPages/plantillasAdministracion/models/moduloComponenteModel/moduloComponenteModel.ts","pages/companyAdministracionPages/plantillasAdministracion/models/componenteModel/componenteModel.ts","pages/companyAdministracionPages/plantillasAdministracion/models/moduloComponenteModel/moduloComponenteCampoDatoModel.ts","pages/companyAdministracionPages/plantillasAdministracion/models/componenteModel/componenteDatoModelModel.ts","pages/companyAdministracionPages/plantillasAdministracion/services/componenteServices.ts","pages/companyAdministracionPages/plantillasAdministracion/redux/modulo/moduloActions.ts","pages/companyAdministracionPages/plantillasAdministracion/models/moduloModel/moduloModel.ts","pages/companyAdministracionPages/plantillasAdministracion/models/moduloModel/moduloCampoDatoModel.ts","pages/companyAdministracionPages/plantillasAdministracion/services/moduloServices.ts","pages/companyAdministracionPages/plantillasAdministracion/models/plantillaCamposModel/plantillaCamposModel.ts","pages/companyAdministracionPages/plantillasAdministracion/models/plantillaModel/plantillaModel.ts","pages/companyAdministracionPages/plantillasAdministracion/models/plantillaModel/plantillaCampoDatoModel.ts","pages/companyAdministracionPages/plantillasAdministracion/services/plantillaService.ts","redux/actions/sharedUtilsActions.ts","components/buttonsForm/renderButtons.tsx","pages/companyAdministracionPages/plantillasAdministracion/utils/data.ts","pages/companyAdministracionPages/plantillasAdministracion/redux/plantilla/plantillaComponenteActions.ts","pages/companyAdministracionPages/plantillasAdministracion/components/plantillaCamposComponent.tsx","pages/administracionPages/perfilPage/redux/perfilActions.ts","pages/companyAdministracionPages/plantillasAdministracion/pages/plantillaFormPage.tsx","pages/administracionPages/perfilPage/models/perfilModel.tsx","pages/administracionPages/perfilPage/models/perfilCampoDatoModel.tsx","pages/administracionPages/perfilPage/service/perfilService.ts","pages/companyAdministracionPages/plantillasAdministracion/pages/plantillaPage.tsx","pages/companyAdministracionPages/plantillasAdministracion/Index.tsx","pages/companyAdministracionPages/sujetoPage/redux/sujetoActions.ts","utils/Validators/validators.ts","pages/companyAdministracionPages/sujetoPage/pages/sujetoFormPage.tsx","pages/companyAdministracionPages/sujetoPage/pages/sujetosPage.tsx","pages/companyAdministracionPages/sujetoPage/Index.tsx","pages/companyAdministracionPages/companyPage/utils/images.tsx","pages/companyAdministracionPages/companyPage/pages/CompanyFormPage.tsx","pages/companyAdministracionPages/companyPage/components/enlacesFormComponent.tsx","pages/companyAdministracionPages/companyPage/redux/CalculadoraTransferencias/calculadoraTransferenciasActions.ts","pages/companyAdministracionPages/companyPage/components/calculadoraFormComponent.tsx","pages/companyAdministracionPages/companyPage/redux/Email/emailActions.ts","pages/companyAdministracionPages/companyPage/components/emailFormComponent.tsx","pages/companyAdministracionPages/companyPage/components/companyModuloComponent.tsx","pages/companyAdministracionPages/companyPage/pages/CompanyFormTabsPage.tsx","pages/companyAdministracionPages/companyPage/pages/CompaniesPage.tsx","pages/companyAdministracionPages/companyPage/index.tsx","pages/usuarioAdministracionPages/usuarioPage/models/usuarioModel.tsx","pages/usuarioAdministracionPages/usuarioPage/models/usuarioCampoDatoModel.tsx","pages/usuarioAdministracionPages/usuarioPage/services/usuarioServices.ts","pages/usuarioAdministracionPages/usuarioPage/redux/usuarioActions.ts","pages/usuarioAdministracionPages/usuarioPage/pages/usuarioFormPage.tsx","models/roleModel.ts","services/roleService.ts","pages/usuarioAdministracionPages/usuarioPage/pages/usuariosPage.tsx","pages/administracionPages/perfilPage/pages/perfilFormPage.tsx","pages/administracionPages/perfilPage/pages/perfilPage.tsx","app-routes.ts","Content.tsx","layouts/single-card/single-card.tsx","UnauthenticatedContent.tsx","app.tsx","index.tsx"],"names":["SHOW_LOADER","HIDE_LOADER","initialState","visibleLoader","ADD_EXPEDIENTES","ADD_EXPEDIENTE","CLEAR_EXPEDIENTE","ADD_COSTE","ADD_COSTES","ADD_VEHICULO","ADD_TAREASPENDIENTES","ADD_DOCUMENTOS","expedientes","undefined","expediente","coste","costes","vehiculo","tareasPendientes","documentos","ADD_LEGAL_ADMINISTRACION","ADD_EMAIL_ADMINISTRACION","legal","ADD_LOGIN_SUCCESS","ADD_LOGIN_FAIL","ADD_LOGIN_ISALREADYLOGGED","ADD_LOGIN_RESETPASSWORD","isLoggedIn","user","initialState2","Usuario","Permitir","Mensaje","Auth","OPEN_POPUPEXPEDIENTES","OPEN_POPUPSUJETOS","ADD_DATAFORMCHANGE","openPopupExpediente","isOpenPopup","popupRef","isChanged","email","ADD_SUJETOS","ADD_SUJETO","CLEAR_SUJETO","sujeto","sujetos","ADD_COMPANIES","ADD_COMPANY","CLEAR_COMPANY","ADD_COMPANY_MODULO","CLEAR_COMPANY_MODULO","ADD_COMPANY_MODULO_SELECTED","ADD_PARENT_COMPANY","ADD_COMPANY_MODULO_PARENT","company","companies","companyModulos","companyModulosSelected","parentCompany","parentCompanyModulos","ADD_MODULOS","ADD_MODULO","CLEAR_MODULO","modulo","modulos","ADD_COMPONENTES","ADD_COMPONENTE","CLEAR_COMPONENTE","componente","componentes","ADD_USUARIOS","ADD_USUARIO","CLEAR_USUARIO","ADD_ROLES","usuario","usuarios","roles","ADD_DATOS_USUARIOS","ADD_DATO_USUARIO","CLEAR_DATO_USUARIO","datoUsuario","datosUsuarios","ADD_MODULO_COMPONENTES","ADD_MODULO_COMPONENTE","CLEAR_MODULO_COMPONENTE","moduloComponente","moduloComponentes","ADD_CALCULADORA_TRANSFERENCIAS","CLEAR_CALCULADORA_TRANSFERENCIAS","calculadoraTransferencias","ADD_EMAIL","CLEAR_EMAIL","ADD_ENLACE","ADD_ENLACES","ADD_PARENT_ENLACES","CLEAR_ENLACE","enlace","enlaces","parentEnlaces","ADD_PERFILES","ADD_PERFIL","CLEAR_PERFIL","perfil","perfiles","ADD_PLANTILLA","ADD_PLANTILLA_CAMPOS","plantilla","plantillaCampos","rootReducer","combineReducers","state","action","type","payload","config","resetPasswd","administracionLegal","administracionEmail","sharedUtils","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","addLoggedUser","isAlreadyLoggedUser","url","history","dispatch","localStorage","getItem","jsonConvert","JsonConvert","valueCheckingMode","ValueCheckingMode","ALLOW_NULL","deserializeObject","JSON","parse","UserModel","CompanyModuloModel","JsonObject","JsonProperty","Number","String","addCompanies","addCompany","addParentCompany","addCompanyModulos","addParentCompanyModulos","SujetoModel","SujetosCampoDatoModel","ColumnModel","serviceName","getSujetos","a","process","SujetosData","axios","method","headers","authHeader","then","response","data","catch","error","showToast","NotifyType","console","getSujeto","id","methodsEndPointType","GET","checkStatusCode","status","Datos","customLog","logType","ERROR","name","postSujeto","Authorization","post","Id","INFO","putSujeto","POST","success","message","put","PUT","getStructure","getMapperSujeto","sujetoData","CompanyModel","Boolean","CompanyGridModel","CompanyCampoDatoModel","CompanyCampoDatoGridModel","LoginUser","username","password","Username","Password","decodeToken","setItem","stringify","RestorePassword","info","CambiarContrase√±aCall","code","json","decodeURIComponent","replace","statusText","log","token","decoded","jwt_decode","Token","Expedientes","Administracion","Calculadora","CalculadoraTransferenciaModel","getCalculadora","idCompany","CalculadoraData","postCalculadora","calculadora","calculadoraData","IdCompany","CuotaTurismos","CuotaMotocicletas","putCalculadora","ConfiguracionEnvioEmailModel","getEmail","EmailData","postEmail","ServidorSMTP","PuertoSMTP","UsaSSL","NombreMostrar","DireccionEmail","UsuarioEmail","PasswordEmail","putEmail","EnlaceModel","getEnlaces","enlacesData","deserializeArray","postEnlaces","fillCompany","putEnlaces","getCompanies","request","getCompany","Enabled","postCompany","calculadoraState","enlaceState","companyState","emailState","isSuperAdministrador","postCompanyModulo","putCompany","deleteCompany","delete","getCompanyModulos","companyModulo","length","map","x","useScreenSize","useState","getScreenSize","screenSize","setScreenSize","onSizeChanged","useCallback","useEffect","subscribe","unsubscribe","useScreenSizeGrid","isXSmall","isSmall","isMedium","isLarge","handlers","xSmallMedia","window","matchMedia","smallMedia","mediumMedia","largeMedia","forEach","media","addListener","e","matches","handler","push","filter","item","require","DateTime","FormatType","text","timer","notify","getCurrency","defaultCurrency","style","currency","useGrouping","minimumSignificantDigits","precision","getBoolean","value","getColumnAlignment","getColumnType","format","date","isNotEmpty","removeItem","location","reload","getSize","field","rolesName","refreshGrid","props","showFrom","document","getElementsByClassName","click","setShowForm","modulosClaims","isRolAllowed","claims","ADMINISTRACION","EXPEDIENTES","moduloClaims","permisos","array","Object","values","i","indexOf","includes","hasClaims","role","SUPERADMINISTRADOR","isAdministrador","ADMINISTRADOR","isNormalUser","EMPLEADO","CLIENTE","TRANSMITENTE","COLABORADOR","split","find","isNormalUserByIdRole","IdRole","isModuloAllowed","Nombre","NotFound","useHistory","useDispatch","className","width","stylingMode","onClick","goBack","addShowLoader","visible","addHideLoader","addExpedientes","addExpediente","addCoste","addCostes","addVehiculo","addTareaspendientes","addDocumentos","ColumnModelCore","ExpedienteTableModel","DateConverter","JsonConverter","dateUtil","this","DateUtil","getDateFormat","Date","fromISO","toLocaleString","DATE_SHORT","local","ExpedienteGridModel","ExpedienteDetalleModel","ExpedienteGridCampoDatoModel","ExpedienteCampoDatoModel","getExpediente","expedienteId","Expediente","logger","component","getCampos","REACT_APP_API_URL","ExpedienteTable","getExpedienteFile","fileName","responseType","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","err","GenericFormComponent","checkType","Tipo","getDxType","Type","formatterPercentage","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatterCurrency","colCount","labelLocation","alignItemLabels","alignItemLabelsInAllGroups","fields","Campos","dataField","colSpan","cssClass","Visible","editorOptions","readOnly","Format","fontWeight","color","hint","Texto","editorType","itemType","ExpedienteVehiculosDatos","expedienteState","useSelector","ExpedienteDatos","ExpedienteCostesComponent","dataSource","allowColumnReordering","allowColumnResizing","columnAutoWidth","showBorders","showRowLines","rowAlternationEnabled","focusedRowEnabled","showScrollbar","caption","dataType","alignment","column","summaryType","valueFormat","ExpedienteHistorialComponent","fixed","ExpedienteDocumentosComponent","userState","cellRender","cellRenderData","myIcon","file","pop","toUpperCase","getFileIcon","NombreArchivoOriginal","icon","event","encodeURIComponent","ExpedienteeInfoTabs","title","ExpedienteDetalleCostesComponent","ExpedienteInfo","Fragment","direction","height","ratio","borderBottomStyle","CosteDetalleBody","CosteGridModel","CosteCampoDatoGridModel","CosteCampoDatoModel","getDetalleCoste","getCostes","VehiculoDetalle","VehiculoCampoDatoModel","getDetalleVehiculo","vehiculoId","vehiculoGrid","TareaPendienteGridModel","TareaPendienteCampoDatoModel","getTareasPendientesByExpediente","tareaPendienteGrid","DocumentoGridModel","DocumentoCampoDatoModel","getDocumentoByExpediente","documentoGrid","ExpedienteIndexNew","showInfo","setShowInfo","showInfoConfig","setShowInfoConfig","checkboxFilterRow","setcheckboxFilterRow","structure","setStructure","setStore","visibleFilterRow","rowFocused","setRowFocused","expedienteGridRef","useRef","gridheight","CustomStore","key","load","loadOptions","params","slice","urlAux","fetch","totalCount","summary","fetchData","openExpediente","rowData","IdVehiculo","openExpedienteEnterKey","rowId","handleHideInfo","buttonOptions","VIEW","borderColor","borderWidth","margin","padding","keyExpr","ref","remoteOperations","onInitialized","selectAll","columnHidingEnabled","checkScreenSize","onRowDblClick","onKeyDown","current","focusedRowKey","onFocusedRowChanged","row","onToolbarPreparing","dataGrid","toolbarOptions","items","unshift","widget","options","_e","instance","option","refresh","doc","jsPDF","exportDataGridToPdf","jsPDFDocument","keepColumnWidths","save","mode","rowRenderingMode","scrollByThumb","preloadEnabled","useNative","pageSize","enabled","excelWrapTextEnabled","now","allowExportSelectedData","showCheckBoxesMode","autoExpandAll","allowCollapsing","expandMode","storageKey","allowGrouping","allowHeaderFiltering","defaultSortOrder","displayFormat","onHiding","dragEnabled","closeOnOutsideClick","showTitle","onValueChanged","toString","resizeEnabled","showCloseButton","float","isMobileScreen","display","ExpedientePage","useClearCache","isLatestVersion","emptyCacheStorage","PwaInstallPopupIOSComponent","delay","backgroundColor","textAlign","addParentEnlaces","addEnlaces","Login","getCookie","setUsername","setPassword","UsuarioResetPasswd","setUsuarioResetPasswd","emailResetPasswd","setEmailResetPasswd","checkedIsTrue","setCheckedIsTrue","rootState","isVisiblePop","setIsVisiblePop","isVisiblePopEmail","setIsVisiblePopEmail","React","loading","setLoading","setSuccess","handleSubmit","preventDefault","setTimeout","usuarioLogeado","parseInt","CompanyId","handleSubmitResetaContrase√±a","recuperarPasswd","recuperarPasswdObj","restablecerContrase√±aCall","handleSubmitRecuperarContrase√±a","Copyright","Typography","variant","align","Link","getFullYear","useStyles","makeStyles","theme","root","image","backgroundRepeat","backgroundSize","backgroundPosition","paper","spacing","flexDirection","alignItems","paperRecuperarContrase√±a","avatar","palette","secondary","main","form","maxWidth","marginTop","formRecuperarPass","submit","olvideContrase√±aButton","fontSize","buttonSuccess","buttonProgress","position","top","left","marginLeft","popUpResponsiveHeight","popUpResponsiveWidth","classes","buttonClassname","clsx","REACT_APP_SECRET_CODE","rel","Grid","container","justifyContent","Paper","elevation","src","logoLogin","alt","onSubmitCapture","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","target","Button","disabled","CircularProgress","size","xs","getElementById","innerHTML","Box","mt","ChangePassword","nuevaContrase√±a","setNuevaContrase√±a","repetirNuevaContrase√±a","setRepetirNuevaContrase√±a","getParameters","Code","CambiaContrase√±a","backgroundImage","grey","formResponsiveWidth","formResponsiveHeight","AccesoSoloCalculadoraPage","usuarioState","CodigoCalculadora","calculadoraImg","LoaderComponent","configState","shadingColor","showIndicator","shading","showPane","AdministracionTabsPage","crossAlign","baseSize","feedBackCall","Body","FileData","FeedBack","withShadingOptionsVisible","showWithShadingOptions","incidencia","setIncidencia","checkedScreenShotIsTrue","setcheckedScreenShotIsTrue","handlePopoverInfoHide","styles","buttonStyle","borderRadius","right","zIndex","buttonStyleMobile","bottom","bounceEnabled","defaultValue","showClearButton","placeholder","valueChangeEvent","autoResizeEnabled","minHeight","maxHeight","minWidth","FormControlLabel","control","Checkbox","checked","elemento","getElementsByTagName","html2canvas","scrollY","canvas","img","toDataURL","Routes","exact","path","LoginPage","hideNavBar","CambiarContrase√±aPage","hostname","match","DataSource","ID","Name","getTimeLogIn","d","getDate","getMonth","getHours","getMinutes","menuMode","popUpHelpVisible","setPopUpHelpVisible","handlePopupHelpShow","menuItems","useMemo","UserName","background","logoUser","marginRight","showEvent","my","at","menuToggleEnabled","toggleMenu","menuStatus","PrincipalLogo","SecondaryLogo","Slogan","locateInMenu","menuItemTemplate","rest","NavigationContext","createContext","useNavigation","useContext","NavigationProvider","navigationData","setNavigationData","Provider","dataSourceTemas","SideNavigationMenu","children","openMenu","closeMenu","compactMode","popUpThemes","setPopUpThemes","handlePopupThemesHide","buttonToolbarThemesOptions","navigation","test","expanded","currentPath","treeViewRef","wrapperRef","getWrapperRef","element","prevElement","events","treeView","selectItem","expandItem","collapseAll","marginBottom","CALCULADORA","open","valueExpr","displayExpr","searchEnabled","themeSelect","SideNavbarInner","scrollViewRef","setEnabled","onMenuReady","useMenuPatch","patchCssClass","MenuStatus","Closed","setMenuStatus","prevMenuStatus","Opened","stopPropagation","temporaryOpenMenu","TemporaryOpened","temporaryClosedMenu","onOutsideClick","onNavigationChanged","itemData","node","selected","scrollTo","join","openedStateMode","activeStateEnabled","hoverStateEnabled","focusStateEnabled","revealMode","minSize","maxSize","opened","template","Children","Footer","selectedItemChanged","menuStatusHandler","expand","select","priorities","colCountByScreen","sm","md","lg","CompaniesAdministracionComponent","formData","isDropZoneActiveLogo1","setIsDropZoneActiveLogo1","isDropZoneActiveLogo2","setIsDropZoneActiveLogo2","imageSourceLogo1","setImageSourceLogo1","imageSourceLogo2","setImageSourceLogo2","textVisibleLogo1","setTextVisibleLogo1","textVisibleLogo2","setTextVisibleLogo2","progressVisibleLogo1","setProgressVisibleLogo1","progressVisibleLogo2","setProgressVisibleLogo2","progressValueLogo1","setProgressValueLogo1","progressValueLogo2","setProgressValueLogo2","useForm","register","onSubmit","allowChangePassword","contactInformation","notificationsEmail","principalLogo","secondaryLogo","slogan","confirm","dialogResult","dialogCall","encType","min","max","showStatus","dialogTrigger","dropZone","multiple","allowedFileExtensions","uploadMode","uploadUrl","onDropZoneEnter","dropZoneElement","onDropZoneLeave","onUploaded","fileReader","FileReader","onload","result","readAsDataURL","onProgress","bytesLoaded","bytesTotal","onUploadStarted","onValueChange","render","useSubmitBehavior","ModuloComponenteModel","ComponenteModel","ComponenteCampoDatoModel","addModulos","ModuloModel","ModuloCampoDatoModel","getModulos","ModuloData","PlantillaCamposModel","PlantillaModel","PlantillaCampoDatoModel","getPlantillas","plantillas","getPlantillaCampos","plantillaId","plantillaCamposModel","getPlantillaWithChild","postPlantilla","extraData","created","orden","plantillaCampo","Orden","plantillaCamposBody","PlantillaCampos","Message","putPlantilla","deletePlantilla","idPlantilla","getMapperPlantilla","usuarioData","addDataFormChange","renderButtonsComponent","validationGroup","handleCancelClick","campos","IdPlantilla","IdCampo","Ancho","addPlantilla","addPlantillaCampos","plantillaState","setCampos","handleUpdatedPlantilla","property","plantillasCampo","dropFeedbackMode","itemOrientation","dragDirection","scrollSpeed","scrollSensitivity","handle","onDragStart","fromIndex","onReorder","itemSelected","toIndex","campo","parentElement","showSpinButtons","addPerfil","addPerfiles","PlantillaFormPage","perfilState","IdPlantillaParent","IdPerfil","isCreatePlantilla","plantillasChild","setPlantillas","showForm","perfilBoxOptions","showValidationSummary","showColonAfterLabel","PerfilModel","PerfilModelGrid","PerfilesCampoDatoModel","getPerfiles","PerfilesData","getPerfil","postPerfil","putPerfil","PlantillaPage","selectedModulo","setModulo","rowSelected","setRow","setPlantilla","gridRef","popupPlantillaRef","modulosParent","setModulosParent","handleOpenCreatePopup","dataGridModel","buttonColumn","ButtonColumnModel","DataGridModel","dataGridName","columns","openRow","openRowEnterKey","focusEventChanged","focusEventChanging","openCreatePopup","buttonsColumns","filterRow","filterPanel","columnChooser","headerFilter","exportData","showSearchPanel","showToolbar","singularName","pluralName","pageName","openedPopup","fillDataGrid","wordWrapEnabled","defaultExpandedRowKeys","defaultSelectedRowKeys","parentIdExpr","editButtonPlantillas","warning","deleteButtonPlantillas","plantillaParent","EsGenerica","PlantillasPage","runInsights","addSujeto","addSujetos","NIFValidator","mask","maskRules","X","useMaskedValue","maskInvalidMessage","SujetoFormPage","sujetoState","selectedBoxOptions","handleUpdatedSujeto","helpText","NIF","SujetosPage","popupSujetosRef","SujetoPage","logo","CompanyFormPage","isChangedState","logo1","handleUpdatedCompany","Layout","input","previews","submitButton","dropzoneProps","files","maxFiles","extra","companyFormRef","resetValues","IdentificationNumber","pattern","maxLength","ContactInformation","NotificationsEmail","LayoutComponent","allFiles","arrayBuffer","blob","reader","base64","f","remove","classNames","inputLabelWithFiles","defaultClassNames","inputLabel","submitButtonContent","inputContent","inputWithFilesContent","submitButtonDisabled","dropzone","EnlacesFormComponent","getEnlaceValue","codigoEnlace","CodigoTipoEnlace","EnlaceValue","enlacesFormRef","IdTipoEnlace","index","splice","previousValue","addCalculadoraTranseferencias","CalculadoraFormComponent","calculadoraTransferenciasState","handleUpdatedCalculadora","calculadoraFormRef","addEmail","EmailFormComponent","handleUpdatedEmail","emailFormRef","repaint","ModulosList","moduloState","selectedItemKeys","setSelecteItemKeys","dataModules","setDataModules","IdModulo","ArrayStore","companyModuloslistRef","showSelectionControls","selectionMode","selectAllMode","elementAttr","onOptionChanged","saveCompanyModulos","CompanyFormTabsPage","useReducer","confirmDialog","custom","messageHtml","buttons","hide","show","companyTabRef","CompaniesIndex","popupCompaynyRef","buttonColumnCreate","buttonColumnDelete","toolbar","CompaniesPage","UsuarioModel","UsuarioModelGrid","UsuarioCampoDatoModel","getUsuario","postUsuario","RolesTipoCuenta","putUsuario","deleteUsuario","idUsuario","url2","getMapperUsuario","addUsuario","clearUsuario","addRoles","UsuarioFormPage","roleState","isSaveForm","setSaveForm","updatedForm","setUpdatedForm","isCuenta","setIsCuenta","IdSujeto","buttonAttributes","class","getSujetosForm","sujetosState","readAll","SujetoId","sujetoSelectedBoxOptions","handleUpdatedUsuario","SujetoIndetification","gestoriasSelectedBoxOptions","getSujetoList","getRolesTipoUsuario","CUENTA","roleSelectedBoxOptions","tipoUsuario","perfilSelectedBoxOptions","getRolesTipoCuenta","getRolesLits","usuarioFormRef","NombreUsuario","Apellidos","Email","replaceAll","Telefono","autocomplete","IdTipoUsuario","RoleModel","getRoles","UsuarioPage","buttonColumn2","PerfilFormPage","handleUpdatedPerfil","perfilFormRef","Descripcion","PerfilPage","popupPerfilsRef","dataGridPerfilsRef","routes","defaultFocusedRowIndex","defaultPageSize","showPageSizeSelector","hidingPriority","allowSorting","notes","setNotes","employee","FirstName","LastName","Prefix","Position","Picture","BirthDate","HireDate","Notes","Address","defaultFormData","onFieldDataChanged","route","Component","Content","EnlaceLegal","EnlacePrivcacidadCookies","EnlaceRGPD","setLegal","cookies","setCookies","RGPD","setRGPD","appInfo","to","description","UnauthenticatedContent","App","screenSizeClass","useScreenSizeClass","createBrowserHistory","currentLenguage","loadMessages","esMessages","enMessages","locale","themes","ready","ReactDOM","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.57700898.chunk.js","sourcesContent":["export const SHOW_LOADER = \"SHOW_LOADER\";\nexport const HIDE_LOADER = \"HIDE_LOADER\";\n\nexport interface configState {\n  visibleLoader: boolean | undefined;\n}\n\ninterface AddShowLoader {\n  type: typeof SHOW_LOADER;\n  payload: boolean | undefined;\n}\ninterface AddHideLoader {\n  type: typeof HIDE_LOADER;\n  payload: boolean | undefined;\n}\n\nexport type ConfigActionsTypes = AddShowLoader | AddHideLoader;\n","import {\n  SHOW_LOADER,\n  HIDE_LOADER,\n  ConfigActionsTypes,\n  configState,\n} from \"../types/configTypes\";\n\nconst initialState: configState = {\n  visibleLoader: false,\n};\n\nexport const configReducer = (\n  state = initialState,\n  action: ConfigActionsTypes\n): configState => {\n  switch (action.type) {\n    case SHOW_LOADER: {\n      return { ...state, visibleLoader: action.payload };\n    }\n    case HIDE_LOADER: {\n      return { ...state, visibleLoader: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  CosteCampoDatoGridModel,\n  CosteCampoDatoModel,\n} from '../models/coste/expedienteCosteModel'\nimport { DocumentoCampoDatoModel } from '../models/documento/documentoModel'\nimport {\n  ExpedienteCampoDatoModel,\n  ExpedienteGridCampoDatoModel,\n} from '../models/ExpedienteCampoDatoModel'\nimport { ExpedienteModel } from '../models/expedienteModel'\nimport { ExpedienteTableModel } from '../models/expedienteTableModel'\nimport { TareaPendienteCampoDatoModel } from '../models/tarePendiente/tareaPendienteModel'\nimport { VehiculoCampoDatoModel } from '../models/vehiculo/vehiculoModel'\n\nexport interface ExpedienteState {\n  expedientes: ExpedienteGridCampoDatoModel | undefined\n  expediente: ExpedienteCampoDatoModel | undefined\n  coste: CosteCampoDatoModel | undefined\n  costes: CosteCampoDatoGridModel | undefined\n  vehiculo: VehiculoCampoDatoModel | undefined\n  tareasPendientes: TareaPendienteCampoDatoModel | undefined\n  documentos: DocumentoCampoDatoModel | undefined\n}\n\nexport const ADD_EXPEDIENTES = '@todo/ADD_USERS'\nexport const ADD_EXPEDIENTE = '@todo/ADD_EXPEDIENTE'\nexport const CLEAR_EXPEDIENTE = '@todo/CLEAR_EXPEDIENTE'\nexport const ADD_COSTE = '@todo/ADD_COSTE'\nexport const ADD_COSTES = '@todo/ADD_COSTES'\nexport const ADD_VEHICULO = '@todo/ADD_VEHICULO'\nexport const ADD_TAREASPENDIENTES = '@todo/ADD_TAREASPENDIENTES'\nexport const ADD_DOCUMENTOS = '@todo/ADD_DOCUMENTOS'\ninterface AddExpedientesRequest {\n  type: typeof ADD_EXPEDIENTES\n  payload: ExpedienteTableModel | undefined\n}\ninterface AddExpedienteRequest {\n  type: typeof ADD_EXPEDIENTE\n  payload: ExpedienteCampoDatoModel | undefined\n}\n\ninterface AddCosteRequest {\n  type: typeof ADD_COSTE\n  payload: CosteCampoDatoModel | undefined\n}\n\ninterface AddCostesRequest {\n  type: typeof ADD_COSTES\n  payload: CosteCampoDatoGridModel | undefined\n}\n\ninterface AddTareasPendientesRequest {\n  type: typeof ADD_TAREASPENDIENTES\n  payload: TareaPendienteCampoDatoModel | undefined\n}\n\ninterface AddDocumentosRequest {\n  type: typeof ADD_DOCUMENTOS\n  payload: DocumentoCampoDatoModel | undefined\n}\n\ninterface AddVehiculoRequest {\n  type: typeof ADD_VEHICULO\n  payload: VehiculoCampoDatoModel | undefined\n}\ninterface ClearExpedienteRequest {\n  type: typeof CLEAR_EXPEDIENTE\n  payload: ExpedienteModel | undefined\n}\n\nexport type ExpedienteActionsTypes =\n  | ClearExpedienteRequest\n  | AddExpedientesRequest\n  | AddExpedienteRequest\n  | AddCosteRequest\n  | AddVehiculoRequest\n  | AddCostesRequest\n  | AddTareasPendientesRequest\n  | AddDocumentosRequest\n","import {\n  ExpedienteState,\n  ExpedienteActionsTypes,\n  ADD_EXPEDIENTES,\n  ADD_EXPEDIENTE,\n  CLEAR_EXPEDIENTE,\n  ADD_COSTE,\n  ADD_VEHICULO,\n  ADD_COSTES,\n  ADD_TAREASPENDIENTES,\n  ADD_DOCUMENTOS,\n} from './expedienteType'\n\nconst initialState: ExpedienteState = {\n  expedientes: undefined,\n  expediente: undefined,\n  coste: undefined,\n  costes: undefined,\n  vehiculo: undefined,\n  tareasPendientes: undefined,\n  documentos: undefined,\n}\n\nexport const expedienteReducer = (\n  state = initialState,\n  action: ExpedienteActionsTypes,\n): ExpedienteState => {\n  switch (action.type) {\n    case ADD_EXPEDIENTES: {\n      return { ...state, expedientes: action.payload }\n    }\n    case ADD_EXPEDIENTE: {\n      return { ...state, expediente: action.payload }\n    }\n    case CLEAR_EXPEDIENTE: {\n      return { ...state, expediente: action.payload }\n    }\n    case ADD_COSTE: {\n      return { ...state, coste: action.payload }\n    }\n    case ADD_COSTES: {\n      return { ...state, costes: action.payload }\n    }\n    case ADD_VEHICULO: {\n      return { ...state, vehiculo: action.payload }\n    }\n    case ADD_TAREASPENDIENTES: {\n      return { ...state, tareasPendientes: action.payload }\n    }\n    case ADD_DOCUMENTOS: {\n      return { ...state, documentos: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","import { AdministracionLegal } from \"../models/AdministracionLegalModel\";\nimport { AdministracionEmail } from \"../models/AdministracionEmailModel\";\n\n\nexport interface AdministracionLegalState {\n  legal: AdministracionLegal | undefined;\n}\nexport interface AdministracionEmailState {\n  email: AdministracionEmail | undefined;\n}\n\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const ADD_LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const ADD_LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const ADD_LOGIN_ISALREADYLOGGED = \"LOGIN_ISALREADYLOGGED\";\nexport const LOGOUT = \"LOGOUT\";\nexport const SET_MESSAGE_LOGGIN = \"SET_MESSAGE_LOGGIN\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\nexport const USER_CONFIG = \"USER_CONFIG\";\nexport const ADD_LOGIN_RESETPASSWORD = \"LOGIN_RESETPASSWORD\";\nexport const ADD_LEGAL_ADMINISTRACION = \"LEGAL_ADMINISTRACION\";\nexport const ADD_EMAIL_ADMINISTRACION = \"EMAIL_ADMINISTRACION\";\n\n\n\ninterface AddEmailAdministracionRequest {\n  type: typeof ADD_EMAIL_ADMINISTRACION;\n  payload: AdministracionEmail | undefined;\n}\n\n/* interface AddUserIsAlreadyLoggedRequest {\n  type: typeof ADD_LOGIN_ISALREADYLOGGED;\n  payload: UserModel | undefined;\n}\ninterface AddUserResetPassword {\n  type: typeof ADD_LOGIN_RESETPASSWORD;\n  payload: ForgotPasswordModel | undefined;\n} */\nexport type AdministracionActionsTypes =\n  | AddEmailAdministracionRequest;","//import { ForgotPasswordModel } from \"../models/forgotPasswordModel\";\nimport {\n  ADD_LEGAL_ADMINISTRACION,\n  AdministracionLegalState,\n  AdministracionEmailState,\n  AdministracionActionsTypes,\n  ADD_EMAIL_ADMINISTRACION,\n} from \"../../emailAdministracion/redux/administracionEmailType\";\n\n\n\nconst initialState: AdministracionLegalState = {\n\n  legal: undefined,\n};\n\nconst administracionLegalReducer = (\n  state = initialState,\n  action: AdministracionActionsTypes\n): AdministracionLegalState | undefined => {\n  switch (action.type) {\n    case ADD_LEGAL_ADMINISTRACION: {\n      return { ...state, legal: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { administracionLegalReducer };\n","import { UserModel } from 'shared-models'\nimport { ConfigModel } from '../../../models/usuario/configModel'\nimport { ForgotPasswordModel } from '../models/forgotPasswordModel'\n\nexport interface UserState {\n  user: UserModel | undefined\n  isLoggedIn: Boolean\n}\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\nexport const ADD_LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const ADD_LOGIN_FAIL = 'LOGIN_FAIL'\nexport const ADD_LOGIN_ISALREADYLOGGED = 'LOGIN_ISALREADYLOGGED'\nexport const LOGOUT = 'LOGOUT'\nexport const SET_MESSAGE_LOGGIN = 'SET_MESSAGE_LOGGIN'\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE'\nexport const USER_CONFIG = 'USER_CONFIG'\nexport const ADD_LOGIN_RESETPASSWORD = 'LOGIN_RESETPASSWORD'\nexport const UPDATE_THEME = 'UPDATE_THEME'\n\ninterface AddUserLoggedRequest {\n  type: typeof ADD_LOGIN_SUCCESS\n  payload: UserModel | undefined\n}\ninterface AddUserLoggedFailRequest {\n  type: typeof ADD_LOGIN_FAIL\n  payload: UserModel | undefined\n}\n\ninterface AddUserIsAlreadyLoggedRequest {\n  type: typeof ADD_LOGIN_ISALREADYLOGGED\n  payload: UserModel | undefined\n}\ninterface AddUserResetPassword {\n  type: typeof ADD_LOGIN_RESETPASSWORD\n  payload: ForgotPasswordModel | undefined\n}\ninterface AddUpdateThemeRequest {\n  type: typeof UPDATE_THEME\n  payload: ConfigModel | undefined\n}\n\nexport type UserActionsTypes =\n  | AddUserLoggedRequest\n  | AddUserLoggedFailRequest\n  | AddUserIsAlreadyLoggedRequest\n  | AddUserResetPassword\n  | AddUpdateThemeRequest\n","import { ConfigModel } from \"../../../models/usuario/configModel\";\nimport { ForgotPasswordModel } from \"../models/forgotPasswordModel\";\nimport {\n  ADD_LOGIN_RESETPASSWORD,\n  UserState,\n  UserActionsTypes,\n  ADD_LOGIN_SUCCESS,\n  ADD_LOGIN_FAIL,\n  ADD_LOGIN_ISALREADYLOGGED,\n  UPDATE_THEME\n} from \"./authType\";\n\nconst initialState: UserState = {\n  isLoggedIn: false,\n  user: undefined,\n};\n\nconst userReducer = (\n  state = initialState,\n  action: UserActionsTypes\n): UserState | undefined => {\n  switch (action.type) {\n    case ADD_LOGIN_SUCCESS: {\n      return { ...state, isLoggedIn: true, user: action.payload };\n    }\n    case ADD_LOGIN_FAIL: {\n      return { ...state, isLoggedIn: false, user: action.payload };\n    }\n    case ADD_LOGIN_ISALREADYLOGGED: {\n      return { ...state, isLoggedIn: true, user: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n\n\nconst initialState2: ForgotPasswordModel = {\n  Usuario: \"\",\n  Permitir: false,\n  Mensaje: \"\",\n  Auth: \"\",\n};\nconst userResetReducer = (\n  state = initialState2,\n  action: UserActionsTypes\n): ForgotPasswordModel | undefined => {\n  switch (action.type) {\n    case ADD_LOGIN_RESETPASSWORD: {\n      return {\n        ...state,\n        Usuario: action.payload?.Usuario!,\n        Permitir: action.payload?.Permitir!,\n        Mensaje: action.payload?.Mensaje!,\n        Auth: action.payload?.Auth!,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst initialState3: ConfigModel = {\n Tema: \"\",\n Logo1: \"\",\n Logo2: \"\",\n MensajeCentral:\"\",\n LinkLegal: \"\",\n LinkCookies:\"\",\n LinkRgpd: \"\",\n};\n\nconst userConfigReducer = (\n  state = initialState3,\n  action: UserActionsTypes\n): ConfigModel | undefined => {\n  switch (action.type) {\n    case UPDATE_THEME: {\n      return { ...state, Tema: action.payload?.Tema!,\n Logo1: action.payload?.Logo1!,\n Logo2: action.payload?.Logo2!,\n MensajeCentral:action.payload?.MensajeCentral!,\n LinkLegal: action.payload?.LinkLegal!,\n LinkCookies:action.payload?.LinkCookies!,\n LinkRgpd: action.payload?.LinkRgpd!};\n    }\n    default:\n      return state;\n  }\n};\n\n\n\n\n\n\nexport { userReducer, userResetReducer };\n","export interface SharedUtilsState {\n  openPopupExpediente: boolean | undefined\n  isOpenPopup: boolean | undefined\n  popupRef: any\n  isChanged: boolean | undefined\n}\n\nexport const OPEN_POPUPEXPEDIENTES = 'OPEN_POPUPEXPEDIENTES'\nexport const OPEN_POPUPSUJETOS = 'OPEN_POPUPSUJETOS'\nexport const ADD_DATAFORMCHANGE = 'ADD_DATAFORMCHANGE'\n\n//export const ADD_EXPEDIENTE = \"@todo/ADD_EXPEDIENTE\";\n\ninterface AddPopupExpedientesRequest {\n  type: typeof OPEN_POPUPEXPEDIENTES\n  payload: boolean | undefined\n}\ninterface AddPopupSujetosRequest {\n  type: typeof OPEN_POPUPSUJETOS\n  payload: boolean | undefined | any\n}\n\ninterface AddDataFormChangeRequest {\n  type: typeof ADD_DATAFORMCHANGE\n  payload: boolean | undefined\n}\n\n/* \ninterface AddExpedienteRequest {\n  type: typeof ADD_EXPEDIENTE;\n  payload: ExpedienteModel | undefined;\n} */\n\nexport type sharedUtilsActionsTypes =\n  | AddPopupExpedientesRequest\n  | AddPopupSujetosRequest\n  | AddDataFormChangeRequest\n","import {\n  ADD_DATAFORMCHANGE,\n  OPEN_POPUPEXPEDIENTES,\n  OPEN_POPUPSUJETOS,\n  sharedUtilsActionsTypes,\n  SharedUtilsState,\n} from '../types/sharedUtilsType'\n\nconst initialState: SharedUtilsState = {\n  openPopupExpediente: undefined,\n  isOpenPopup: undefined,\n  popupRef: undefined,\n  isChanged: undefined,\n}\n\nexport const sharedUtilsReducer = (\n  state = initialState,\n  action: sharedUtilsActionsTypes,\n): SharedUtilsState => {\n  switch (action.type) {\n    case OPEN_POPUPEXPEDIENTES: {\n      return { ...state, openPopupExpediente: action.payload }\n    }\n    case OPEN_POPUPSUJETOS: {\n      return {\n        ...state,\n        isOpenPopup: action.payload.isOpenPopup,\n        popupRef: action.payload.popupRef,\n      }\n    }\n    case ADD_DATAFORMCHANGE: {\n      return { ...state, isChanged: action.payload }\n    }\n\n    default:\n      return state\n  }\n}\n","//import { ForgotPasswordModel } from \"../models/forgotPasswordModel\";\nimport {\n  ADD_LEGAL_ADMINISTRACION,\n  AdministracionLegalState,\n  AdministracionEmailState,\n  AdministracionActionsTypes,\n  ADD_EMAIL_ADMINISTRACION,\n} from \"./administracionEmailType\";\n\n\n\nconst initialState: AdministracionEmailState = {\n  email: undefined,\n};\n\nconst administracionEmailReducer = (\n  state = initialState,\n  action: AdministracionActionsTypes\n): AdministracionEmailState | undefined => {\n  switch (action.type) {\n    case ADD_EMAIL_ADMINISTRACION: {\n      return { ...state, email: action.payload };\n\n    }\n    default:\n      return state;\n  }\n};\nexport { administracionEmailReducer };\n","import { SujetoModel } from '../models/sujetoModel'\nimport { SujetosCampoDatoModel } from '../models/sujetosCampoDatoModel'\n\nexport interface SujetoState {\n  sujeto: SujetoModel | undefined\n  sujetos: SujetosCampoDatoModel | undefined\n}\nexport interface SujetosState {\n  sujetos: SujetosCampoDatoModel | undefined\n}\n\nexport const ADD_SUJETOS = '@todo/ADD_SUJETOS'\nexport const ADD_SUJETO = '@todo/ADD_SUJETO'\nexport const CLEAR_SUJETO = '@todo/CLEAR_SUJETO'\n\ninterface AddSujetoRequest {\n  type: typeof ADD_SUJETO\n  payload: Partial<SujetoModel> | SujetoModel | undefined\n}\ninterface AddSujetosRequest {\n  type: typeof ADD_SUJETOS\n  payload: SujetosCampoDatoModel | undefined\n}\ninterface ClearExpedienteRequest {\n  type: typeof CLEAR_SUJETO\n  payload: SujetoModel | undefined\n}\n\nexport type SujetoActionsTypes =\n  | ClearExpedienteRequest\n  | AddSujetosRequest\n  | AddSujetoRequest\n","import {\n  SujetoActionsTypes,\n  ADD_SUJETO,\n  CLEAR_SUJETO,\n  SujetoState,\n  ADD_SUJETOS,\n  SujetosState,\n} from './sujetoType'\n\nconst initialState: SujetoState = {\n  sujeto: undefined,\n  sujetos: undefined,\n}\n\nexport const sujetoReducer = (\n  state = initialState,\n  action: SujetoActionsTypes,\n): SujetoState => {\n  switch (action.type) {\n    case ADD_SUJETO: {\n      return { ...state, sujeto: action.payload }\n    }\n    case ADD_SUJETOS: {\n      return { ...state, sujetos: action.payload }\n    }\n    case CLEAR_SUJETO: {\n      return { ...state, sujeto: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","import { CompanyCampoDatoModel } from '../models/companyCampoDatoModel'\nimport { CompanyModel } from '../models/companyModel'\nimport { CompanyModuloModel } from '../models/companyModuloModel'\n\nexport interface CompanyState {\n  company: CompanyModel | undefined\n  companies: CompanyCampoDatoModel | undefined\n  companyModulos: CompanyModuloModel[] | undefined\n  companyModulosSelected: CompanyModuloModel[] | undefined\n  parentCompany: CompanyModel | undefined\n  parentCompanyModulos: CompanyModuloModel[] | undefined\n}\n\nexport const ADD_COMPANIES = 'ADD_COMPANIES'\nexport const ADD_COMPANY = 'ADD_COMPANY'\nexport const CLEAR_COMPANY = '@todo/CLEAR_COMPANY'\nexport const ADD_COMPANY_MODULO = 'ADD_COMPANY_MODULO'\nexport const CLEAR_COMPANY_MODULO = 'CLEAR_COMPANY_MODULO'\nexport const ADD_COMPANY_MODULO_SELECTED = 'ADD_COMPANY_MODULO_SELECTED'\nexport const ADD_PARENT_COMPANY = 'ADD_PARENT_COMPANY'\nexport const ADD_COMPANY_MODULO_PARENT = 'ADD_COMPANY_MODULO_PARENT'\n\ninterface AddCompaniesRequest {\n  type: typeof ADD_COMPANIES\n  payload: CompanyCampoDatoModel | undefined\n}\ninterface AddCompanyRequest {\n  type: typeof ADD_COMPANY\n  payload: Partial<CompanyModel> | undefined\n}\ninterface AddParentCompanyRequest {\n  type: typeof ADD_PARENT_COMPANY\n  payload: Partial<CompanyModel> | undefined\n}\ninterface ClearCompanyRequest {\n  type: typeof CLEAR_COMPANY\n  payload: CompanyModel | undefined\n}\ninterface AddCompanyModulosRequest {\n  type: typeof ADD_COMPANY_MODULO\n  payload: CompanyModuloModel[] | undefined\n}\ninterface AddCompanyModulosSelectedRequest {\n  type: typeof ADD_COMPANY_MODULO_SELECTED\n  payload: CompanyModuloModel[] | undefined\n}\ninterface ClearCompanyModulosRequest {\n  type: typeof CLEAR_COMPANY_MODULO\n  payload: CompanyModuloModel[] | undefined\n}\n\ninterface AddParentCompanyModulosRequest {\n  type: typeof ADD_COMPANY_MODULO_PARENT\n  payload: CompanyModuloModel[] | undefined\n}\n\nexport type CompanyActionsTypes =\n  | AddCompaniesRequest\n  | AddCompanyRequest\n  | ClearCompanyRequest\n  | AddCompanyModulosRequest\n  | AddCompanyModulosSelectedRequest\n  | ClearCompanyModulosRequest\n  | AddParentCompanyRequest\n  | AddParentCompanyModulosRequest\n","import {\n  ADD_COMPANIES,\n  ADD_COMPANY,\n  CLEAR_COMPANY,\n  ADD_COMPANY_MODULO,\n  ADD_COMPANY_MODULO_SELECTED,\n  CompanyActionsTypes,\n  CompanyState,\n  CLEAR_COMPANY_MODULO,\n  ADD_PARENT_COMPANY,\n  ADD_COMPANY_MODULO_PARENT,\n} from './companiesType'\n\nconst initialState: CompanyState = {\n  company: undefined,\n  companies: undefined,\n  companyModulos: undefined,\n  companyModulosSelected: undefined,\n  parentCompany: undefined,\n  parentCompanyModulos: undefined,\n}\n\nexport const companyReducer = (\n  state = initialState,\n  action: CompanyActionsTypes,\n): CompanyState | undefined => {\n  switch (action.type) {\n    case ADD_COMPANIES: {\n      return { ...state, companies: action.payload }\n    }\n    case ADD_COMPANY: {\n      return { ...state, company: action.payload }\n    }\n    case ADD_PARENT_COMPANY: {\n      return { ...state, parentCompany: action.payload }\n    }\n    case CLEAR_COMPANY: {\n      return { ...state, company: action.payload }\n    }\n    case ADD_COMPANY_MODULO: {\n      return { ...state, companyModulos: action.payload }\n    }\n    case ADD_COMPANY_MODULO_SELECTED: {\n      return { ...state, companyModulosSelected: action.payload }\n    }\n    case CLEAR_COMPANY_MODULO: {\n      return { ...state, companyModulos: action.payload }\n    }\n    case ADD_COMPANY_MODULO_PARENT: {\n      return { ...state, parentCompanyModulos: action.payload }\n    }\n\n    default:\n      return state\n  }\n}\n","import { ModuloModel } from '../../models/moduloModel/moduloModel'\nimport { ModuloCampoDatoModel } from '../../models/moduloModel/moduloCampoDatoModel'\n\nexport interface ModuloState {\n  modulo: ModuloModel | undefined\n  modulos: ModuloCampoDatoModel | undefined\n}\n\nexport const ADD_MODULOS = '@todo/ADD_MODULOS'\nexport const ADD_MODULO = '@todo/ADD_MODULO'\nexport const CLEAR_MODULO = '@todo/CLEAR_MODULO'\n\ninterface AddModuloRequest {\n  type: typeof ADD_MODULO\n  payload: Partial<ModuloModel> | undefined\n}\ninterface AddModulosRequest {\n  type: typeof ADD_MODULOS\n  payload: ModuloCampoDatoModel | undefined\n}\ninterface ClearModuloRequest {\n  type: typeof CLEAR_MODULO\n  payload: ModuloModel | undefined\n}\n\nexport type ModuloActionsTypes =\n  | AddModuloRequest\n  | AddModulosRequest\n  | ClearModuloRequest\n","import { ADD_MODULO, ADD_MODULOS, CLEAR_MODULO, ModuloActionsTypes, ModuloState } from \"./moduloType\";\n\n\n const initialState: ModuloState = {\n\n  modulo: undefined,\n  modulos:undefined,\n\n}; \n\n export const moduloReducer = (\n  state = initialState,\n  action: ModuloActionsTypes\n): ModuloState => {\n  switch (action.type) {\n    \n    case ADD_MODULO: {\n      return { ...state, modulo: action.payload };\n    }\n    case ADD_MODULOS: {\n         return { ...state, modulos: action.payload };\n     }\n    case CLEAR_MODULO: {\n      return { ...state, modulo: action.payload };\n    }\n    default:\n      return state;\n  }\n}; \n","import { ComponenteModel } from '../../models/componenteModel/componenteModel'\n\nexport interface ComponenteState {\n  componente: ComponenteModel | undefined\n  componentes: ComponenteModel[] | undefined\n}\n\nexport const ADD_COMPONENTES = '@todo/ADD_COMPONENTES'\nexport const ADD_COMPONENTE = '@todo/ADD_COMPONENTE'\nexport const CLEAR_COMPONENTE = '@todo/CLEAR_COMPONENTE'\n\ninterface AddComponenteRequest {\n  type: typeof ADD_COMPONENTE\n  payload: Partial<ComponenteModel> | undefined\n}\ninterface AddComponentesRequest {\n  type: typeof ADD_COMPONENTES\n  payload: ComponenteModel[] | undefined\n}\ninterface ClearComponenteRequest {\n  type: typeof CLEAR_COMPONENTE\n  payload: ComponenteModel | undefined\n}\n\nexport type ComponenteActionsTypes =\n  | AddComponenteRequest\n  | AddComponentesRequest\n  | ClearComponenteRequest\n","import { ADD_COMPONENTE, ADD_COMPONENTES, CLEAR_COMPONENTE, ComponenteActionsTypes, ComponenteState } from \"./componenteType\";\n\n\n\n const initialState: ComponenteState = {\n\n componente: undefined,\n  componentes:undefined,\n\n}; \n\n export const componenteReducer = (\n  state = initialState,\n  action: ComponenteActionsTypes\n): ComponenteState => {\n  switch (action.type) {\n    \n    case ADD_COMPONENTE: {\n      return { ...state, componente: action.payload };\n    }\n    case ADD_COMPONENTES: {\n         return { ...state, componentes: action.payload };\n     }\n    case CLEAR_COMPONENTE: {\n      return { ...state, componente: action.payload };\n    }\n    default:\n      return state;\n  }\n}; \n","import { RoleModel } from '../../../../models/roleModel'\nimport { UsuarioCampoDatoModel } from '../models/usuarioCampoDatoModel'\nimport { UsuarioModel } from '../models/usuarioModel'\n\nexport interface UsuarioState {\n  usuario: UsuarioModel | undefined\n  usuarios: UsuarioCampoDatoModel | undefined\n  roles: RoleModel[] | undefined\n}\n\nexport const ADD_USUARIOS = 'ADD_USUARIOS'\nexport const ADD_USUARIO = 'ADD_USUARIO'\nexport const CLEAR_USUARIO = '@todo/CLEAR_USUARIO'\nexport const ADD_ROLES = 'ADD_ROLES'\n\ninterface AddUsuariosRequest {\n  type: typeof ADD_USUARIOS\n  payload: UsuarioCampoDatoModel | undefined\n}\ninterface AddUsuarioRequest {\n  type: typeof ADD_USUARIO\n  payload: Partial<UsuarioModel> | undefined\n}\ninterface ClearUsuarioRequest {\n  type: typeof CLEAR_USUARIO\n  payload: UsuarioModel | undefined\n}\n\ninterface AddRolesRequest {\n  type: typeof ADD_ROLES\n  payload: RoleModel[] | undefined\n}\n\nexport type UsuarioActionsTypes =\n  | AddUsuariosRequest\n  | AddUsuarioRequest\n  | ClearUsuarioRequest\n  | AddRolesRequest\n","import {\n  ADD_USUARIOS,\n  ADD_USUARIO,\n  CLEAR_USUARIO,\n  ADD_ROLES,\n  UsuarioActionsTypes,\n  UsuarioState,\n} from './usuarioType'\n\nconst initialState: UsuarioState = {\n  usuario: undefined,\n  usuarios: undefined,\n  roles: undefined,\n}\n\nexport const usuarioReducer = (\n  state = initialState,\n  action: UsuarioActionsTypes,\n): UsuarioState | undefined => {\n  switch (action.type) {\n    case ADD_USUARIOS: {\n      return { ...state, usuarios: action.payload }\n    }\n    case ADD_USUARIO: {\n      return { ...state, usuario: action.payload }\n    }\n    case CLEAR_USUARIO: {\n      return { ...state, usuario: action.payload }\n    }\n    case ADD_ROLES: {\n      return { ...state, roles: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","import { DatoUsuarioCampoDatoModel } from '../models/datoUsuarioCampoModel'\nimport { DatoUsuarioModel } from '../models/datoUsuarioModel'\n\nexport interface DatoUsuarioState {\n  datoUsuario: DatoUsuarioModel | undefined\n  datosUsuarios: DatoUsuarioCampoDatoModel | undefined\n}\n\nexport const ADD_DATOS_USUARIOS = 'ADD_DATOS_USUARIOS'\nexport const ADD_DATO_USUARIO = 'ADD_DATO_USUARIO'\nexport const CLEAR_DATO_USUARIO = 'CLEAR_DATO_USUARIO'\ninterface AddDatosUsuariosRequest {\n  type: typeof ADD_DATOS_USUARIOS\n  payload: DatoUsuarioCampoDatoModel | undefined\n}\ninterface AddDatoUsuarioRequest {\n  type: typeof ADD_DATO_USUARIO\n  payload: Partial<DatoUsuarioModel> | undefined\n}\ninterface ClearDatoUsuarioRequest {\n  type: typeof CLEAR_DATO_USUARIO\n  payload: DatoUsuarioModel | undefined\n}\n\nexport type DatoUsuarioActionsTypes =\n  | AddDatosUsuariosRequest\n  | AddDatoUsuarioRequest\n  | ClearDatoUsuarioRequest\n","import {\n  ADD_DATOS_USUARIOS,\n  ADD_DATO_USUARIO,\n  CLEAR_DATO_USUARIO,\n  DatoUsuarioActionsTypes,\n  DatoUsuarioState,\n} from './datoUsuarioType'\n\nconst initialState: DatoUsuarioState = {\n  datoUsuario: undefined,\n  datosUsuarios: undefined,\n}\n\nexport const datoUsuarioReducer = (\n  state = initialState,\n  action: DatoUsuarioActionsTypes,\n): DatoUsuarioState | undefined => {\n  switch (action.type) {\n    case ADD_DATOS_USUARIOS: {\n      return { ...state, datosUsuarios: action.payload }\n    }\n    case ADD_DATO_USUARIO: {\n      return { ...state, datoUsuario: action.payload }\n    }\n    case CLEAR_DATO_USUARIO: {\n      return { ...state, datoUsuario: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","import { ModuloComponenteModel } from '../../models/moduloComponenteModel/moduloComponenteModel'\nimport { ModuloComponenteCampoDatoModel } from '../../models/moduloComponenteModel/moduloComponenteCampoDatoModel'\n\nexport interface ModuloComponenteState {\n  moduloComponente: ModuloComponenteModel | undefined\n  moduloComponentes: ModuloComponenteCampoDatoModel | undefined\n}\n\nexport const ADD_MODULO_COMPONENTES = '@todo/ADD_MODULO_COMPONENTES'\nexport const ADD_MODULO_COMPONENTE = '@todo/ADD_MODULO_COMPONENTE'\nexport const CLEAR_MODULO_COMPONENTE = '@todo/CLEAR_MODULO_COMPONENTE'\n\ninterface AddModuloComponenteRequest {\n  type: typeof ADD_MODULO_COMPONENTE\n  payload: Partial<ModuloComponenteModel> | undefined\n}\ninterface AddModuloComponentesRequest {\n  type: typeof ADD_MODULO_COMPONENTES\n  payload: ModuloComponenteCampoDatoModel | undefined\n}\ninterface ClearModuloComponenteRequest {\n  type: typeof CLEAR_MODULO_COMPONENTE\n  payload: ModuloComponenteModel | undefined\n}\n\nexport type ModuloComponenteActionsTypes =\n  | AddModuloComponenteRequest\n  | AddModuloComponentesRequest\n  | ClearModuloComponenteRequest\n","import { ADD_MODULO_COMPONENTE, ADD_MODULO_COMPONENTES, CLEAR_MODULO_COMPONENTE, ModuloComponenteActionsTypes, ModuloComponenteState } from \"./moduloComponenteType\";\n\n\n\n const initialState: ModuloComponenteState = {\n\n  moduloComponente: undefined,\n  moduloComponentes:undefined,\n\n}; \n\n export const moduloComponenteReducer = (\n  state = initialState,\n  action: ModuloComponenteActionsTypes\n): ModuloComponenteState => {\n  switch (action.type) {\n    \n    case ADD_MODULO_COMPONENTE: {\n      return { ...state, moduloComponente: action.payload };\n    }\n    case ADD_MODULO_COMPONENTES: {\n         return { ...state, moduloComponentes: action.payload };\n     }\n    case CLEAR_MODULO_COMPONENTE: {\n      return { ...state, moduloComponente: action.payload };\n    }\n    default:\n      return state;\n  }\n}; \n","import { CalculadoraTransferenciaModel } from \"../../models/calculadoraTransferenciaModel\"\n\n\nexport interface CalculadoraTransferenciasState {\n  calculadoraTransferencias: CalculadoraTransferenciaModel | undefined\n}\n\nexport const ADD_CALCULADORA_TRANSFERENCIAS = 'ADD_CALCULADORA_TRANSFERENCIAS'\n\nexport const CLEAR_CALCULADORA_TRANSFERENCIAS = '@todo/CLEAR_CALCULADORA_TRANSFERENCIAS'\n\ninterface AddCalculadoraTransferenciasRequest {\n  type: typeof ADD_CALCULADORA_TRANSFERENCIAS\n  payload: Partial<CalculadoraTransferenciaModel> | undefined\n}\ninterface ClearCalculadoraTransferenciasRequest {\n  type: typeof CLEAR_CALCULADORA_TRANSFERENCIAS\n  payload: CalculadoraTransferenciaModel | undefined\n}\n\nexport type CalculadoraTransferenciasActionsTypes =\n  | AddCalculadoraTransferenciasRequest\n  | ClearCalculadoraTransferenciasRequest;\n","import {\n  ADD_CALCULADORA_TRANSFERENCIAS,\n  CalculadoraTransferenciasActionsTypes,\n  CalculadoraTransferenciasState,\n  CLEAR_CALCULADORA_TRANSFERENCIAS,\n} from './calculadoraTransferenciasType'\n\nconst initialState: CalculadoraTransferenciasState = {\n  calculadoraTransferencias: undefined,\n}\n\nexport const calculadoraTransferenciasReducer = (\n  state = initialState,\n  action: CalculadoraTransferenciasActionsTypes,\n): CalculadoraTransferenciasState | undefined => {\n  switch (action.type) {\n    case ADD_CALCULADORA_TRANSFERENCIAS: {\n      return { ...state, calculadoraTransferencias: action.payload }\n    }\n    case CLEAR_CALCULADORA_TRANSFERENCIAS: {\n      return { ...state, calculadoraTransferencias: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","import { ConfiguracionEnvioEmailModel } from '../../models/configuracionEnvioEmailModel'\n\nexport interface EmailState {\n  email: ConfiguracionEnvioEmailModel | undefined\n}\n\nexport const ADD_EMAIL = 'ADD_EMAIL'\n\nexport const CLEAR_EMAIL = '@todo/CLEAR_EMAIL'\n\ninterface AddEmailRequest {\n  type: typeof ADD_EMAIL\n  payload: Partial<ConfiguracionEnvioEmailModel> | undefined\n}\ninterface ClearEmailRequest {\n  type: typeof CLEAR_EMAIL\n  payload: ConfiguracionEnvioEmailModel | undefined\n}\n\nexport type EmailActionsTypes = AddEmailRequest | ClearEmailRequest\n","import { ADD_EMAIL, CLEAR_EMAIL, EmailActionsTypes, EmailState } from \"./emailType\"\n\nconst initialState: EmailState = {\n  email: undefined,\n}\n\nexport const emailReducer = (\n  state = initialState,\n  action: EmailActionsTypes,\n): EmailState | undefined => {\n  switch (action.type) {\n    \n    case ADD_EMAIL: {\n      return { ...state, email: action.payload }\n    }\n    case CLEAR_EMAIL: {\n      return { ...state, email: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","import { EnlaceModel } from '../../models/enlaceModel'\nimport { EnlacesModel } from '../../models/enlacesModel'\n\nexport interface EnlaceState {\n  enlace: EnlaceModel | undefined\n  enlaces: EnlaceModel[] | []\n  parentEnlaces: EnlaceModel[] | undefined\n}\n\nexport const ADD_ENLACE = 'ADD_ENLACE'\nexport const ADD_ENLACES = 'ADD_ENLACES'\nexport const ADD_PARENT_ENLACES = 'ADD_PARENT_ENLACES'\nexport const CLEAR_ENLACE = '@todo/CLEAR_ENLACE'\n\ninterface AddEnlaceRequest {\n  type: typeof ADD_ENLACE\n  payload: Partial<EnlaceModel> | undefined\n}\ninterface AddEnlacesRequest {\n  type: typeof ADD_ENLACES\n  payload: Partial<EnlacesModel[]> | undefined\n}\ninterface AddParentEnlacesRequest {\n  type: typeof ADD_PARENT_ENLACES\n  payload: Partial<EnlacesModel[]> | undefined\n}\ninterface ClearEnlaceRequest {\n  type: typeof CLEAR_ENLACE\n  payload: EnlaceModel | undefined\n}\n\nexport type EnlaceActionsTypes =\n  | AddEnlaceRequest\n  | ClearEnlaceRequest\n  | AddEnlacesRequest\n  | AddParentEnlacesRequest\n","import {\n  ADD_ENLACE,\n  ADD_ENLACES,\n  ADD_PARENT_ENLACES,\n  CLEAR_ENLACE,\n  EnlaceActionsTypes,\n  EnlaceState,\n} from './enlaceType'\n\nconst initialState: EnlaceState = {\n  enlace: undefined,\n  enlaces: undefined,\n  parentEnlaces: undefined,\n}\n\nexport const enlaceReducer = (\n  state = initialState,\n  action: EnlaceActionsTypes,\n): EnlaceState | undefined => {\n  switch (action.type) {\n    case ADD_ENLACE: {\n      return { ...state, enlace: action.payload }\n    }\n    case ADD_ENLACES: {\n      return { ...state, enlaces: action.payload }\n    }\n    case ADD_PARENT_ENLACES: {\n      return { ...state, parentEnlaces: action.payload }\n    }\n    case CLEAR_ENLACE: {\n      return { ...state, enlace: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","import { PerfilModel } from '../models/perfilModel'\nimport { PerfilesCampoDatoModel } from '../models/perfilCampoDatoModel'\n\nexport interface PerfilState {\n  perfil: PerfilModel | undefined\n  perfiles: PerfilModel[] | undefined\n}\n\nexport const ADD_PERFILES = '@todo/ADD_PERFILES'\nexport const ADD_PERFIL = '@todo/ADD_PERFIL'\nexport const CLEAR_PERFIL = '@todo/CLEAR_PERFIL'\n\ninterface AddPerfilRequest {\n  type: typeof ADD_PERFIL\n  payload: Partial<PerfilModel> | PerfilModel | undefined\n}\ninterface AddPerfilesRequest {\n  type: typeof ADD_PERFILES\n  payload: PerfilModel | undefined\n}\ninterface ClearPerfilRequest {\n  type: typeof CLEAR_PERFIL\n  payload: PerfilModel | undefined\n}\n\nexport type SujetoActionsTypes =\n  | ClearPerfilRequest\n  | AddPerfilesRequest\n  | AddPerfilRequest\n","import {\n  SujetoActionsTypes,\n  ADD_PERFIL,\n  CLEAR_PERFIL,\n  PerfilState as PerfilState,\n  ADD_PERFILES,\n} from './perfilType'\n\nconst initialState: PerfilState = {\n  perfil: undefined,\n  perfiles: undefined,\n}\n\nexport const perfilReducer = (\n  state = initialState,\n  action: SujetoActionsTypes,\n): PerfilState => {\n  switch (action.type) {\n    case ADD_PERFIL: {\n      return { ...state, perfil: action.payload }\n    }\n    case ADD_PERFILES: {\n      return { ...state, perfiles: action.payload }\n    }\n    case CLEAR_PERFIL: {\n      return { ...state, perfil: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","import { ModuloComponenteModel } from '../../models/moduloComponenteModel/moduloComponenteModel'\nimport { ModuloComponenteCampoDatoModel } from '../../models/moduloComponenteModel/moduloComponenteCampoDatoModel'\nimport { PlantillaCamposModel } from '../../models/plantillaCamposModel/plantillaCamposModel'\nimport { PlantillaModel } from '../../models/plantillaModel/plantillaModel'\n\nexport interface PlantillaState {\n  plantilla: PlantillaModel | undefined\n  plantillaCampos: PlantillaCamposModel[] | undefined\n}\n\nexport const ADD_PLANTILLA = '@todo/ADD_PLANTILLA'\nexport const ADD_PLANTILLA_CAMPOS = '@todo/ADD_PLANTILLA_CAMPOS'\n\ninterface AddPlantillateRequest {\n  type: typeof ADD_PLANTILLA\n  payload: Partial<PlantillaModel> | undefined\n}\ninterface AddPlantillaCamposRequest {\n  type: typeof ADD_PLANTILLA_CAMPOS\n  payload: Partial<PlantillaCamposModel[]> | undefined\n}\n\nexport type PlantillaActionsTypes =\n  | AddPlantillateRequest\n  | AddPlantillaCamposRequest\n","import {\n  ADD_PLANTILLA,\n  ADD_PLANTILLA_CAMPOS,\n  PlantillaActionsTypes,\n  PlantillaState,\n} from './plantillaComponenteType'\n\nconst initialState: PlantillaState = {\n  plantilla: undefined,\n  plantillaCampos: undefined,\n}\n\nexport const plantillaReducer = (\n  state = initialState,\n  action: PlantillaActionsTypes,\n): PlantillaState => {\n  switch (action.type) {\n    case ADD_PLANTILLA: {\n      return { ...state, plantilla: action.payload }\n    }\n    case ADD_PLANTILLA_CAMPOS: {\n      return { ...state, plantillaCampos: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { configReducer } from './reducers/configReducers'\nimport { expedienteReducer } from '../pages/expedientePage/redux/expedienteReducer'\nimport { administracionLegalReducer } from '../pages/administracionPages/legalAdministracion/redux/administracionLegalReducer'\n\nimport {\n  userReducer,\n  userResetReducer,\n} from '../pages/loginPage/redux/authReducer'\nimport { sharedUtilsReducer } from './reducers/sharedUtilsReducer'\nimport { administracionEmailReducer } from '../pages/administracionPages/emailAdministracion/redux/administracionEmailReducer'\nimport { sujetoReducer } from '../pages/companyAdministracionPages/sujetoPage/redux/sujetoReducer'\nimport { companyReducer } from '../pages/companyAdministracionPages/companyPage/redux/companiesReducer'\nimport { moduloReducer } from '../pages/companyAdministracionPages/plantillasAdministracion/redux/modulo/moduloReducer'\nimport { componenteReducer } from '../pages/companyAdministracionPages/plantillasAdministracion/redux/componente/componenteReducer'\nimport { usuarioReducer } from '../pages/usuarioAdministracionPages/usuarioPage/redux/usuarioReducer'\nimport { datoUsuarioReducer } from '../pages/usuarioAdministracionPages/datoUsuarioPage/redux/datoUsuarioReducer'\nimport { moduloComponenteReducer } from '../pages/companyAdministracionPages/plantillasAdministracion/redux/moduloComponente/moduloComponenteReducer'\nimport { calculadoraTransferenciasReducer } from '../pages/companyAdministracionPages/companyPage/redux/CalculadoraTransferencias/calculadoraTransferenciasReducer'\nimport { emailReducer } from '../pages/companyAdministracionPages/companyPage/redux/Email/emailReducer'\nimport { enlaceReducer } from '../pages/companyAdministracionPages/companyPage/redux/Enlace/enlaceReducer'\nimport { perfilReducer } from '../pages/administracionPages/perfilPage/redux/perfilReducer'\nimport { plantillaReducer } from '../pages/companyAdministracionPages/plantillasAdministracion/redux/plantilla/plantillaComponenteReducer'\n\nconst rootReducer = combineReducers({\n  expediente: expedienteReducer,\n  user: userReducer,\n  config: configReducer,\n  resetPasswd: userResetReducer,\n  administracionLegal: administracionLegalReducer,\n  administracionEmail: administracionEmailReducer,\n  sharedUtils: sharedUtilsReducer,\n  sujeto: sujetoReducer,\n  company: companyReducer,\n  modulo: moduloReducer,\n  componente: componenteReducer,\n  usuario: usuarioReducer,\n  datoUsuario: datoUsuarioReducer,\n  moduloComponente: moduloComponenteReducer,\n  calculadoraTransferencias: calculadoraTransferenciasReducer,\n  email: emailReducer,\n  enlace: enlaceReducer,\n  perfil: perfilReducer,\n  plantilla: plantillaReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './combineReducers'\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware)),\n)\n/* store.subscribe(() => {\n  console.log('State Updated')\n  console.log(store.getState())\n}) */\nexport default store\n","import {\n  ADD_LOGIN_SUCCESS,\n  ADD_LOGIN_FAIL,\n  ADD_LOGIN_ISALREADYLOGGED,\n  UserActionsTypes,\n  ADD_LOGIN_RESETPASSWORD,\n  UPDATE_THEME,\n} from './authType'\n\nimport { ForgotPasswordModel } from '../models/forgotPasswordModel'\nimport { ConfigModel } from '../../../models/usuario/configModel'\nimport { UserModel } from 'shared-models'\n\nexport const addLoggedUser = (\n  user: UserModel | undefined,\n): UserActionsTypes => ({\n  type: ADD_LOGIN_SUCCESS,\n  payload: user,\n})\n\nexport const addUnLoggedUser = (\n  user: UserModel | undefined,\n): UserActionsTypes => ({\n  type: ADD_LOGIN_FAIL,\n  payload: user,\n})\n\nexport const addIsAlreadyLogged = (\n  user: UserModel | undefined,\n): UserActionsTypes => ({\n  type: ADD_LOGIN_ISALREADYLOGGED,\n  payload: user,\n})\n\nexport const addRestablecerContrase√±a = (\n  user: ForgotPasswordModel | undefined,\n): UserActionsTypes => ({\n  type: ADD_LOGIN_RESETPASSWORD,\n  payload: user,\n})\n\nexport const addUpdateTheme = (\n  user: ConfigModel | undefined,\n): UserActionsTypes => ({\n  type: UPDATE_THEME,\n  payload: user,\n})\n","import { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { UserModel } from 'shared-models'\n\nimport { addIsAlreadyLogged } from '../../pages/loginPage/redux/authActions'\n\nexport function isAlreadyLoggedUser(url: string, history: any, dispatch: any) {\n  if (localStorage.getItem('user')) {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let usuario: UserModel = jsonConvert.deserializeObject(\n      JSON.parse(localStorage.getItem('user')!),\n      UserModel,\n    )\n    dispatch(addIsAlreadyLogged(usuario))\n    return true\n  } else {\n    return false\n  }\n}\n\nexport default {\n  isAlreadyLoggedUser,\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('CompanyModuloModel')\nexport class CompanyModuloModel {\n  @JsonProperty('IdCompany', Number)\n  IdCompany: number = 0\n\n  @JsonProperty('IdModulo', Number)\n  IdModulo: number = 0\n\n  @JsonProperty('Nombre', String)\n  Nombre: String = ''\n}\n","import { CompanyCampoDatoModel } from '../models/companyCampoDatoModel'\nimport { CompanyModel } from '../models/companyModel'\nimport { CompanyModuloModel } from '../models/companyModuloModel'\nimport {\n  ADD_COMPANIES,\n  ADD_COMPANY,\n  CLEAR_COMPANY,\n  ADD_COMPANY_MODULO,\n  CompanyActionsTypes,\n  CLEAR_COMPANY_MODULO,\n  ADD_COMPANY_MODULO_SELECTED,\n  ADD_PARENT_COMPANY,\n  ADD_COMPANY_MODULO_PARENT,\n} from './companiesType'\n\nexport const addCompanies = (\n  company: CompanyCampoDatoModel | undefined,\n): CompanyActionsTypes => ({\n  type: ADD_COMPANIES,\n  payload: company,\n})\nexport const addCompany = (\n  company: Partial<CompanyModel> | CompanyModel | undefined,\n): CompanyActionsTypes => ({\n  type: ADD_COMPANY,\n  payload: company,\n})\n\nexport const addParentCompany = (\n  company: Partial<CompanyModel> | CompanyModel | undefined,\n): CompanyActionsTypes => ({\n  type: ADD_PARENT_COMPANY,\n  payload: company,\n})\n\nexport const clearSujeto = (\n  sujeto: CompanyModel | undefined,\n): CompanyActionsTypes => ({\n  type: CLEAR_COMPANY,\n  payload: sujeto,\n})\n\nexport const clearCompanyModulos = (\n  company: CompanyModuloModel[] | undefined,\n): CompanyActionsTypes => ({\n  type: CLEAR_COMPANY_MODULO,\n  payload: company,\n})\n\nexport const addCompanyModulos = (\n  company: CompanyModuloModel[] | undefined,\n): CompanyActionsTypes => ({\n  type: ADD_COMPANY_MODULO,\n  payload: company,\n})\n\nexport const addCompanyModulosSelected = (\n  company: CompanyModuloModel[] | undefined,\n): CompanyActionsTypes => ({\n  type: ADD_COMPANY_MODULO_SELECTED,\n  payload: company,\n})\n\nexport const addParentCompanyModulos = (\n  company: CompanyModuloModel[] | undefined,\n): CompanyActionsTypes => ({\n  type: ADD_COMPANY_MODULO_PARENT,\n  payload: company,\n})\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('SujetoModel')\nexport class SujetoModel {\n  @JsonProperty('Id', Number, 0)\n  Id: Number = 0\n  @JsonProperty('NIF', String)\n  NIF: string = ''\n  @JsonProperty('Nombre', String)\n  Nombre: string = ''\n  @JsonProperty('IdCompany', Number)\n  IdCompany: Number = 0\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel } from 'shared-models'\nimport { SujetoModel } from './sujetoModel'\n\n@JsonObject('SujetosCampoDatoModel')\nexport class SujetosCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModel] || [])\n  Campos: ColumnModel[] = []\n  @JsonProperty('Datos', [SujetoModel] || [])\n  Datos: SujetoModel[] = []\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\n\nimport {\n  logType,\n  methodsEndPointType,\n  customLog,\n  checkStatusCode,\n} from 'shared-utils'\nimport { ForgotPasswordModel, UserModel } from 'shared-models'\n\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\n\nimport { SujetosCampoDatoModel } from '../models/sujetosCampoDatoModel'\nimport { SujetoModel } from '../models/sujetoModel'\nimport { authHeader } from 'shared-services'\n\nconst serviceName = 'authService'\n\nexport const getSujetos = async (\n  user: UserModel,\n): Promise<SujetosCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/sujeto`\n    let SujetosData: SujetosCampoDatoModel = new SujetosCampoDatoModel()\n    let datos\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        SujetosData = jsonConvert.deserializeObject(\n          response.data,\n          SujetosCampoDatoModel,\n        )\n      })\n      .catch((error) => {\n        showToast(\n          'No se han podido obtener los sujetos.',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return SujetosData\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\nexport async function getSujeto(\n  user: UserModel,\n  id: number,\n): Promise<SujetoModel> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Sujeto/${id}`\n\n  let sujeto: SujetoModel = new SujetoModel()\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    headers: authHeader(user!),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      sujeto = jsonConvert.deserializeObject(\n        response.data.Datos[0],\n        SujetoModel,\n      )\n    })\n    .catch((error) => {\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getSujeto.name,\n        methodsEndPointType.GET,\n      )\n      return {}\n    })\n\n  return sujeto\n}\nexport async function postSujeto(\n  user: UserModel,\n  sujeto: SujetoModel,\n): Promise<boolean> {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Sujeto`\n\n    const headers = {\n      Authorization: 'Bearer my-token',\n      'My-Custom-Header': 'foobar',\n    }\n\n    await axios.post(url, sujeto, { headers }).then((response) => {\n      checkStatusCode(response.status)\n      customLog(\n        `sujeto creado ${response.data.Id}`,\n        logType.INFO,\n        serviceName,\n        putSujeto.name,\n        methodsEndPointType.POST,\n      )\n      showToast('Compa√±ia creada', NotifyType.success, 5000)\n    })\n    return true\n  } catch (error) {\n    customLog(\n      `Error al crear Sujeto => ${error.message}`,\n      logType.ERROR,\n      serviceName,\n      postSujeto.name,\n      methodsEndPointType.POST,\n    )\n    return false\n  }\n}\nexport async function putSujeto(\n  user: UserModel,\n  sujeto: SujetoModel,\n): Promise<boolean> {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Sujeto`\n\n    const headers = {\n      Authorization: 'Bearer my-token',\n      'My-Custom-Header': 'foobar',\n    }\n    await axios\n      .put(url, sujeto, { headers })\n      .then((response) => {\n        checkStatusCode(response.status)\n        customLog(\n          `sujeto modificado ${sujeto.Id}`,\n          logType.INFO,\n          serviceName,\n          putSujeto.name,\n          methodsEndPointType.PUT,\n        )\n        showToast('Compa√±ia editada', NotifyType.success, 5000)\n      })\n      .catch((error) => {\n        customLog(\n          `Error al editar Sujeto => ${error.message}`,\n          logType.ERROR,\n          serviceName,\n          putSujeto.name,\n          methodsEndPointType.PUT,\n        )\n      })\n    return true\n  } catch (error) {\n    return false\n  }\n}\nexport async function getStructure(\n  user: UserModel,\n): Promise<SujetosCampoDatoModel> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Sujeto/Structure`\n\n  let sujeto: SujetosCampoDatoModel = new SujetosCampoDatoModel()\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    // headers: authHeader(user),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      sujeto = jsonConvert.deserializeObject(\n        response.data,\n        SujetosCampoDatoModel,\n      )\n    })\n    .catch((error) => {\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getStructure.name,\n        methodsEndPointType.GET,\n      )\n      return {}\n    })\n\n  return sujeto\n}\n\nexport function getMapperSujeto(sujetoData: any): SujetoModel {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let sujeto: SujetoModel = jsonConvert.deserializeObject(\n    sujetoData,\n    SujetoModel,\n  )\n  return sujeto\n}\n\n//TODO arreglar esto para que sea generio o directamente coger el user de redux\nexport const apiUrl = () => {\n  return 'https://portal2020api.azurewebsites.net/api/'\n}\n\nexport default {\n  createSujeto: postSujeto,\n  getSujetos,\n  apiUrl,\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('CompanyModel')\nexport class CompanyModel {\n  @JsonProperty('Id', Number)\n  Id: number = 0\n\n  @JsonProperty('Name', String)\n  Name: string = ''\n\n  @JsonProperty('Slogan', String)\n  Slogan: String = ''\n\n  @JsonProperty('IdentificationNumber', String)\n  IdentificationNumber: String = ''\n\n  @JsonProperty('ContactInformation', String)\n  ContactInformation: String = ''\n\n  @JsonProperty('PrincipalLogo', String)\n  PrincipalLogo: String = ''\n\n  @JsonProperty('SecondaryLogo', String)\n  SecondaryLogo: String = ''\n\n  @JsonProperty('NotificationsEmail', String)\n  NotificationsEmail: String = ''\n\n  // @JsonProperty('AllowChangePassword', Boolean)\n  // AllowChangePassword: boolean = false\n\n  @JsonProperty('Enabled', Boolean)\n  Enabled: boolean = false\n}\n\n@JsonObject('CompanyGridModel')\nexport class CompanyGridModel {\n  @JsonProperty('Id', Number)\n  Id: number = 0\n\n  @JsonProperty('Name', String)\n  Name: string = ''\n\n  @JsonProperty('Slogan', String)\n  Slogan: String = ''\n\n  @JsonProperty('IdentificationNumber', String)\n  IdentificationNumber: String = ''\n\n  @JsonProperty('ContactInformation', String)\n  ContactInformation: String = ''\n\n  @JsonProperty('NotificationsEmail', String)\n  NotificationsEmail: String = ''\n\n  // @JsonProperty('AllowChangePassword', Boolean)\n  // AllowChangePassword: boolean = false\n\n  // @JsonProperty('Enabled', Boolean)\n  // Enabled: boolean = false\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel } from 'shared-models'\nimport { CompanyGridModel, CompanyModel } from './companyModel'\n\n@JsonObject('CompanyCampoDatoModel')\nexport class CompanyCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModel] || [])\n  Campos: ColumnModel[] = []\n  @JsonProperty('Datos', [CompanyModel] || [])\n  Datos: CompanyModel[] = []\n}\n\n@JsonObject('CompanyCampoDatoGridModel')\nexport class CompanyCampoDatoGridModel {\n  @JsonProperty('Campos', [ColumnModel] || [])\n  Campos: ColumnModel[] = []\n  @JsonProperty('Datos', [CompanyGridModel] || [])\n  Datos: CompanyGridModel[] = []\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport jwt_decode from 'jwt-decode'\nimport {\n  logType,\n  methodsEndPointType,\n  customLog,\n  checkStatusCode,\n} from 'shared-utils'\nimport { ForgotPasswordModel, UserModel } from 'shared-models'\nimport { NotifyType, showToast } from '../../../utils/sharedUitls'\n\nconst serviceName = 'authService'\nexport const LoginUser = async (\n  username: string,\n  password: string,\n): Promise<UserModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let OldUrl = `https://portaldespachosapi-desarrollo.azurewebsites.net/api/Usuarios/authenticate`\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Account/login`\n    let user\n    let response = {}\n    const headers = {\n      Authorization: 'Bearer my-token',\n      'My-Custom-Header': 'foobar',\n    }\n\n    await axios\n      .post(\n        url,\n        {\n          Username: username,\n          Password: password,\n        },\n        { headers },\n      )\n      .then(async (response) => {\n        checkStatusCode(response.status)\n        user = decodeToken(response.data['access_token'])\n        customLog(\n          `Usuario logueado ${response.data.Id}`,\n          logType.INFO,\n          serviceName,\n          LoginUser.name,\n          methodsEndPointType.POST,\n        )\n        showToast('Usuario creado', NotifyType.success, 5000)\n        localStorage.setItem('user', JSON.stringify(user))\n      })\n      .catch((error) => {\n        showToast(error.response.data, NotifyType.error, 5000)\n        customLog(\n          `Error loguin usuario  => ${error.message}`,\n          logType.ERROR,\n          serviceName,\n          LoginUser.name,\n          methodsEndPointType.PUT,\n        )\n      })\n\n    return user\n  } catch (err: any) {\n    // Handle Error Here\n    customLog(\n      err[`message`],\n      logType.ERROR,\n      serviceName,\n      LoginUser.name,\n      methodsEndPointType.GET,\n    )\n    console.error(err)\n  }\n}\n\nexport const RecuperarContrase√±a = async (\n  usuario: string,\n): Promise<ForgotPasswordModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    const response = await axios.get(\n      `https://portaldespachosapi-desarrollo.azurewebsites.net/api/Usuarios/forgotpassword/` +\n        usuario,\n    )\n\n    let forgotPassword: ForgotPasswordModel = jsonConvert.deserializeObject(\n      response.data,\n      ForgotPasswordModel,\n    )\n\n    if (response.statusText == 'OK' && response.status == 200) {\n      //dispatch(usuarioState.isLoggedIn = true);\n      //localStorage.setItem(\"forgotPassword\", JSON.stringify(response.data));\n    }\n\n    return forgotPassword\n  } catch (err) {\n    // Handle Error Here\n    //showToast(\"No puede cambiar la contrase√±a, \", NotifyType.error, 5000);\n    console.log(err)\n    console.error(err)\n  }\n}\n\nexport const RestorePassword = async (\n  username: string,\n): Promise<UserModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Account/forgotPassword`\n    // let response\n    let response: any\n    const headers = {\n      Authorization: 'Bearer ',\n      'My-Custom-Header': 'foobar',\n    }\n\n    response = await axios\n      .post(\n        url,\n        {\n          Username: username,\n        },\n        { headers },\n      )\n      .then(async (response) => {\n        showToast(\n          'Se le ha enviado un correo con los pasos para poder recuperar su contrase√±a.',\n          NotifyType.success,\n          5000,\n        )\n        //        localStorage.setItem('user', JSON.stringify(user))\n      })\n      .catch((error) => {\n        showToast(\n          'No tiene permisos para recuperar la contrase√±a, pongase en contacto con su gestor√≠a',\n          NotifyType.info,\n          5000,\n        )\n      })\n\n    return response\n  } catch (err: any) {\n    // Handle Error Here\n    customLog(\n      err[`message`],\n      logType.ERROR,\n      serviceName,\n      LoginUser.name,\n      methodsEndPointType.GET,\n    )\n    console.error(err)\n  }\n}\n\nexport const EnviarMailResetPasswd = async (\n  contrase√±a: string,\n  repetirContrase√±a: string,\n): Promise<UserModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `https://portaldespachosapi-desarrollo.azurewebsites.net/api/Usuarios/authenticate`\n    const response = await axios.post(url, { contrase√±a, repetirContrase√±a })\n\n    let User: UserModel = jsonConvert.deserializeObject(\n      response.data,\n      UserModel,\n    )\n\n    if (response.statusText == 'OK' && response.status == 200) {\n      localStorage.setItem('user', JSON.stringify(response.data))\n    }\n    return User\n  } catch (err) {\n    // Handle Error Here\n    showToast(\n      'No existe el usuario o la contase√±a no coincide',\n      NotifyType.error,\n      5000,\n    )\n\n    console.error(err)\n  }\n}\n\nexport const restablecerContrase√±aCall = async (\n  Username: string,\n  Email: string,\n  Code: string,\n) => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    const changePasswd = { Username: Username, Email: Email, Code: Code }\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Account/ResetPassword`\n    const response = await axios.post(url, changePasswd)\n\n    if (response.statusText == 'OK' && response.status == 200) {\n      showToast('Email enviado correctamente', NotifyType.success, 5000)\n    }\n\n    return response.statusText\n  } catch (err) {\n    // Handle Error Here\n    showToast(\n      'No hemos podido enviar el Email, pruebe de nuevo.',\n      NotifyType.error,\n      5000,\n    )\n    console.log(err)\n    console.error(err)\n  }\n}\n\nexport const CambiarContrase√±aCall = async (\n  username: string,\n  password: string,\n  code: string,\n) => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Account/ResetPassword`\n\n    const json = JSON.stringify({\n      username: username,\n      password: password,\n      code: decodeURIComponent(code).replace(' ', '+'),\n    })\n\n    const response = await axios.post(url, json, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    if (response.statusText == 'OK' && response.status == 200) {\n      showToast(\n        '¬°Enhorabuena! su contrase√±a se ha cambiado correctamente',\n        NotifyType.success,\n        5000,\n      )\n    }\n\n    return response.statusText\n  } catch (err) {\n    // Handle Error Here\n    //showToast(\"No puede cambiar la contrase√±a, \", NotifyType.error, 5000);\n    console.log(err)\n    console.error(err)\n  }\n}\n\nexport const decodeToken = (token: string): UserModel => {\n  let user: UserModel = new UserModel()\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    var decoded: any = jwt_decode(token)\n    user = jsonConvert.deserializeObject(\n      {\n        ...(decoded as {}),\n        Token: token,\n        Expedientes:\n          decoded['Expedientes'] != undefined ? decoded['Expedientes'] : [],\n        Administracion:\n          decoded['Administracion'] != undefined\n            ? decoded['Administracion']\n            : [],\n        Calculadora:\n          decoded['Calculadora'] != undefined ? decoded['Calculadora'] : [],\n      },\n      UserModel,\n    )\n  } catch (error) {\n    console.error(error)\n  }\n\n  return user\n}\n\n//TODO arreglar esto para que sea generio o directamente coger el user de redux\nexport const authHeader = (user: UserModel) => {\n  return {\n    Authorization: 'Bearer ' + user.Token,\n  }\n}\n\n//TODO arreglar esto para que sea generio o directamente coger el user de redux\nexport const apiUrl = () => {\n  return 'https://portal2020api.azurewebsites.net/api/'\n}\n\nexport default {\n  LoginUser,\n  authHeader,\n  apiUrl,\n  CambiarContrase√±aCall,\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('CalculadoraTransferenciaModel')\nexport class CalculadoraTransferenciaModel {\n  @JsonProperty('Id', Number)\n  Id: number = 0\n\n  @JsonProperty('IdCompany', Number)\n  IdCompany: Number = 0\n\n  @JsonProperty('CuotaTurismos', Number)\n  CuotaTurismos: Number = 0\n\n  @JsonProperty('CuotaMotocicletas', Number)\n  CuotaMotocicletas: Number = 0\n\n  @JsonProperty('Mensaje', String)\n  Mensaje: string = ''\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { checkStatusCode, logType, methodsEndPointType } from 'shared-utils'\nimport { logger } from 'login-service'\nimport { customLog } from 'shared-utils'\nimport { authHeader } from '../../../loginPage/service/authService'\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport { CalculadoraTransferenciaModel } from '../models/calculadoraTransferenciaModel'\nimport { UserModel } from 'shared-models'\n\nconst serviceName = 'CalculadoraService'\n\nexport const getCalculadora = async (\n  user: UserModel,\n  idCompany: Number,\n): Promise<CalculadoraTransferenciaModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/CalculadoraTransferencia/GetByCompany/${idCompany}`\n    let CalculadoraData: CalculadoraTransferenciaModel =\n      new CalculadoraTransferenciaModel()\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        CalculadoraData = jsonConvert.deserializeObject(\n          response.data,\n          CalculadoraTransferenciaModel,\n        )\n      })\n      .catch((error) => {\n        showToast(\n          'No se han podido obtener de la calculadora.',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return CalculadoraData\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n\nexport const postCalculadora = async (\n  user: UserModel,\n  calculadora: CalculadoraTransferenciaModel | undefined,\n  idCompany: Number,\n): Promise<CalculadoraTransferenciaModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/CalculadoraTransferencia`\n    let calculadoraData: CalculadoraTransferenciaModel =\n      new CalculadoraTransferenciaModel()\n\n    await axios({\n      url: url,\n      method: 'POST',\n      headers: authHeader(user!),\n      data: {\n        IdCompany: idCompany,\n        CuotaTurismos: calculadora?.CuotaTurismos,\n        CuotaMotocicletas: calculadora?.CuotaMotocicletas,\n        Mensaje: calculadora?.CuotaMotocicletas,\n      },\n    })\n      .then((response) => {\n        console.log('Este es el Codigo de respuesta' + response.status)\n        checkStatusCode(response.status)\n        calculadoraData = jsonConvert.deserializeObject(\n          response.data,\n          CalculadoraTransferenciaModel,\n        )\n        // showToast(\n        //   'Configuraci√≥n Guardada correctamente!.',\n        //   NotifyType.success,\n        //   5000,\n        // )\n      })\n      .catch((error) => {\n        customLog(\n          `Error al crear Calculadora => ${error.response.data}`,\n          logType.ERROR,\n          serviceName,\n          postCalculadora.name,\n          methodsEndPointType.POST,\n        )\n        // showToast(\n        //   'No se han podido Guardar la configuraci√≥n del Email.',\n        //   NotifyType.error,\n        //   5000,\n        // )\n      })\n\n    return calculadoraData\n  } catch (error: any) {\n    showToast(error.response.data, NotifyType.error, 5000)\n  }\n}\nexport const putCalculadora = async (\n  user: UserModel,\n  calculadora: CalculadoraTransferenciaModel | undefined,\n  idCompany: Number,\n): Promise<CalculadoraTransferenciaModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/CalculadoraTransferencia`\n    let calculadoraData: CalculadoraTransferenciaModel =\n      new CalculadoraTransferenciaModel()\n\n    const headers = {\n      Authorization: 'Bearer my-token',\n      'My-Custom-Header': 'foobar',\n    }\n\n    await axios\n      .put(\n        url,\n        { ...calculadora, IdCompany: idCompany },\n        { headers: authHeader(user!) },\n      )\n      .then(async (response) => {\n        checkStatusCode(response.status)\n\n        customLog(\n          `CalculadoraTransferencia guardada CalculadoraTransferencia =>${response.data.Id}`,\n          logType.ERROR,\n          serviceName,\n          putCalculadora.name,\n          methodsEndPointType.PUT,\n        )\n        // showToast('CalculadoraTransferencia editada', NotifyType.success, 5000)\n      })\n      .catch((error: any) => {\n        customLog(\n          `Error al guardar CalculadoraTransferencia => ${error.message}`,\n          logType.ERROR,\n          serviceName,\n          putCalculadora.name,\n          methodsEndPointType.PUT,\n        )\n      })\n\n    // await axios({\n    //   url: url,\n    //   method: 'PUT',\n    //   headers: authHeader(user!),\n    //   data: {\n    //     IdCompany: idCompany,\n    //     CuotaTurismos: calculadora?.CuotaTurismos,\n    //     CuotaMotocicletas: calculadora?.CuotaMotocicletas,\n    //     Mensaje: calculadora?.CuotaMotocicletas,\n    //   },\n    // })\n    //   .then((response) => {\n    //     console.log('Este es el Codigo de respuesta' + response.status)\n    //     checkStatusCode(response.status)\n    //     calculadoraData = jsonConvert.deserializeObject(\n    //       response.data,\n    //       CalculadoraTransferenciaModel,\n    //     )\n    //     showToast(\n    //       'Configuraci√≥n Guardada correctamente!.',\n    //       NotifyType.success,\n    //       5000,\n    //     )\n    //   })\n    //   .catch((error) => {\n    //     showToast(\n    //       'No se han podido Guardar la configuraci√≥n del Email.',\n    //       NotifyType.error,\n    //       5000,\n    //     )\n    //   })\n\n    return calculadoraData\n  } catch (error: any) {\n    showToast(error.response.data, NotifyType.error, 5000)\n    /*   customLog(\n      `Error al crear Compa√±ia => ${error.response.data}`,\n      logType.ERROR,\n      serviceName,\n      postCompany.name,\n      methodsEndPointType.POST,\n    ) */\n  }\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('ConfiguracionEnvioEmailModel')\nexport class ConfiguracionEnvioEmailModel {\n  @JsonProperty('Id', Number)\n  Id: Number = 0\n\n  @JsonProperty('IdCompany', Number)\n  IdCompany: Number = 0\n\n  @JsonProperty('ServidorSMTP', String)\n  ServidorSMTP: string = ''\n\n  @JsonProperty('PuertoSMTP', Number)\n  PuertoSMTP: Number = 0\n\n  @JsonProperty('UsaSSL', Boolean)\n  UsaSSL: Boolean = false\n\n  @JsonProperty('NombreMostrar', String)\n  NombreMostrar: string = ''\n\n  @JsonProperty('DireccionEmail', String)\n  DireccionEmail: string = ''\n\n  @JsonProperty('UsuarioEmail', String)\n  UsuarioEmail: string = ''\n\n  @JsonProperty('PasswordEmail', String)\n  PasswordEmail: string = ''\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport {\n  checkStatusCode,\n  customLog,\n  logType,\n  methodsEndPointType,\n} from 'shared-utils'\nimport { logger } from 'login-service'\nimport { authHeader } from 'shared-services'\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport { ConfiguracionEnvioEmailModel } from '../models/configuracionEnvioEmailModel'\nimport { UserModel } from 'shared-models'\n\nconst serviceName = 'EmailService'\nexport const getEmail = async (\n  user: UserModel,\n  idCompany: Number,\n): Promise<ConfiguracionEnvioEmailModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url =\n      `${process.env.REACT_APP_API_URL_CORE}/ConfiguracionEnvioEmail/GetByCompany/` +\n      idCompany\n    let EmailData: ConfiguracionEnvioEmailModel =\n      new ConfiguracionEnvioEmailModel()\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        EmailData = jsonConvert.deserializeObject(\n          response.data,\n          ConfiguracionEnvioEmailModel,\n        )\n      })\n      .catch((error) => {\n        console.log('error: ', error)\n        showToast(\n          'No se han podido obtener la configuraci√≥n del Email.',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return EmailData\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n\nexport const postEmail = async (\n  user: UserModel,\n  email: ConfiguracionEnvioEmailModel | undefined,\n  idCompany: Number,\n): Promise<ConfiguracionEnvioEmailModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/ConfiguracionEnvioEmail`\n    let EmailData: ConfiguracionEnvioEmailModel =\n      new ConfiguracionEnvioEmailModel()\n    await axios({\n      url: url,\n      method: 'POST',\n      headers: authHeader(user!),\n      data: {\n        IdCompany: idCompany,\n        ServidorSMTP: email?.ServidorSMTP,\n        PuertoSMTP: email?.PuertoSMTP,\n        UsaSSL: email?.UsaSSL,\n        NombreMostrar: email?.NombreMostrar,\n        DireccionEmail: email?.DireccionEmail,\n        UsuarioEmail: email?.UsuarioEmail,\n        PasswordEmail: email?.PasswordEmail,\n      },\n    })\n      .then((response) => {\n        console.log('Este es el Codigo de respuesta' + response.status)\n        checkStatusCode(response.status)\n        EmailData = jsonConvert.deserializeObject(\n          response.data,\n          ConfiguracionEnvioEmailModel,\n        )\n        // showToast(\n        //   'Configuraci√≥n Guardada correctamente!.',\n        //   NotifyType.success,\n        //   5000,\n        // )\n      })\n      .catch((error) => {\n        /*   customLog(\n          `Error al crear Calculadora => ${error.response.data}`,\n          logType.ERROR,\n          serviceName,\n          postEmail.name,\n          methodsEndPointType.POST,\n        ) */\n        showToast(\n          'No se han podido Guardar la configuraci√≥n del Email.',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return EmailData\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n\nexport const putEmail = async (\n  user: UserModel,\n  email: ConfiguracionEnvioEmailModel | undefined,\n  idCompany: Number,\n): Promise<ConfiguracionEnvioEmailModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/ConfiguracionEnvioEmail`\n    let EmailData: ConfiguracionEnvioEmailModel =\n      new ConfiguracionEnvioEmailModel()\n\n    await axios\n      .put(url, email, { headers: authHeader(user!) })\n      .then(async (response) => {\n        checkStatusCode(response.status)\n        customLog(\n          `Configuraci√≥n de email editada =>     ${response.data.Id}`,\n          logType.ERROR,\n          serviceName,\n          putEmail.name,\n          methodsEndPointType.PUT,\n        )\n        // showToast('Configuraci√≥n de email editada', NotifyType.success, 5000)\n      })\n      .catch((error) => {\n        customLog(\n          `Error al guardar ConfiguracionEnvioEmail => ${error.message}`,\n          logType.ERROR,\n          serviceName,\n          putEmail.name,\n          methodsEndPointType.PUT,\n        )\n      })\n\n    return EmailData\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('EnlaceModel')\nexport class EnlaceModel {\n  @JsonProperty('Id', Number)\n  Id: number = 0\n\n  @JsonProperty('IdCompany', Number)\n  IdCompany: number = 0\n\n  @JsonProperty('IdTipoEnlace', Number)\n  IdTipoEnlace: number = 0\n\n  @JsonProperty('EnlaceValue', String)\n  EnlaceValue: string = ''\n\n  @JsonProperty('CodigoTipoEnlace', String)\n  CodigoTipoEnlace: string = ''\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { UserModel } from 'shared-models'\n// import { UserModel } from 'shared-models'\nimport { authHeader } from 'shared-services'\nimport {\n  checkStatusCode,\n  customLog,\n  logType,\n  methodsEndPointType,\n} from 'shared-utils'\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport { EnlaceModel } from '../models/enlaceModel'\n\nconst serviceName = 'EnlaceService'\nexport const getEnlaces = async (\n  user: UserModel,\n  idCompany: Number,\n): Promise<EnlaceModel[] | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Enlace/GetByCompany/${idCompany}`\n    let enlacesData: EnlaceModel[] = []\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        checkStatusCode(response.status)\n        enlacesData = jsonConvert.deserializeArray(response.data, EnlaceModel)\n      })\n      .catch((error) => {\n        showToast(\n          'No se han podido obtener la configuraci√≥n Legal. => ' + error,\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return enlacesData\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n\nexport const postEnlaces = async (\n  user: UserModel,\n  enlaces: EnlaceModel[] | undefined,\n  idCompany: number,\n): Promise<Boolean> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Enlace`\n\n    const headers = {\n      Authorization: 'Bearer my-token',\n      'My-Custom-Header': 'foobar',\n    }\n    enlaces = fillCompany(enlaces!, idCompany)\n    await axios.post(url, enlaces, { headers }).then(async (response) => {\n      checkStatusCode(response.status)\n      customLog(\n        `enlaces creados ${response.data.Id}`,\n        logType.INFO,\n        serviceName,\n        postEnlaces.name,\n        methodsEndPointType.POST,\n      )\n      // showToast('Enlaces creados', NotifyType.success, 5000)\n    })\n    return true\n  } catch (error) {\n    // showToast(error.response.data, NotifyType.error, 5000)\n    customLog(\n      `Error al crear enlaces => ${error.response.data}`,\n      logType.ERROR,\n      serviceName,\n      postEnlaces.name,\n      methodsEndPointType.POST,\n    )\n    return false\n  }\n}\n\nexport const putEnlaces = async (\n  user: UserModel,\n  enlaces: EnlaceModel[] | undefined,\n  idCompany: number,\n): Promise<Boolean> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Enlace`\n\n    const headers = {\n      Authorization: 'Bearer my-token',\n      'My-Custom-Header': 'foobar',\n    }\n    enlaces = fillCompany(enlaces!, idCompany)\n    await axios\n      .put(url, enlaces, { headers })\n      .then((response) => {\n        checkStatusCode(response.status)\n        customLog(\n          `Enlaces modificados`,\n          logType.INFO,\n          serviceName,\n          putEnlaces.name,\n          methodsEndPointType.PUT,\n        )\n        showToast('Enlaces modificados', NotifyType.success, 5000)\n      })\n      .catch((error) => {\n        customLog(\n          `Error al editar enlaces`,\n          logType.ERROR,\n          serviceName,\n          putEnlaces.name,\n          methodsEndPointType.PUT,\n        )\n      })\n    return true\n  } catch (error) {\n    return false\n  }\n}\n\nconst fillCompany = (\n  enlaces: EnlaceModel[],\n  idCompany: number,\n): EnlaceModel[] => {\n  for (const enlace of enlaces) {\n    enlace.IdCompany = idCompany\n  }\n  return enlaces\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { authHeader } from 'shared-services'\nimport {\n  checkStatusCode,\n  customLog,\n  logType,\n  methodsEndPointType,\n} from 'shared-utils'\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport { putSujeto } from '../../sujetoPage/service/sujetoService'\nimport {\n  CompanyCampoDatoGridModel,\n  CompanyCampoDatoModel,\n} from '../models/companyCampoDatoModel'\nimport { CompanyModel } from '../models/companyModel'\nimport { postCalculadora, putCalculadora } from './calculadoraService'\nimport { postEmail, putEmail } from './emailService'\nimport { CompanyModuloModel } from '../models/companyModuloModel'\nimport { CalculadoraTransferenciaModel } from '../models/calculadoraTransferenciaModel'\nimport { postEnlaces, putEnlaces } from './enlacesService'\nimport { EnlaceModel } from '../models/enlaceModel'\nimport { CompanyState } from '../redux/companiesType'\nimport { ConfiguracionEnvioEmailModel } from '../models/configuracionEnvioEmailModel'\nimport { UserModel } from 'shared-models'\nimport { isSuperAdministrador } from '../../../../utils/allowAuthUtil'\nconst serviceName = 'CompaniesService'\n\nexport const getCompanies = async (\n  user: UserModel,\n): Promise<CompanyCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/companies`\n\n    let companies: CompanyCampoDatoModel = new CompanyCampoDatoModel()\n\n    const config = {\n      headers: { Authorization: `Bearer ${user.Token}` },\n    }\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        companies = jsonConvert.deserializeObject(\n          response.data,\n          CompanyCampoDatoModel,\n        )\n      })\n      .catch((error) => {\n        customLog(\n          null,\n          logType.ERROR,\n          serviceName,\n          getCompanies.name,\n          methodsEndPointType.GET,\n        )\n        showToast(\n          'No se han podido obtener las compa√±ias.',\n          NotifyType.error,\n          5000,\n        )\n        checkStatusCode(error.request.status)\n      })\n\n    return companies\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\nexport async function getCompany(\n  user: UserModel,\n  id: number,\n): Promise<CompanyModel> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Companies/${id}`\n\n  let company: CompanyModel = new CompanyModel()\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    headers: authHeader(user!),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      company = jsonConvert.deserializeObject(response.data, CompanyModel)\n      company.Enabled = company.Enabled ? false : true\n    })\n    .catch((error) => {\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getCompany.name,\n        methodsEndPointType.GET,\n      )\n      showToast('No se ha podido obtener las compa√±ia.', NotifyType.error, 5000)\n      checkStatusCode(error.request.status)\n    })\n\n  return company\n}\nexport async function postCompany(\n  user: UserModel,\n  company: CompanyModel,\n  calculadoraState: CalculadoraTransferenciaModel | undefined,\n  enlaceState: EnlaceModel[] | undefined,\n  companyState: CompanyState | undefined,\n  emailState: ConfiguracionEnvioEmailModel | undefined,\n): Promise<boolean> {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/companies`\n    company.Enabled = company.Enabled ? false : true\n    await axios\n      .post(url, company, { headers: authHeader(user!) })\n      .then(async (response) => {\n        checkStatusCode(response.status)\n        customLog(\n          `compa√±ia creada ${response.data.Id}`,\n          logType.INFO,\n          serviceName,\n          putSujeto.name,\n          methodsEndPointType.POST,\n        )\n        await postCalculadora(user, calculadoraState, response.data.Id)\n        await postEnlaces(user, enlaceState, response.data.Id)\n        await postEmail(user, emailState, response.data.Id)\n        if (isSuperAdministrador(user)) {\n          await postCompanyModulo(\n            user,\n            companyState?.companyModulos,\n            response.data.Id,\n          )\n        }\n\n        showToast('Compa√±ia creada', NotifyType.success, 5000)\n      })\n    return true\n  } catch (error: any) {\n    showToast(error.response.data, NotifyType.error, 5000)\n    customLog(\n      `Error al crear Compa√±ia => ${error.response.data}`,\n      logType.ERROR,\n      serviceName,\n      postCompany.name,\n      methodsEndPointType.POST,\n    )\n    checkStatusCode(error.request.status)\n    return false\n  }\n}\nexport async function putCompany(\n  user: UserModel,\n  company: CompanyModel,\n  calculadoraState: CalculadoraTransferenciaModel | undefined,\n  enlaceState: EnlaceModel[] | undefined,\n  companyState: CompanyState | undefined,\n  emailState: ConfiguracionEnvioEmailModel | undefined,\n): Promise<boolean> {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Companies`\n    company.Enabled = company.Enabled ? false : true\n    await axios\n      .put(url, company, { headers: authHeader(user!) })\n      .then(async (response) => {\n        checkStatusCode(response.status)\n        if (calculadoraState?.Id != 0) {\n          await putCalculadora(user, calculadoraState, company.Id)\n        } else {\n          await postCalculadora(user, calculadoraState, company.Id)\n        }\n        if (emailState?.Id != 0 && emailState?.Id != undefined) {\n          await putEmail(user, emailState, company.Id)\n        } else {\n          await postEmail(user, emailState, company.Id)\n        }\n\n        if (isSuperAdministrador(user)) {\n          await postCompanyModulo(\n            user,\n            companyState?.companyModulos != undefined\n              ? companyState.companyModulos\n              : [],\n            company.Id,\n          )\n        }\n        if (isSuperAdministrador(user)) {\n          await putEnlaces(user, enlaceState, company.Id)\n        }\n        customLog(\n          `Compa√±ia modificada ${company.Id}`,\n          logType.INFO,\n          serviceName,\n          putCompany.name,\n          methodsEndPointType.PUT,\n        )\n\n        showToast('Compa√±ia editada', NotifyType.success, 5000)\n      })\n      .catch((error) => {\n        customLog(\n          `Error al editar Compa√±ia => ${error.message}`,\n          logType.ERROR,\n          serviceName,\n          putCompany.name,\n          methodsEndPointType.PUT,\n        )\n        checkStatusCode(error.request.status)\n      })\n    return true\n  } catch (error) {\n    return false\n  }\n}\nexport async function deleteCompany(user: UserModel, idCompany: number) {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/companies/${idCompany}`\n\n    await axios.delete(url, { headers: authHeader(user!) }).then((response) => {\n      checkStatusCode(response.status)\n      customLog(\n        `compa√±ia elminada`,\n        logType.INFO,\n        serviceName,\n        putSujeto.name,\n        methodsEndPointType.POST,\n      )\n      showToast('Compa√±ia elminada', NotifyType.success, 5000)\n    })\n    return true\n  } catch (error: any) {\n    if (error.response.status == 400) {\n      showToast(error.response.data, NotifyType.error, 5000)\n    }\n    customLog(\n      `Error al crear Compa√±ia => ${error.response.data}`,\n      logType.ERROR,\n      serviceName,\n      postCompany.name,\n      methodsEndPointType.POST,\n    )\n    checkStatusCode(error.request.status)\n    return false\n  }\n}\nexport async function getStructure(\n  user: UserModel,\n): Promise<CompanyCampoDatoGridModel> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Companies/Structure`\n\n  let company: CompanyCampoDatoGridModel = new CompanyCampoDatoGridModel()\n\n  const config = {\n    headers: { Authorization: `Bearer ${user.Token}` },\n  }\n\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    headers: authHeader(user!),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      company = jsonConvert.deserializeObject(\n        response.data,\n        CompanyCampoDatoGridModel,\n      )\n    })\n    .catch((error) => {\n      checkStatusCode(error.request.status)\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getStructure.name,\n        methodsEndPointType.GET,\n      )\n      return {}\n    })\n\n  return company\n}\n\nexport async function getCompanyModulos(\n  user: UserModel,\n  idCompany: number,\n): Promise<CompanyModuloModel[] | undefined> {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    /*     let url = `${process.env.REACT_AP‚à´P_API_URL}/Administracion/EmailConfig/`; */\n    let url = `${process.env.REACT_APP_API_URL_CORE}/CompanyModulo/${idCompany}`\n    let companyModulo: CompanyModuloModel[] = []\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        companyModulo = jsonConvert.deserializeArray(\n          response.data,\n          CompanyModuloModel,\n        )\n      })\n      .catch((error) => {\n        showToast(\n          'No se han podido obtener los modulos de la compa√±ia.',\n          NotifyType.error,\n          5000,\n        )\n        checkStatusCode(error.request.status)\n        return []\n      })\n\n    return companyModulo\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\nexport async function postCompanyModulo(\n  user: UserModel,\n  companyModulos: CompanyModuloModel[] | undefined,\n  idCompany: number,\n): Promise<boolean> {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/CompanyModulo`\n    if (companyModulos?.length! > 0) {\n      companyModulos?.map((x) => {\n        x.IdCompany = idCompany\n      })\n    }\n    await axios\n      .post(url, companyModulos, { headers: authHeader(user!) })\n      .then(async (response) => {\n        checkStatusCode(response.status)\n        customLog(\n          `compa√±ia creada ${response.data.Id}`,\n          logType.INFO,\n          serviceName,\n          postCompanyModulo.name,\n          methodsEndPointType.POST,\n        )\n      })\n    return true\n  } catch (error: any) {\n    // showToast(error.response.data, NotifyType.error, 5000)\n    customLog(\n      `Error al crear modulos y sus gestorias => ${error.response.data}`,\n      logType.ERROR,\n      serviceName,\n      postCompany.name,\n      methodsEndPointType.POST,\n    )\n    checkStatusCode(error.request.status)\n    return false\n  }\n}\n\nexport function getMapperCompany(companyData: any): CompanyModel {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let company: CompanyModel = jsonConvert.deserializeObject(\n    companyData,\n    CompanyModel,\n  )\n  return company\n}\n","import { useState, useCallback, useEffect } from 'react'\n\nexport const useScreenSize = () => {\n  const [screenSize, setScreenSize] = useState(getScreenSize())\n  const onSizeChanged = useCallback(() => {\n    setScreenSize(getScreenSize())\n  }, [])\n\n  useEffect(() => {\n    subscribe(onSizeChanged)\n\n    return () => {\n      unsubscribe(onSizeChanged)\n    }\n  }, [onSizeChanged])\n\n  return screenSize\n}\n\nexport const useScreenSizeGrid = () => {\n  const [screenSize, setScreenSize] = useState(getScreenSize())\n  var gridheight = ''\n  const onSizeChanged = useCallback(() => {\n    setScreenSize(getScreenSize())\n  }, [])\n\n  useEffect(() => {\n    subscribe(onSizeChanged)\n\n    return () => {\n      unsubscribe(onSizeChanged)\n    }\n  }, [onSizeChanged])\n\n  gridheight = screenSize.isXSmall ? '300' : '600'\n  gridheight = screenSize.isSmall ? '400' : '600'\n  gridheight = screenSize.isMedium ? '600' : '600'\n  gridheight = screenSize.isLarge ? '760' : '600'\n\n  return gridheight\n}\n\nexport const useScreenSizeClass = () => {\n  const screenSize = useScreenSize()\n\n  if (screenSize.isLarge) {\n    return 'screen-large'\n  }\n\n  if (screenSize.isMedium) {\n    return 'screen-medium'\n  }\n\n  if (screenSize.isSmall) {\n    return 'screen-small'\n  }\n\n  return 'screen-x-small'\n}\n\nlet handlers: any[] = []\nconst xSmallMedia = window.matchMedia('(max-width: 599.99px)')\nconst smallMedia = window.matchMedia(\n  '(min-width: 600px) and (max-width: 959.99px)',\n)\nconst mediumMedia = window.matchMedia(\n  '(min-width: 960px) and (max-width: 1279.99px)',\n)\nconst largeMedia = window.matchMedia('(min-width: 1280px)')\n\n;[xSmallMedia, smallMedia, mediumMedia, largeMedia].forEach((media) => {\n  media.addListener((e) => {\n    e.matches && handlers.forEach((handler) => handler())\n  })\n})\n\nconst subscribe = (handler: () => void) => handlers.push(handler)\n\nconst unsubscribe = (handler: () => void) => {\n  handlers = handlers.filter((item) => item !== handler)\n}\n\nfunction getScreenSize() {\n  return {\n    isXSmall: xSmallMedia.matches,\n    isSmall: smallMedia.matches,\n    isMedium: mediumMedia.matches,\n    isLarge: largeMedia.matches,\n  }\n}\n","import notify from 'devextreme/ui/notify'\nimport { Moment } from 'moment'\nimport { Console } from 'winston/lib/winston/transports'\nimport { addCompany } from '../pages/companyAdministracionPages/companyPage/redux/companiesActions'\nimport {\n  postCompany,\n  putCompany,\n} from '../pages/companyAdministracionPages/companyPage/services/companiesServices'\nimport { useScreenSize } from './media-query'\nvar { DateTime } = require('luxon')\n\nexport const getFileIcon = (file: string): string => {\n  //En archivos con alg√∫n punto en el nombre esto no funciona\n  // let index = file.indexOf('.')\n  // let type = ''\n  // if (index != -1) {\n  //   type = file.substring(index + 1, file.length)\n  // }\n  let type = file.split('.').pop() ?? ''\n\n  switch (type.toUpperCase()) {\n    case 'PDF':\n      return 'pdffile'\n    case 'DOCX':\n      return 'docxfile'\n    case 'DOC':\n      return 'docfile'\n    case 'XLS':\n      return 'xlsfile'\n    case 'XLSX':\n      return 'xlsxfile'\n    case 'TXT':\n      return 'txtfile'\n    case 'JPG':\n    case 'PNG':\n    case 'BMP':\n      return 'image'\n    default:\n      return 'file'\n  }\n}\nexport function reloadPage() {\n  // The last \"domLoading\" Time //\n  var currentDocumentTimestamp = new Date(\n    performance.timing.domLoading,\n  ).getTime()\n  // Current Time //\n  var now = Date.now()\n  // Ten Seconds //\n  var tenSec = 10 * 1000\n  // Plus Ten Seconds //\n  var plusTenSec = currentDocumentTimestamp + tenSec\n  if (now > plusTenSec) {\n    window.location.reload()\n  } else {\n  }\n}\nexport enum NotifyType {\n  info = 'info',\n  success = 'success',\n  warning = 'warning',\n  error = 'error',\n}\n\nexport const showToast = (\n  text: string,\n  type: NotifyType,\n  timer?: number,\n): any => {\n  return notify(text, type, timer != undefined ? timer : 1200)\n}\n\ninterface Icurrency {\n  style: string\n  currency: string\n  useGrouping: boolean\n  minimumSignificantDigits: number\n  type: string\n  precision: number\n}\n\nexport const getCurrency = (): Icurrency => {\n  let location = window.localStorage.getItem('lenguage')\n  let defaultCurrency: Icurrency = {\n    style: 'currency',\n    currency: 'EUR',\n    useGrouping: true,\n    minimumSignificantDigits: 4,\n    type: 'currency',\n    precision: 2,\n  }\n  switch (location) {\n    case 'es-ES':\n      return defaultCurrency\n    default:\n      return defaultCurrency\n  }\n}\n\nexport const getCookie = (cname: string) => {\n  var name = cname + '='\n  var decodedCookie = decodeURIComponent(document.cookie)\n  var ca = decodedCookie.split(';')\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i]\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1)\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length)\n    }\n  }\n  return ''\n}\n\nexport function getBoolean(value: string | boolean | number | null) {\n  switch (value) {\n    case true:\n    case 'true':\n    case 1:\n    case '1':\n    case 'on':\n    case 'yes':\n      return true\n    default:\n      return false\n  }\n}\n\nexport enum FormatType {\n  date = 'dd/MM/yyyy',\n  currency = 'currency',\n}\n\nexport const getColumnAlignment = (type: String): String => {\n  return type == 'decimal' || type == 'number' ? 'Right' : 'Left'\n}\n\nexport const getColumnType = (type: String, format: String): any => {\n  if (format != '') {\n    switch (format) {\n      case 'percent':\n        return \"##0' %'\" //el formato por defecto multiplica por 100 y nosotros recibimos el valor ya multiplicado\n      case 'currency':\n        return getCurrency()\n      default:\n        return format\n    }\n  }\n  switch (type) {\n    case 'currency':\n      return getCurrency()\n    case 'string':\n      return null\n    case 'number':\n      if (format == 'decimal') {\n        return getCurrency()\n      }\n      return null\n    case 'date':\n      return FormatType.date\n    case 'datetime':\n      return FormatType.date\n    case 'boolean':\n      return 'boolean'\n    case null:\n      if (format == 'float') {\n        return getCurrency()\n      }\n      return 'object'\n    // case null:\n    //   return \"datetime\";\n    default:\n      return null\n  }\n}\nexport const getAlignment = (type: String): String => {\n  switch (type) {\n    case 'currency':\n      return 'right'\n    default:\n      return 'left'\n  }\n}\n\nexport function isNotEmpty(value: any) {\n  return value !== undefined && value !== null && value !== ''\n}\nexport function getParameters(value: string) {\n  var url_string = window.location.href //window.location.href\n  var url = new URL(url_string)\n  var valorParametro = url.searchParams.get(value)\n\n  return valorParametro\n}\nexport function isDateTime(value: Moment): boolean {\n  if (value != undefined) {\n    if (DateTime.isDateTime(value)) {\n      if (value.year.toString() === '1') return false\n    }\n  }\n  return true\n}\n\nexport function logout() {\n  localStorage['recordarUsuario'] = 'false'\n  localStorage.removeItem('user')\n  window.location.reload()\n}\n\nexport function checkStatusCode(code: number) {\n  if (code == 401) {\n    localStorage['recordarUsuario'] = 'false'\n    // localStorage.removeItem(\"recordarUsuario\");\n    localStorage.removeItem('user')\n    localStorage.removeItem('storage')\n    window.location.reload()\n  }\n}\n\nexport function getDxType(type: string): string {\n  switch (type) {\n    case 'date':\n      return 'dxDateBox'\n      break\n    case 'number':\n      return 'dxNumberBox'\n      break\n    default:\n      return 'dxTextBox'\n      break\n  }\n}\n\nexport enum methodsEndPointType {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  PATCH = 'PATCH',\n  DELETE = 'DELETE',\n}\nexport enum logType {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\n//temporal tama√±os formulario\nexport function getSize(field: string): number {\n  switch (field) {\n    case 'Descripcion':\n      return 3\n      break\n    case 'Nomcliente':\n      return 2\n    case 'Nomproveedor':\n      return 2\n    case 'Nomtransmitente':\n      return 2\n    case 'Comentario':\n      return 3\n    default:\n      return 0\n      break\n  }\n}\n\n/**\n * Cambio de posicionamiento de las flechas de filtro del grid\n */\n\nexport function ReplaceheaderFilterArrows() {\n  // column caption\n  //document.querySelector(\".dx-header-filter-indicator\")!.style.(\"font-weight\", \"bold\");\n  //document.querySelector(\".dx-datagrid-text-content.dx-text-content-alignment-right.dx-header-filter-indicator\")!.classList.remove(\"dx-text-content-alignment-right\");\n  //document.querySelector(\".dx-datagrid-text-content.dx-text-content-alignment-right.dx-header-filter-indicator\")!.classList.add(\"dx-text-content-alignment-left\");\n\n  var float1 = document.querySelector('.dx-column-indicators') as HTMLElement\n  float1.style.float = 'right'\n  var float2 = document.querySelector(\n    '.dx-datagrid-text-content.dx-text-content-alignment-right.dx-header-filter-indicator',\n  ) as HTMLElement\n  float2!.style.float = 'right'\n\n  //$(\".dx-header-filter-indicator\").css(\"font-weight\", \"bold\");\n  //$(\".dx-datagrid-text-content.dx-text-content-alignment-right.dx-header-filter-indicator\").removeClass(\"dx-text-content-alignment-right\").addClass(\"dx-text-content-alignment-left\");\n  // filter & sort icon\n  /*  $(\".dx-column-indicators\").css(\"float\", \"right\");  \n    $(\".dx-sort\").css(\"float\", \"right\");  \n    // header cell text alignment  \n    $('[role=\"columnheader\"]').css(\"text-align\", \"left\");   */\n}\nexport function warningFormPrevent(\n  stateForm: Boolean | undefined,\n  formRef: any,\n) {\n  if (stateForm == false && formRef != null) {\n    formRef.current!.instance.resetValues()\n  }\n}\n\nexport async function convertBase64(file: File) {\n  var arrayBuffer = await file.arrayBuffer()\n  var blob = new Blob([arrayBuffer])\n\n  var reader = new FileReader()\n  reader.onload = function (event) {\n    const base64Org = event.target!.result?.toString().split(',')\n    const base64: string | undefined = base64Org![1].toString()\n  }\n\n  return reader.readAsDataURL(blob)\n}\n\nexport async function onSubmit(\n  userState: any,\n  company: any,\n  calculadoraState: any,\n  enlaceState: any,\n  companyState: any,\n  emailState: any,\n  dispatch: any,\n) {\n  let result: boolean = false\n  if (!company?.Id) {\n    dispatch(addCompany({ ...company, Id: 0 }))\n  }\n  if (company?.Id) {\n    result = await putCompany(\n      userState!.user!,\n      company,\n      calculadoraState,\n      enlaceState?.enlaces!,\n      companyState,\n      emailState,\n    )\n  } else {\n    result = await postCompany(\n      userState!.user!,\n      company!,\n      calculadoraState,\n      enlaceState?.enlaces!,\n      companyState,\n      emailState,\n    )\n  }\n\n  if (result) {\n    localStorage.setItem(\n      'parentCompanyModulos',\n      JSON.stringify(companyState?.companyModulos),\n    )\n    return true\n    /*    const refreshButton = document.getElementsByClassName(\n       'dx-icon dx-icon-refresh',\n     )[0] as HTMLElement\n     refreshButton.click() */\n    //props.setShowForm(false)\n  } else {\n    return false\n  }\n}\n\nexport const colCountByScreen = {\n  xs: 1,\n  sm: 2, //2\n  md: 2, //3\n  lg: 2, //4\n}\n\nexport const refreshGrid = (props: any, showFrom: boolean) => {\n  const refreshButton = document.getElementsByClassName(\n    'dx-icon dx-icon-refresh',\n  )[0] as HTMLElement\n  refreshButton.click()\n  props.setShowForm(showFrom)\n}\n\nexport enum rolesName {\n  SUPERADMINISTRADOR = 'Superadministrador',\n  ADMINISTRADOR = 'Administrador',\n  EMPLEADO = 'Empleado',\n  CUENTA = 'Cuenta',\n  COLABORADOR = 'Colaborador',\n  TRANSMITENTE = 'Transmitente',\n  CLIENTE = 'Cliente',\n}\n\nexport const GridHeight = () => {\n  let gridheight = '600'\n  const { isXSmall, isSmall, isMedium, isLarge } = useScreenSize()\n  gridheight = isXSmall ? '300' : '600'\n  gridheight = isSmall ? '400' : '600'\n  gridheight = isMedium ? '600' : '600'\n  gridheight = isLarge ? '700' : '600'\n\n  return gridheight\n}\n","import { UserModel } from 'shared-models'\nimport { UsuarioModel } from '../pages/usuarioAdministracionPages/usuarioPage/models/usuarioModel'\nimport { modulos } from './allowModuloUtil'\nimport { rolesName } from './sharedUitls'\n\nexport enum modulosClaims {\n  EDIT = 'Edit',\n  CREATE = 'Create',\n  READ = 'Read',\n  VIEW = 'View',\n  DELETE = 'Delete',\n  ALL = 'All',\n}\n\nexport function isRolAllowed(\n  user: UserModel,\n  modulo: modulos,\n  claims: modulosClaims[],\n): Boolean {\n  if (user.Administracion.length > 0) {\n    return true\n    //return hasClaims(user.Administracion, claims)\n  } else {\n    switch (modulo) {\n      case modulos.ADMINISTRACION:\n        if (user.Administracion.length > 0) {\n          return true\n          //return hasClaims(user.Administracion, claims)\n        }\n        break\n      case modulos.EXPEDIENTES:\n        if (user.Expedientes.length > 0) {\n          return hasClaims(user.Expedientes, claims)\n        }\n        break\n\n      default:\n        return false\n    }\n    return false\n  }\n}\n\nexport function isSuperAdministrador(user: UserModel) {\n  if (user.role == rolesName.SUPERADMINISTRADOR) {\n    return true\n  }\n  return false\n}\nexport function isAdministrador(user: UserModel) {\n  if (user.role == rolesName.ADMINISTRADOR) {\n    return true\n  }\n  return false\n}\nexport function isNormalUser(user: UserModel) {\n  if (\n    user.role == rolesName.EMPLEADO ||\n    user.role == rolesName.CLIENTE ||\n    user.role == rolesName.TRANSMITENTE ||\n    user.role == rolesName.COLABORADOR ||\n    user.role\n      .split(',')\n      .find(\n        (x) =>\n          x == rolesName.CLIENTE ||\n          x == rolesName.TRANSMITENTE ||\n          x == rolesName.COLABORADOR,\n      )\n  ) {\n    return true\n  }\n  return false\n}\n\nexport function isNormalUserByIdRole(user: UsuarioModel) {\n  if (user) {\n    if (user.IdRole == 1 || user.IdRole == 2) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function hasClaims(\n  moduloClaims: string[],\n  permisos: modulosClaims[],\n): Boolean {\n  const array = Object.values(permisos) as string[]\n  moduloClaims = moduloClaims.filter((x, i, a) => a.indexOf(x) == i)\n  if (array.length == moduloClaims.filter((x) => array.includes(x)).length)\n    return true\n  return false\n}\n","import { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { UserModel } from 'shared-models'\nimport { CompanyModuloModel } from '../pages/companyAdministracionPages/companyPage/models/companyModuloModel'\nimport { isRolAllowed } from './allowAuthUtil'\nexport enum modulos {\n  EXPEDIENTES = 'Expedientes',\n  ADMINISTRACION = 'Administracion',\n  CALCULADORA = 'Calculadora',\n  SUPERADMINISTRADOR = 'SupeAdministrador',\n}\n\nexport function isModuloAllowed(user: UserModel, modulo: modulos): Boolean {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n  if (modulo == modulos.ADMINISTRACION) {\n    return isRolAllowed(user, modulo, [])\n  }\n  if (localStorage.getItem('parentCompanyModulos') != 'undefined') {\n    const modulosParent = jsonConvert.deserializeArray(\n      JSON.parse(localStorage.getItem('parentCompanyModulos')!),\n      CompanyModuloModel,\n    )\n    var findModulo = modulosParent.find((x) => x.Nombre == modulo)\n    if (!findModulo) {\n      return false\n    } else return true\n  } else return false\n}\n","import React, { ReactElement } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { useDispatch } from 'react-redux'\n\nimport './notFound.css'\nimport { isAlreadyLoggedUser } from '../../redux/utils/reduxUtils'\nimport { Button } from 'devextreme-react'\nfunction NotFound(config: any): ReactElement {\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  return (\n    <div>\n      {config.data.type == 1 ? (\n        <div className=\"mainNotfound\">\n          <div /* className=\"message-box\" */>\n            <h1>¬°Ops!</h1>\n            <h3> No tienes permisos para ver esta p√°gina.</h3>\n\n            <div>\n              <Button\n                width={120}\n                text=\"Volver\"\n                type=\"default\"\n                stylingMode=\"contained\"\n                onClick={() => {\n                  history.goBack()\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          {' '}\n          <div>\n            <h1>¬°Ops!</h1>\n            <h3> Pagina no encontrada...</h3>\n            <p>(404)</p>\n            <div>\n              <Button\n                width={120}\n                text=\"Volver\"\n                type=\"default\"\n                stylingMode=\"contained\"\n                onClick={() => {\n                  history.goBack()\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default NotFound\n","import {\n  SHOW_LOADER,\n  HIDE_LOADER,\n  ConfigActionsTypes,\n} from \"../types/configTypes\";\n\nexport const addShowLoader = (\n  visible: boolean | undefined\n): ConfigActionsTypes => ({\n  type: SHOW_LOADER,\n  payload: visible,\n});\n\nexport const addHideLoader = (\n  visible: boolean | undefined\n): ConfigActionsTypes => ({\n  type: HIDE_LOADER,\n  payload: visible,\n});\n","import {\n  CosteCampoDatoGridModel,\n  CosteCampoDatoModel,\n} from '../models/coste/expedienteCosteModel'\nimport { DocumentoCampoDatoModel } from '../models/documento/documentoModel'\nimport {\n  ExpedienteCampoDatoModel,\n  ExpedienteGridCampoDatoModel,\n} from '../models/ExpedienteCampoDatoModel'\nimport { ExpedienteModel } from '../models/expedienteModel'\nimport { ExpedienteTableModel } from '../models/expedienteTableModel'\nimport { TareaPendienteCampoDatoModel } from '../models/tarePendiente/tareaPendienteModel'\nimport { VehiculoCampoDatoModel } from '../models/vehiculo/vehiculoModel'\nimport {\n  ExpedienteActionsTypes,\n  ADD_EXPEDIENTES,\n  ADD_EXPEDIENTE,\n  CLEAR_EXPEDIENTE,\n  ADD_COSTE,\n  ADD_VEHICULO,\n  ADD_COSTES,\n  ADD_TAREASPENDIENTES,\n  ADD_DOCUMENTOS,\n} from './expedienteType'\n\nexport const addExpedientes = (\n  expedientes: ExpedienteTableModel | undefined,\n): ExpedienteActionsTypes => ({\n  type: ADD_EXPEDIENTES,\n  payload: expedientes,\n})\n\nexport const addExpediente = (\n  expediente: ExpedienteCampoDatoModel | undefined,\n): ExpedienteActionsTypes => ({\n  type: ADD_EXPEDIENTE,\n  payload: expediente,\n})\n\nexport const clearExpediente = (\n  expediente: ExpedienteModel | undefined,\n): ExpedienteActionsTypes => ({\n  type: CLEAR_EXPEDIENTE,\n  payload: expediente,\n})\n\nexport const addCoste = (\n  coste: CosteCampoDatoModel | undefined,\n): ExpedienteActionsTypes => ({\n  type: ADD_COSTE,\n  payload: coste,\n})\n\nexport const addCostes = (\n  costes: CosteCampoDatoGridModel | undefined,\n): ExpedienteActionsTypes => ({\n  type: ADD_COSTES,\n  payload: costes,\n})\n\nexport const addVehiculo = (\n  vehiculo: VehiculoCampoDatoModel | undefined,\n): ExpedienteActionsTypes => ({\n  type: ADD_VEHICULO,\n  payload: vehiculo,\n})\n\nexport const addTareaspendientes = (\n  tareasPendientes: TareaPendienteCampoDatoModel | undefined,\n): ExpedienteActionsTypes => ({\n  type: ADD_TAREASPENDIENTES,\n  payload: tareasPendientes,\n})\n\nexport const addDocumentos = (\n  documentos: DocumentoCampoDatoModel | undefined,\n): ExpedienteActionsTypes => ({\n  type: ADD_DOCUMENTOS,\n  payload: documentos,\n})\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('ColumnModel')\nexport class ColumnModel {\n  @JsonProperty('Nombre', String)\n  Nombre: string = ''\n\n  @JsonProperty('Tipo', String)\n  Tipo: string = ''\n\n  @JsonProperty('Texto', String)\n  Texto: String = ''\n\n  @JsonProperty('Format', String)\n  Format: String = ''\n}\n\n@JsonObject('ColumnModelCore')\nexport class ColumnModelCore {\n  @JsonProperty('Nombre', String)\n  Nombre: string = ''\n  @JsonProperty('Tipo', String)\n  Tipo: string = ''\n  @JsonProperty('Texto', String)\n  Texto: String = ''\n  @JsonProperty('Format', String)\n  Format: String = ''\n  @JsonProperty('Size', Number)\n  Size: number = 0\n  @JsonProperty('Visible', Boolean)\n  Visible: boolean = false\n}\n","import { JsonObject, JsonProperty } from \"json2typescript\";\nimport { ColumnModel } from \"../../../models/columnModel\";\n@JsonObject(\"ExpedienteTableModel\")\nexport class ExpedienteTableModel {\n  @JsonProperty(\"Campos\", [ColumnModel] || [])\n  Campos: ColumnModel[] = [];\n\n  // @JsonProperty(\"Datos\", [ExpedienteModel] || [])\n  // Datos: ExpedienteModel[] = [];\n}\n","import { JsonConverter, JsonCustomConvert } from 'json2typescript'\n\nvar { DateTime } = require('luxon')\n\n// export class DateUtil {\n//   constructor() {}\n\n//   getDate(): Date {\n//     return new Date();\n//   }\n\n//   getDateFormat(date: string): Date {\n//     try {\n//       return DateTime.fromISO(date);\n//     } catch (error) {\n//       console.error(error);\n//       return DateTime.local();\n//     }\n//   }\n// }\n\n@JsonConverter\nexport class DateConverter implements JsonCustomConvert<Date> {\n  dateUtil: DateUtil\n  constructor() {\n    this.dateUtil = new DateUtil()\n  }\n\n  serialize(data: Date) {\n    return ''\n  }\n  deserialize(data: any): Date {\n    if (data != null) {\n      return this.dateUtil.getDateFormat(data)\n    }\n    return this.dateUtil.getDateFormat('0001-01-01T00:00:00')\n  }\n}\n\nexport class DateUtil {\n  constructor() {}\n\n  getDate(): Date {\n    return new Date()\n  }\n\n  getDateFormat(date: string): Date {\n    try {\n      return DateTime.fromISO(date).toLocaleString(DateTime.DATE_SHORT)\n    } catch (error) {\n      console.error(error)\n      return DateTime.local()\n    }\n  }\n}\n","import {\n  JsonConverter,\n  JsonCustomConvert,\n  JsonObject,\n  JsonProperty,\n} from 'json2typescript'\nimport { DateConverter } from '../../../utils/dateUtils'\n\n@JsonObject('ExpedienteModel')\nexport class ExpedienteModel {\n  @JsonProperty('Id', Number, 0)\n  Id: number = 0\n  @JsonProperty('SerieExpediente', String)\n  SerieExpediente: string = ''\n  @JsonProperty('NumeroExpediente', Number)\n  NumeroExpediente: number = 0\n  @JsonProperty('FechaInicio', DateConverter)\n  FechaInicio: undefined\n  @JsonProperty('FechaFinalPrevista', DateConverter)\n  FechaFinalPrevista: undefined\n  @JsonProperty('FechaFinalReal', DateConverter)\n  FechaFinalReal: undefined\n  @JsonProperty('Descripcion', String)\n  Descripcion: string = ''\n  @JsonProperty('Comentario', String)\n  Comentario: string = ''\n  @JsonProperty('Referencia', String)\n  Referencia: string = ''\n  @JsonProperty('TotalAnticipos', Number)\n  TotalAnticipos: number = 0\n  @JsonProperty('IdPunteo', Number)\n  IdPunteo: number = 0\n  @JsonProperty('Matricula', String)\n  Matricula: string = ''\n  @JsonProperty('Marca', String)\n  Marca: string = ''\n  @JsonProperty('Modelo', String)\n  Modelo: string = ''\n  @JsonProperty('Bastidor', String)\n  Bastidor: string = ''\n  // @JsonProperty('FechaFabricacion', DateConverter)\n  // FechaFabricacion: undefined\n  // @JsonProperty('FechaITV', DateConverter)\n  // FechaITV: undefined\n  @JsonProperty('FechaMatricula', DateConverter)\n  FechaMatricula: undefined\n  @JsonProperty('CodigoGestoria', String)\n  CodigoGestoria: string = ''\n  @JsonProperty('CodigoCliente', String)\n  CodigoCliente: string = ''\n  @JsonProperty('Nomcliente', String)\n  Nomcliente: string = ''\n  @JsonProperty('Proveedor', String)\n  Proveedor: string = ''\n  @JsonProperty('NombreProveedor', String)\n  NombreProveedor: string = ''\n  @JsonProperty('Transmitente', String)\n  Transmitente: string = ''\n  @JsonProperty('NombreTransmitente', String)\n  NombreTransmitente: string = ''\n  @JsonProperty('FacturadoSiNo', Boolean)\n  FacturadoSiNo: undefined\n  @JsonProperty('TotalIva', Number)\n  TotalIva: number = 0\n  @JsonProperty('TotalFactura', Number)\n  TotalFactura: number = 0\n  @JsonProperty('FechaTrafico', Number)\n  FechaTrafico: number = 0\n  @JsonProperty('IdVehiculo', Number)\n  IdVehiculo: number = 0\n  @JsonProperty('FechaCaducidadItv', DateConverter)\n  FechaCaducidadItv: undefined\n  @JsonProperty('Estado', String)\n  Estado: string = ''\n}\n\n@JsonObject('ExpedienteGridModel')\nexport class ExpedienteGridModel {\n  @JsonProperty('Id', Number, 0)\n  Id: number = 0\n  @JsonProperty('IdKey', Number, 0)\n  IdKey: number = 0\n  @JsonProperty('IdVehiculo', Number)\n  IdVehiculo: Number = 0\n  @JsonProperty('SerieExpediente', String)\n  SerieExpediente: string = ''\n  @JsonProperty('NumeroExpediente', Number)\n  NumeroExpediente: number = 0\n  @JsonProperty('FechaInicio', DateConverter)\n  FechaInicio: undefined\n  @JsonProperty('FechaFinalPrevista', DateConverter)\n  FechaFinalPrevista: undefined\n  @JsonProperty('FechaFinalReal', DateConverter)\n  FechaFinalReal: undefined\n  // @JsonProperty('NIF', String)\n  // NIF: string = ''\n  // @JsonProperty('Nombre', String)\n  // Nombre: string = ''\n  @JsonProperty('Referencia', String)\n  Referencia: string = ''\n  @JsonProperty('Matricula', String)\n  Matricula: string = ''\n  @JsonProperty('Marca', String)\n  Marca: string = ''\n  @JsonProperty('Modelo', String)\n  Modelo: string = ''\n  @JsonProperty('FechaMatricula', DateConverter)\n  FechaMatricula: undefined\n}\n\n@JsonObject('ExpedienteDetalleModel')\nexport class ExpedienteDetalleModel {\n  // @JsonProperty('Id', Number, 0)\n  // Id: number = 0\n  // @JsonProperty('CodigoGestoria', Number)\n  // CodigoGestoria: Number = 0\n  @JsonProperty('SerieExpediente', String)\n  SerieExpediente: string = ''\n  @JsonProperty('NumeroExpediente', Number)\n  NumeroExpediente: number = 0\n  @JsonProperty('Descripcion', String)\n  Descripcion: string = ''\n  @JsonProperty('Estado', String)\n  Estado: string = ''\n  @JsonProperty('FechaInicio', DateConverter)\n  FechaInicio: undefined\n  @JsonProperty('FechaFinalPrevista', DateConverter)\n  FechaFinalPrevista: undefined\n  @JsonProperty('FechaFinalReal', DateConverter)\n  FechaFinalReal: undefined\n  @JsonProperty('CodigoCliente', String)\n  CodigoCliente: string = ''\n  @JsonProperty('NombreCliente', String)\n  NombreCliente: string = ''\n  @JsonProperty('Colaborador', String)\n  Colaborador: string = ''\n  @JsonProperty('NombreColaborador', String)\n  NombreColaborador: string = ''\n  @JsonProperty('Transmitente', String)\n  Transmitente: string = ''\n  @JsonProperty('NombreTransmitente', String)\n  NombreTransmitente: string = ''\n  @JsonProperty('Referencia', String)\n  Referencia: string = ''\n  @JsonProperty('Comentario', String)\n  Comentario: string = ''\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel } from 'shared-models'\nimport { ColumnModelCore } from '../../../models/columnModel'\nimport {\n  ExpedienteDetalleModel,\n  ExpedienteGridModel,\n  ExpedienteModel,\n} from './expedienteModel'\n\n@JsonObject('ExpedienteGridCampoDatoModel')\nexport class ExpedienteGridCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModel] || [])\n  Campos: ColumnModel[] = []\n  @JsonProperty('Datos', [ExpedienteGridModel] || [])\n  Datos: ExpedienteGridModel[] = []\n}\n\n// // @JsonObject('ColumnModelCore')\n// export class ColumnModelCore {\n//   @JsonProperty('Nombre', String)\n//   Nombre: string = ''\n//   @JsonProperty('Tipo', String)\n//   Tipo: string = ''\n//   @JsonProperty('NombTextore', String)\n//   Texto: String = ''\n//   @JsonProperty('Format', String)\n//   Format: String = ''\n//   @JsonProperty('Size', Number)\n//   Size: number = 0\n//   @JsonProperty('Visible', Boolean)\n//   Visible: boolean = false\n// }\n\n@JsonObject('ExpedienteCampoDatoModel')\nexport class ExpedienteCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModelCore] || [])\n  Campos: ColumnModelCore[] = []\n  @JsonProperty('Datos', [ExpedienteDetalleModel] || [])\n  Datos: ExpedienteDetalleModel[] = []\n}\n\n// @JsonObject('ColumnModelCore')\n// export class ColumnModelCore {\n//   @JsonProperty('Nombre', String)\n//   Nombre: string = ''\n//   @JsonProperty('Tipo', String)\n//   Tipo: string = ''\n//   @JsonProperty('NombTextore', String)\n//   Texto: String = ''\n//   @JsonProperty('Format', String)\n//   Format: String = ''\n//   @JsonProperty('Size', Number)\n//   Size: number = 0\n//   @JsonProperty('Visible', Boolean)\n//   Visible: boolean = false\n// }\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport {\n  /* checkStatusCode, */\n  isNotEmpty,\n  logType,\n  methodsEndPointType,\n} from 'shared-utils'\nimport { ExpedienteTableModel } from '../models/expedienteTableModel'\nimport { UserModel } from 'shared-models'\nimport { logger } from 'login-service'\nimport { customLog } from 'shared-utils'\nimport { authHeader } from '../../loginPage/service/authService'\nimport { NotifyType, showToast } from '../../../utils/sharedUitls'\nimport {\n  ExpedienteCampoDatoModel,\n  ExpedienteGridCampoDatoModel,\n} from '../models/ExpedienteCampoDatoModel'\n\nconst serviceName = 'ExpedienteService'\n\nexport async function getStructure(\n  user: UserModel,\n): Promise<ExpedienteGridCampoDatoModel> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Expedientes/GetStructure`\n\n  let expediente: ExpedienteGridCampoDatoModel =\n    new ExpedienteGridCampoDatoModel()\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    headers: authHeader(user),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      expediente = jsonConvert.deserializeObject(\n        response.data,\n        ExpedienteGridCampoDatoModel,\n      )\n    })\n    .catch((error) => {\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getStructure.name,\n        methodsEndPointType.GET,\n      )\n      checkStatusCode(error.request.status)\n      return {}\n    })\n\n  return expediente\n}\n\nexport const getAll = async (\n  user: UserModel,\n): Promise<ExpedienteTableModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL}/Expedientes`\n    let ExpedienteTable: ExpedienteTableModel = new ExpedienteTableModel()\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        checkStatusCode(response.status)\n        ExpedienteTable = jsonConvert.deserializeObject(\n          response.data,\n          ExpedienteTableModel,\n        )\n      })\n      .catch((error) => {\n        showToast(\n          'No se han podido cargar los expendientes',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return ExpedienteTable\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n\nexport const getExpediente = async (\n  expedienteId: number,\n  user: UserModel,\n): Promise<ExpedienteCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Expedientes/GetDetalle/${expedienteId}`\n    let Expediente: ExpedienteCampoDatoModel = new ExpedienteCampoDatoModel()\n    await axios({\n      url: url,\n      method: methodsEndPointType.GET,\n      headers: authHeader(user),\n    })\n      .then((response) => {\n        checkStatusCode(response.status)\n        Expediente = jsonConvert.deserializeObject(\n          response.data,\n          ExpedienteCampoDatoModel,\n        )\n      })\n      .catch((error) => {\n        customLog(\n          null,\n          logType.ERROR,\n          serviceName,\n          getExpediente.name,\n          methodsEndPointType.GET,\n        )\n        return undefined\n      })\n\n    return Expediente\n  } catch (err) {\n    // Handle Error Here\n    logger.error('', {\n      component: getExpediente.name,\n    })\n    return undefined\n  }\n}\n\nexport const getCampos = async (user: UserModel): Promise<any> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL}/Expedientes/Header`\n    let ExpedienteTable: ExpedienteTableModel = new ExpedienteTableModel()\n    user.Token =\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjMwQHJ1YW5vLmNvbSIsIm5iZiI6MTYyNzQ2NDg2NSwiZXhwIjoxNjU5MDAwODY1LCJpYXQiOjE2Mjc0NjQ4NjV9.jkAjvFYZIXyFDY9cjq1zP2M8HAts70kEY1u9qrHrD9s'\n    await axios({\n      url: url,\n      method: methodsEndPointType.GET,\n      headers: authHeader(user),\n    })\n      .then((response) => {\n        checkStatusCode(response.status)\n        ExpedienteTable = jsonConvert.deserializeObject(\n          response.data,\n          ExpedienteTableModel,\n        )\n        logger.info(`front.endpoint.get.expedientes.${getCampos.name}.format`, {\n          component: getCampos.name,\n        })\n      })\n      .catch((error) => {\n        logger.error('front.endpoint.get.expedientes.getCamposfromdb.format', {\n          component: getCampos.name,\n        })\n      })\n\n    return ExpedienteTable\n  } catch (error) {\n    logger.error('front.endpoint.get.expedientes.getCampos.format', {\n      component: getCampos.name,\n    })\n\n    return undefined\n  }\n}\n\nexport const loadStore = (user: UserModel): any => {\n  return function (loadOptions: any) {\n    let params = '?'\n    ;[\n      'skip',\n      'take',\n      'requireTotalCount',\n      //\"requireGroupCount\",\n      'sort',\n      'filter',\n      'totalSummary',\n      'group',\n      //\"groupSummary\",\n    ].forEach(function (i) {\n      if (i in loadOptions && isNotEmpty(loadOptions[i])) {\n        params += `${i}=${JSON.stringify(loadOptions[i])}&`\n      }\n    })\n    params = params.slice(0, -1)\n    let url = ''\n    if (params.includes('group')) {\n      url = `${process.env.REACT_APP_API_URL}/Expedientes/FilterGroup/${params}`\n    } else url = `${process.env.REACT_APP_API_URL}/Expedientes/${params}`\n    return fetch(url, {\n      method: methodsEndPointType.GET,\n      headers: authHeader(user),\n    })\n      .then((response) => {\n        checkStatusCode(response.status)\n        return response.json()\n      })\n      .then((data) => {\n        if (data.Datos != null) {\n          return {\n            data: data.Datos,\n            totalCount: data.totalCount,\n            summary: data.summary,\n            //groupCount: data.groupCount,\n          }\n        }\n        logger.info('front.endpoint.get.expedientes.loadStorefromdb.format', {\n          component: loadStore.name,\n        })\n      })\n      .catch((err) => {\n        logger.error('front.endpoint.get.expedientes.loadStore.format', {\n          component: loadStore.name,\n        })\n      })\n  }\n}\n\nexport const getExpedienteFile = async (\n  id: number,\n  fileName: string,\n  user: UserModel,\n): Promise<any> => {\n  try {\n    let url = `${process.env.REACT_APP_API_URL_CORE}/documento/file/${id}`\n    //let url = `${process.env.REACT_APP_API_URL}/documento?filename=${fileName}`\n    //let url = `https://portal2020api.azurewebsites.net/api/documento?filename=EX_FIS40_45_B04186068_FACTURA DE CLIENTE_x.pdf`;\n    axios({\n      url: url,\n      method: methodsEndPointType.GET,\n      headers: authHeader(user),\n      responseType: 'blob', // important\n    })\n      .then((response) => {\n        checkStatusCode(response.status)\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', fileName)\n        document.body.appendChild(link)\n        link.click()\n        logger.info('front.endpoint.get.expedientes.getExpedienteFile.format', {\n          component: getCampos.name,\n        })\n      })\n      .catch((error) => {\n        logger.error(\n          'front.endpoint.get.expedientes.getExpedienteFilefromdb.format',\n          {\n            component: getExpedienteFile.name,\n          },\n        )\n        showToast(\n          'El archivo no existe o ya no est√° disponible',\n          NotifyType.error,\n          5000,\n        )\n        //console.log(error);\n      })\n  } catch (err) {\n    logger.error('front.endpoint.get.expedientes.getExpedienteFile.format', {\n      component: getExpedienteFile.name,\n    })\n  }\n}\n\nfunction checkStatusCode(code: number) {\n  if (code == 401) {\n    localStorage['recordarUsuario'] = 'false'\n    // localStorage.removeItem(\"recordarUsuario\");\n    localStorage.removeItem('user')\n    localStorage.removeItem('storage')\n    window.location.reload()\n  }\n}\n","import Form, { Item, Label, SimpleItem } from 'devextreme-react/form'\nimport React, { useEffect, ReactElement } from 'react'\nimport { ColumnModelCore } from '../../models/columnModel'\nimport './itemComponent.scss'\nimport {\n  getColumnAlignment,\n  getColumnType,\n  getCurrency,\n  getDxType,\n  getSize,\n} from '../../utils/sharedUitls'\nfunction GenericFormComponent(data: any): ReactElement {\n  // let draw = true\n  // let startDraw = data.range.start == null ? true : false\n  const currency = getCurrency()\n\n  useEffect(() => {})\n  function checkType(field: any) {\n    if (field.Nombre == 'NumeroExpediente') {\n      return 'dxTextBox'\n    }\n    if (field.Nombre == 'Descripcion' || field.Nombre == 'Comentario') {\n      return 'dxTextArea'\n    }\n    if (field.Tipo == 'boolean') {\n      return 'dxCheckBox'\n    } else {\n      return getDxType(field?.Type)\n    }\n  }\n  var optionPercentage = {\n    style: 'percent',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }\n  var formatterPercentage = new Intl.NumberFormat('es-ES', optionPercentage)\n  var optionCurrency = {\n    style: 'currency',\n    currency: 'EUR',\n  }\n  var formatterCurrency = new Intl.NumberFormat('es-ES', optionCurrency)\n\n  // const getJsonTransformFields = (fields: ColumnModelCore[] | undefined): any => {\n  //   if (!fields) {\n  //     return null\n  //   }\n  //   let jsonBody: any = {}\n  //   fields.map((field) => {\n  //     const key = field.Nombre\n  //     jsonBody[key] = field.Value\n  //   })\n\n  //   return jsonBody\n  // }\n\n  return (\n    <>\n      <Form\n        //onContentReady={this.validateForm}\n        colCount={'auto'}\n        id=\"form\"\n        //formData={getJsonTransformFields(data.Campos)}\n        labelLocation=\"top\"\n        alignItemLabels={false}\n        alignItemLabelsInAllGroups={false}\n      >\n        {data.fields.Campos != null\n          ? data.fields.Campos?.map((field: ColumnModelCore) => {\n              var value = data.fields.Datos[0][field.Nombre]\n              // if (field.Nombre == data.range.start) startDraw = true\n              // if (draw && startDraw) {\n              //   if (field.Nombre == data.range.end) {\n              //     draw = false\n              //   }\n\n              return (\n                <Item\n                  dataField={field.Nombre}\n                  colSpan={getSize(field.Nombre)}\n                  //cssClass={field.Tipo==\"decimal\"||field.Tipo==\"number\"?\"alignRight\":\"alignLeft\"}\n                  cssClass={'align' + getColumnAlignment(field.Tipo)}\n                  visible={\n                    field.Tipo === 'date' && field.Nombre === null\n                      ? false\n                      : field.Visible\n                  }\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    readOnly: true,\n                    format: getColumnType(field.Tipo, field.Format),\n                    fontWeight: 'bold',\n                    //cssClass:field.Tipo==\"decimal\"?\"alignRight\":\"lignLeft\",\n                    color: 'black',\n                    // value:field.Nombre==\"IVA\"?formatterPercentage.format(value/100)\n                    // :field.Nombre == \"Anticipos\" || field.Nombre == \"Total\" ? formatterCurrency.format(value):value,\n                    value:\n                      field.Format == 'currency'\n                        ? formatterCurrency.format(value)\n                        : field.Format == 'percent'\n                        ? formatterPercentage.format(value / 100)\n                        : field.Tipo === 'datetime' &&\n                          (value == '1/1/1' || value == '31/12/1')\n                        ? ''\n                        : value,\n                    hint: field.Texto + ': ' + value,\n                  }}\n                  editorType={checkType(field)}\n                  itemType\n                >\n                  <Label text={field.Texto} />\n                </Item>\n              )\n              //}\n            })\n          : null}\n      </Form>\n      {/* <Form\n        //onContentReady={this.validateForm}\n        colCount={'auto'}\n        id=\"form\"\n        formData={getJsonTransformFields(data.fields)}\n        labelLocation=\"top\"\n      >\n        {data.fields != null\n          ? data.fields?.map((field: FieldModel) => {\n              if (field.Nombre == data.range.start) startDraw = true\n              if (draw && startDraw) {\n                if (field.Nombre == data.range.end) {\n                  draw = false\n                }\n\n                return (\n                  <Item\n                    dataField={field.Nombre}\n                    colSpan={getSize(field.Nombre)}\n                    visible={\n                      field.Type === 'date' && field.Nombre === null\n                        ? false\n                        : field.Visible\n                    }\n                    editorOptions={{\n                      readOnly: true,\n                      format: getColumnType(field.Type, field.Format),\n                      fontWeight: 'bold',\n                      color: 'black',\n                      hint: field.Value,\n                    }}\n                    editorType={checkType(field)}\n                    itemType\n                  >\n                    <Label\n                      text={field.Caption != null ? field.Caption : field.Nombre}\n                    />\n                  </Item>\n                )\n              }\n            })\n          : null}\n      </Form> */}\n    </>\n  )\n}\n\nexport default GenericFormComponent\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport GenericFormComponent from '../../../../components/form/itemComponent'\nimport { RootState } from '../../../../redux/combineReducers'\n\nfunction ExpedienteVehiculosDatos() {\n  const expedienteState = useSelector((state: RootState) => state.expediente)\n  return (\n    <>\n      {expedienteState.vehiculo != null ? (\n        <GenericFormComponent\n          fields={expedienteState.vehiculo}\n          // range={{ start: 'Matricula', end: 'Proceso' }}\n        ></GenericFormComponent>\n      ) : null}\n    </>\n  )\n}\n\nexport default ExpedienteVehiculosDatos\n","import { Form } from 'devextreme-react'\nimport { GroupItem, SimpleItem } from 'devextreme-react/form'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ColumnModel } from 'shared-models'\nimport GenericFormComponent from '../../../components/form/itemComponent'\nimport { RootState } from '../../../redux/combineReducers'\n\nfunction ExpedienteDatos() {\n  const expedienteState = useSelector((state: RootState) => state.expediente)\n  return (\n    <>\n      {expedienteState.expediente != null ? (\n        <GenericFormComponent\n          fields={expedienteState.expediente}\n          // range={{ start: null, end: 'Nomtransmitente' }}\n        ></GenericFormComponent>\n      ) : // <div className={'content-block  responsive-paddings'}>\n\n      null}\n    </>\n  )\n}\n\nexport default ExpedienteDatos\n","import React, { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DataGrid } from 'devextreme-react'\nimport {\n  Column,\n  Scrolling,\n  Summary,\n  TotalItem,\n} from 'devextreme-react/data-grid'\nimport {\n  getColumnAlignment,\n  getColumnType,\n  getCurrency,\n} from '../../../../utils/sharedUitls'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { ValueErrorBar } from 'devextreme-react/chart'\n\nfunction ExpedienteCostesComponent(): ReactElement {\n  const expedienteState = useSelector((state: RootState) => state.expediente)\n  const currency = getCurrency()\n  function fomatterPercentage(number: number) {\n    let numberFormatted = number.toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false,\n    })\n    return numberFormatted\n  }\n\n  function parserPercentage(number: number) {\n    let numberFormatted = number.toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false,\n    })\n    return numberFormatted + ' %'\n  }\n\n  return (\n    <>\n      <DataGrid\n        dataSource={expedienteState.costes?.Datos}\n        allowColumnReordering={true}\n        allowColumnResizing={true}\n        columnAutoWidth={true}\n        showBorders={true}\n        showRowLines={true}\n        rowAlternationEnabled={true}\n        focusedRowEnabled={false}\n        //height={200}\n      >\n        <Scrolling showScrollbar=\"always\" />\n        {expedienteState.costes?.Campos != undefined\n          ? expedienteState.costes?.Campos.map((value) => {\n              return (\n                <Column\n                  key={value.Nombre}\n                  dataField={value.Nombre}\n                  caption={value.Texto}\n                  dataType={value.Tipo}\n                  //alignment={value.Tipo==\"decimal\"||value.Tipo==\"number\"?\"right\":\"left\"}\n                  // format={\n                  // value.Nombre==\"PorcentajeIVA\"||value.Nombre==\"PorcentajeDescuento\"?\"00' %'\": value.Nombre == \"TotalLinea\" || value.Nombre ==\"CuotaIva\" || value.Nombre == \"Importe\"? currency : getColumnType(value.Tipo, value.Format)\n                  //}\n                  format={getColumnType(value.Tipo, value.Format)}\n                  alignment={getColumnAlignment(value.Tipo)}\n                  visible={value.Nombre === 'Id' ? false : value.Visible}\n                />\n              )\n            })\n          : null}\n\n        <Summary>\n          <TotalItem\n            column=\"Importe\"\n            summaryType=\"sum\"\n            valueFormat={currency}\n          />\n          <TotalItem\n            column=\"CuotaIva\"\n            summaryType=\"sum\"\n            valueFormat={currency}\n          />\n          <TotalItem\n            column=\"TotalLinea\"\n            summaryType=\"sum\"\n            valueFormat={currency}\n          />\n        </Summary>\n      </DataGrid>\n    </>\n  )\n}\n\nexport default ExpedienteCostesComponent\n","import React from 'react'\nimport { RootState } from '../../../redux/combineReducers'\nimport { useSelector } from 'react-redux'\nimport { DataGrid } from 'devextreme-react'\nimport { Column, Scrolling } from 'devextreme-react/data-grid'\nimport { getColumnAlignment, getColumnType } from '../../../utils/sharedUitls'\n\nfunction ExpedienteHistorialComponent() {\n  const expedienteState = useSelector((state: RootState) => state.expediente)\n\n  // var fechaInicio = true\n  // var fechaFinalizado = true\n  // expedienteState?.tareasPendientes?.Datos.map((valueDatos) => {\n  //   fechaInicio = Math.sign(valueDatos.FechaInicio!) === -1 ? false : true\n  //   fechaFinalizado = Math.sign(valueDatos.FechaFin!) === -1 ? false : true\n  // })\n\n  return (\n    <>\n      <DataGrid\n        dataSource={expedienteState?.tareasPendientes?.Datos}\n        allowColumnReordering={true}\n        allowColumnResizing={true}\n        columnAutoWidth={true}\n        showBorders={true}\n        showRowLines={true}\n        rowAlternationEnabled={true}\n        focusedRowEnabled={false}\n        //height={200}\n      >\n        <Scrolling showScrollbar=\"always\" />\n        <Column type=\"buttons\" width={1} fixed={true} />\n        {expedienteState?.tareasPendientes?.Campos != undefined\n          ? expedienteState?.tareasPendientes?.Campos.map((value) => {\n              return (\n                <Column\n                  key={value.Nombre}\n                  dataField={value.Nombre}\n                  caption={value.Texto}\n                  //alignment={value.Tipo==\"decimal\"||value.Tipo==\"number\"?\"right\":\"left\"}\n                  dataType={value.Tipo}\n                  // visible={\n                  //   value.Nombre === 'FechaFinalizado' ? fechaFinalizado : true\n                  // }\n                  format={getColumnType(value.Tipo, value.Format)}\n                  alignment={getColumnAlignment(value.Tipo)}\n                  visible={value.Nombre === 'Id' ? false : value.Visible}\n                />\n              )\n            })\n          : null}\n      </DataGrid>\n    </>\n  )\n}\n\nexport default ExpedienteHistorialComponent\n","import React from 'react'\nimport { RootState } from '../../../redux/combineReducers'\nimport { useSelector } from 'react-redux'\nimport { Button, DataGrid } from 'devextreme-react'\nimport { Column, Scrolling } from 'devextreme-react/data-grid'\nimport {\n  getColumnAlignment,\n  getColumnType,\n  getFileIcon,\n} from '../../../utils/sharedUitls'\nimport { getExpedienteFile } from '../service/expedienteService'\n\nfunction ExpedienteDocumentosComponent() {\n  const expedienteState = useSelector((state: RootState) => state.expediente)\n  const userState = useSelector((state: RootState) => state.user)\n  function cellRender(data: any): any {\n    let myIcon = getFileIcon(data.data.NombreArchivoOriginal)\n    return (\n      <Button\n        text=\"Descargar\"\n        icon={myIcon}\n        hint=\"Descarga el documento a su equipo\"\n        onClick={(event: any) => {\n          getExpedienteFile(\n            data.data.Id,\n            encodeURIComponent(data.data.NombreArchivoOriginal),\n            userState!.user!,\n          )\n        }}\n      />\n    )\n  }\n\n  return (\n    <>\n      <DataGrid\n        dataSource={expedienteState?.documentos?.Datos}\n        allowColumnReordering={true}\n        allowColumnResizing={true}\n        columnAutoWidth={true}\n        showBorders={true}\n        showRowLines={true}\n        rowAlternationEnabled={true}\n        focusedRowEnabled={false}\n        //height={200}\n      >\n        <Scrolling showScrollbar=\"always\" />\n        <Column\n          type=\"buttons\"\n          cellRender={(cellRenderData: any) => {\n            return cellRender(cellRenderData)\n          }}\n        />\n        {expedienteState?.documentos?.Datos != undefined\n          ? expedienteState?.documentos?.Campos.map((value) => {\n              return (\n                <Column\n                  key={value.Nombre}\n                  dataField={value.Nombre}\n                  caption={value.Texto}\n                  dataType={value.Tipo}\n                  //alignment={value.Tipo==\"decimal\"||value.Tipo==\"number\"?\"right\":\"left\"}\n                  format={getColumnType(value.Tipo, value.Format)}\n                  alignment={getColumnAlignment(value.Tipo)}\n                  visible={value.Nombre === 'Id' ? false : value.Visible}\n                />\n              )\n            })\n          : null}\n      </DataGrid>\n    </>\n  )\n}\n\nexport default ExpedienteDocumentosComponent\n","import React from 'react'\nimport Form, { Tab, TabbedItem } from 'devextreme-react/form'\nimport ExpedienteCostesComponent from './coste/expedienteCostesComponent'\nimport ExpedienteHistorialComponent from './expedienteHistorialComponent'\nimport ExpedienteDocumentosComponent from './expedienteDocumentosComponent'\nimport './expedienteInfoTabs.scss'\nimport { ExpedienteInfoProps } from '../interface/ExpedienteInfoPropsInterface'\n\nfunction ExpedienteeInfoTabs() {\n  return (\n    <>\n      <Form id=\"tabExpediente\">\n        <TabbedItem>\n          <Tab title=\"Costes\">\n            <ExpedienteCostesComponent></ExpedienteCostesComponent>\n          </Tab>\n          <Tab title=\"Historial\">\n            <ExpedienteHistorialComponent></ExpedienteHistorialComponent>\n          </Tab>\n          <Tab title=\"Documentos\">\n            <ExpedienteDocumentosComponent></ExpedienteDocumentosComponent>\n          </Tab>\n        </TabbedItem>\n      </Form>\n    </>\n  )\n}\nexport default ExpedienteeInfoTabs\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport GenericFormComponent from '../../../../components/form/itemComponent'\nimport { RootState } from '../../../../redux/combineReducers'\n\nfunction ExpedienteDetalleCostesComponent() {\n  const expedienteState = useSelector((state: RootState) => state.expediente)\n\n  return (\n    <>\n      {expedienteState.coste != null ? (\n        <GenericFormComponent\n          fields={expedienteState.coste}\n          // range={{ start: 'Totsuplidos', end: 'Referencia' }}\n        ></GenericFormComponent>\n      ) : null}\n    </>\n  )\n}\n\nexport default ExpedienteDetalleCostesComponent\n","import React, { ReactElement } from 'react'\nimport ExpedienteVehiculosDatos from './vehiculo/expedienteVehiculoDatos'\nimport ExpedienteDatos from './expedienteDatosComponent'\nimport ExpedienteeInfoTabs from './expedienteInfoTabs'\nimport Box, { Item } from 'devextreme-react/box'\nimport ExpedienteDetalleCostesComponent from './coste/expedienteDetalleCostesComponet'\nimport { ExpedienteInfoProps } from '../interface/ExpedienteInfoPropsInterface'\n\nfunction ExpedienteInfo(): ReactElement {\n  return (\n    <>\n      <React.Fragment>\n        <div className={'content-block  responsive-paddings'}>\n          <div className={'content-block'}>\n            <Box direction=\"row\" width=\"100%\" height=\"50%\">\n              <Item ratio={1}>\n                <div style={{ borderBottomStyle: 'solid' }}>\n                  Detalles Expediente\n                </div>\n              </Item>\n            </Box>\n            <br></br>\n            <ExpedienteDatos></ExpedienteDatos>\n            <br></br>\n            <Box direction=\"row\" width=\"100%\" height=\"50%\">\n              <Item ratio={1}>\n                <div style={{ borderBottomStyle: 'solid' }}>\n                  Detalles Costes\n                </div>\n              </Item>\n            </Box>\n            <ExpedienteDetalleCostesComponent></ExpedienteDetalleCostesComponent>\n            <br></br>\n\n            <br></br>\n            <Box direction=\"row\" width=\"100%\" height=\"50%\">\n              <Item ratio={1}>\n                <div style={{ borderBottomStyle: 'solid' }}>\n                  Detalles del Veh√≠culo\n                </div>\n              </Item>\n            </Box>\n            <ExpedienteVehiculosDatos></ExpedienteVehiculosDatos>\n            <br></br>\n            <div style={{ height: '20em' }}>\n              <ExpedienteeInfoTabs></ExpedienteeInfoTabs>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    </>\n  )\n}\n\nexport default ExpedienteInfo\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel, ColumnModelCore } from '../../../../models/columnModel'\nimport { DateConverter } from '../../../../utils/dateUtils'\n\n@JsonObject('CosteModel')\nclass CosteModel {\n  @JsonProperty('CodigoGestoria', String)\n  CodigoGestoria: string = ''\n  @JsonProperty('Serie', String)\n  Serie: string = ''\n  @JsonProperty('Expediente', Number)\n  Expediente: number = 0\n  @JsonProperty('Concepto', String)\n  Concepto: string = ''\n  @JsonProperty('Tipoconcepto', Number)\n  Tipoconcepto: number = 0\n  @JsonProperty('Fecha', DateConverter)\n  Fecha: undefined\n  @JsonProperty('CodigoConcepto', Number)\n  CodigoConcepto: number = 0\n  @JsonProperty('BaseImponible', Number)\n  BaseImponible: number = 0\n  @JsonProperty('LineaSuplido', Number)\n  LineaSuplido: number = 0\n  @JsonProperty('FacturarA', String)\n  FacturarA: string = ''\n  @JsonProperty('Observaciones', String)\n  Observaciones: string = ''\n  @JsonProperty('PorcentajeIva', Number)\n  PorcentajeIva: number = 0\n  @JsonProperty('CuotaIva', Number)\n  CuotaIva: number = 0\n  @JsonProperty('TotalLinea', Number)\n  TotalLinea: Number = 0\n}\n\n@JsonObject('CosteDetalleBody')\nclass CosteDetalleBody {\n  @JsonProperty('Suplidos', Number)\n  Suplidos: number = 0\n  @JsonProperty('Honorarios', Number)\n  Honorarios: number = 0\n  @JsonProperty('Anticipos', Number)\n  Anticipos: number = 0\n  @JsonProperty('Facturado', Boolean)\n  Facturado: boolean = false\n  @JsonProperty('IVA', Number)\n  IVA: number = 0\n  @JsonProperty('Total', Number)\n  Total: number = 0\n  // @JsonProperty('Notas', String)\n  // Notas: string = ''\n}\n\n@JsonObject('CosteGridModel')\nclass CosteGridModel {\n  @JsonProperty('NumeroExpediente', Number)\n  NumeroExpediente: number = 0\n  @JsonProperty('FacturarA', String)\n  FacturarA: string = ''\n  @JsonProperty('NumeroLinea', Number)\n  NumeroLinea: number = 0\n  @JsonProperty('FechaTramitacion', DateConverter)\n  FechaTramitacion: undefined\n  @JsonProperty('Importe', Number)\n  Importe: number = 0\n  @JsonProperty('Observaciones', String)\n  Observaciones: string = ''\n  @JsonProperty('Unidades', Number)\n  Unidades: number = 0\n  @JsonProperty('PorcentajeDescuento', Number)\n  PorcentajeDescuento: number = 0\n  @JsonProperty('PorcentajeIVA', Number)\n  PorcentajeIVA: number = 0\n  @JsonProperty('Concepto', String)\n  Concepto: string = ''\n  @JsonProperty('ClaveExterna', Number)\n  ClaveExterna: number = 0\n  @JsonProperty('TipoConcepto', String)\n  TipoConcepto: string = ''\n  @JsonProperty('CuotaIva', Number)\n  CuotaIva: Number = 0\n  @JsonProperty('TotalLinea', Number)\n  TotalLinea: Number = 0\n}\n\n@JsonObject('CosteCampoDatoGridModel')\nexport class CosteCampoDatoGridModel {\n  @JsonProperty('Campos', [ColumnModelCore] || [])\n  Campos: ColumnModelCore[] = []\n\n  @JsonProperty('Datos', [CosteGridModel] || [])\n  Datos: CosteGridModel[] = []\n}\n\n@JsonObject('CosteCampoDatoModel')\nexport class CosteCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModelCore] || [])\n  Campos: ColumnModelCore[] = []\n\n  @JsonProperty('Datos', [CosteDetalleBody] || [])\n  Datos: CosteDetalleBody[] = []\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { UserModel } from 'shared-models'\nimport {\n  CosteCampoDatoGridModel,\n  CosteCampoDatoModel,\n} from '../models/coste/expedienteCosteModel'\nimport { authHeader } from '../../loginPage/service/authService'\n//import { checkStatusCode } from 'shared-utils'\nimport {\n  checkStatusCode,\n  NotifyType,\n  showToast,\n} from '../../../utils/sharedUitls'\n\nexport const getDetalleCoste = async (\n  expedienteId: number,\n  user: UserModel,\n): Promise<CosteCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Coste/GetDetalleByExpediente/${expedienteId}`\n    let coste: CosteCampoDatoModel = new CosteCampoDatoModel()\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        checkStatusCode(response.status)\n        coste = jsonConvert.deserializeObject(\n          response.data,\n          CosteCampoDatoModel,\n        )\n      })\n      .catch((error) => {\n        showToast('No se han podido cargar los costes', NotifyType.error, 5000)\n      })\n\n    return coste\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n\nexport const getCostes = async (\n  expedienteId: number,\n  user: UserModel,\n): Promise<CosteCampoDatoGridModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Coste/getCostesByExpediente/${expedienteId}`\n    let costes: CosteCampoDatoGridModel = new CosteCampoDatoGridModel()\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        checkStatusCode(response.status)\n        costes = jsonConvert.deserializeObject(\n          response.data,\n          CosteCampoDatoGridModel,\n        )\n      })\n      .catch((error) => {\n        showToast('No se han podido cargar los costes', NotifyType.error, 5000)\n      })\n\n    return costes\n  } catch (err) {\n    // Handle Error Hereeee\n    console.error(err)\n  }\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel, ColumnModelCore } from '../../../../models/columnModel'\nimport { DateConverter } from '../../../../utils/dateUtils'\n\n// @JsonObject('VehiculoModel')\n// class VehiculoModel {\n//   @JsonProperty('CodigoGestoria', String)\n//   CodigoGestoria: string = ''\n//   @JsonProperty('Serie', String)\n//   Serie: string = ''\n//   @JsonProperty('Expediente', Number)\n//   Expediente: number = 0\n//   @JsonProperty('Concepto', String)\n//   Concepto: string = ''\n//   @JsonProperty('Tipoconcepto', Number)\n//   Tipoconcepto: number = 0\n//   @JsonProperty('Fecha', DateConverter)\n//   Fecha: undefined\n//   @JsonProperty('CodigoConcepto', Number)\n//   CodigoConcepto: number = 0\n//   @JsonProperty('BaseImponible', Number)\n//   BaseImponible: number = 0\n//   @JsonProperty('LineaSuplido', Number)\n//   LineaSuplido: number = 0\n//   @JsonProperty('FacturarA', String)\n//   FacturarA: string = ''\n//   @JsonProperty('Observaciones', String)\n//   Observaciones: string = ''\n//   @JsonProperty('PorcentajeIva', Number)\n//   PorcentajeIva: number = 0\n//   @JsonProperty('CuotaIva', Number)\n//   CuotaIva: number = 0\n//   @JsonProperty('TotalLinea', Number)\n//   TotalLinea: Number = 0\n// }\n\n@JsonObject('VehiculoDetalle')\nclass VehiculoDetalle {\n  //   @JsonProperty('Id', Number)\n  //   Id: number = 0\n  @JsonProperty('Matricula', String)\n  Matricula: string = ''\n  @JsonProperty('Marca', String)\n  Marca: string = ''\n  @JsonProperty('Modelo', String)\n  Modelo: string = ''\n  @JsonProperty('Bastidor', String)\n  Bastidor: string = ''\n  @JsonProperty('FechaFabricacion', DateConverter)\n  FechaFabricacion: undefined\n  @JsonProperty('FechaITV', DateConverter)\n  FechaITV: undefined\n  @JsonProperty('FechaMatricula', DateConverter)\n  FechaMatricula: undefined\n  @JsonProperty('Observaciones', String)\n  Observaciones: string = ''\n}\n\n@JsonObject('VehiculoCampoDatoModel')\nexport class VehiculoCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModelCore] || [])\n  Campos: ColumnModelCore[] = []\n\n  @JsonProperty('Datos', [VehiculoDetalle] || [])\n  Datos: VehiculoDetalle[] = []\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { UserModel } from 'shared-models'\nimport { authHeader } from '../../loginPage/service/authService'\nimport { checkStatusCode } from 'shared-utils'\nimport { NotifyType, showToast } from '../../../utils/sharedUitls'\nimport { VehiculoCampoDatoModel } from '../models/vehiculo/vehiculoModel'\n\nexport const getDetalleVehiculo = async (\n  vehiculoId: number,\n  user: UserModel,\n): Promise<VehiculoCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Vehiculos/GetDetalle/${vehiculoId}`\n    let vehiculoGrid: VehiculoCampoDatoModel = new VehiculoCampoDatoModel()\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        checkStatusCode(response.status)\n        vehiculoGrid = jsonConvert.deserializeObject(\n          response.data,\n          VehiculoCampoDatoModel,\n        )\n      })\n      .catch((error) => {\n        showToast(\n          'No se han podido cargar los vehiculos',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return vehiculoGrid\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel, ColumnModelCore } from '../../../../models/columnModel'\nimport { DateConverter } from '../../../../utils/dateUtils'\n\n@JsonObject('TareaPendienteGridModel')\nclass TareaPendienteGridModel {\n  //   @JsonProperty('Id', Number)\n  //   Id: number = 0\n  @JsonProperty('FechaInicio', DateConverter)\n  FechaInicio: undefined\n  @JsonProperty('FechaFin', String) //que Dios me perdone...\n  FechaFin: undefined\n  @JsonProperty('Descripcion', String)\n  Descripcion: string = ''\n  @JsonProperty('Observaciones', String)\n  Observaciones: string = ''\n  @JsonProperty('ClaveExterna', Number)\n  ClaveExterna: number = 0\n}\n\n@JsonObject('TarePendienteCampoDatoModel')\nexport class TareaPendienteCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModelCore] || [])\n  Campos: ColumnModelCore[] = []\n\n  @JsonProperty('Datos', [TareaPendienteGridModel] || [])\n  Datos: TareaPendienteGridModel[] = []\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { UserModel } from 'shared-models'\nimport { authHeader } from '../../loginPage/service/authService'\nimport { checkStatusCode } from 'shared-utils'\nimport { NotifyType, showToast } from '../../../utils/sharedUitls'\nimport { VehiculoCampoDatoModel } from '../models/vehiculo/vehiculoModel'\nimport { TareaPendienteCampoDatoModel } from '../models/tarePendiente/tareaPendienteModel'\n\nexport const getTareasPendientesByExpediente = async (\n  expedienteId: number,\n  user: UserModel,\n): Promise<TareaPendienteCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/TareaPendiente/getByExpediente/${expedienteId}`\n    let tareaPendienteGrid: TareaPendienteCampoDatoModel =\n      new TareaPendienteCampoDatoModel()\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        checkStatusCode(response.status)\n        tareaPendienteGrid = jsonConvert.deserializeObject(\n          response.data,\n          TareaPendienteCampoDatoModel,\n        )\n      })\n      .catch((error) => {\n        showToast(\n          'No se han podido obtener los historicos',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return tareaPendienteGrid\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel, ColumnModelCore } from '../../../../models/columnModel'\n\n@JsonObject('DocumentoGridModel')\nclass DocumentoGridModel {\n  @JsonProperty('Id', Number)\n  Id: number = 0\n  //   @JsonProperty('ClaveExterna', Number)\n  //   ClaveExterna: number = 0\n  @JsonProperty('NombreArchivoOriginal', String)\n  NombreArchivoOriginal: string = ''\n  @JsonProperty('NombreArchivoCliente', String)\n  NombreArchivoCliente: string = ''\n  @JsonProperty('Observaciones', String)\n  Observaciones: string = ''\n}\n\n@JsonObject('DocumentoCampoDatoModel')\nexport class DocumentoCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModelCore] || [])\n  Campos: ColumnModelCore[] = []\n\n  @JsonProperty('Datos', [DocumentoGridModel] || [])\n  Datos: DocumentoGridModel[] = []\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { UserModel } from 'shared-models'\nimport { authHeader } from '../../loginPage/service/authService'\nimport { checkStatusCode } from 'shared-utils'\nimport { NotifyType, showToast } from '../../../utils/sharedUitls'\nimport { DocumentoCampoDatoModel } from '../models/documento/documentoModel'\n\nexport const getDocumentoByExpediente = async (\n  expedienteId: number,\n  user: UserModel,\n): Promise<DocumentoCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Documento/getByExpediente/${expedienteId}`\n    let documentoGrid: DocumentoCampoDatoModel = new DocumentoCampoDatoModel()\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        checkStatusCode(response.status)\n        documentoGrid = jsonConvert.deserializeObject(\n          response.data,\n          DocumentoCampoDatoModel,\n        )\n      })\n      .catch((error) => {\n        showToast(\n          'No se han podido obtener los documentos',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return documentoGrid\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n","import { useState, ReactElement, useEffect, useRef } from 'react'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/combineReducers'\nimport {\n  checkStatusCode,\n  getAlignment,\n  getBoolean,\n  getColumnType,\n  GridHeight,\n  isNotEmpty,\n  NotifyType,\n  showToast,\n} from '../../../utils/sharedUitls'\nimport { Button } from 'devextreme-react/button'\nimport { Popup } from 'devextreme-react/popup'\nimport ScrollView from 'devextreme-react/scroll-view'\nimport { checkScreenSize, getCurrency } from 'shared-utils'\nimport {\n  addHideLoader,\n  addShowLoader,\n} from '../../../redux/actions/configActions'\nimport './expedienteTable.scss'\n\nimport { runInsights } from '../../../services/telemetryService'\n\nimport { ToolbarItem } from 'devextreme-react/popover'\nimport { CheckBox, DataGrid } from 'devextreme-react'\nimport {\n  addCoste,\n  addCostes,\n  addDocumentos,\n  addExpediente,\n  addExpedientes,\n  addTareaspendientes,\n  addVehiculo,\n} from '../redux/expedienteActions'\n\nimport { getExpediente, getStructure } from '../service/expedienteService'\nimport NotFound from '../../../components/notFound/notFound'\nimport { SharedGrid } from 'react-library-grid'\nimport { ButtonColumnModel, DataGridModel } from 'shared-models'\nimport ExpedienteInfo from './expedienteInfo'\nimport { useHistory } from 'react-router-dom'\nimport { modulosClaims, isRolAllowed } from '../../../utils/allowAuthUtil'\nimport { modulos } from '../../../utils/allowModuloUtil'\nimport {\n  ExpedienteCampoDatoModel,\n  ExpedienteGridCampoDatoModel,\n} from '../models/ExpedienteCampoDatoModel'\nimport { getCostes, getDetalleCoste } from '../service/costeService'\nimport { getDetalleVehiculo } from '../service/vehiculoService'\nimport { getTareasPendientesByExpediente } from '../service/tareaPendiente'\nimport { getDocumentoByExpediente } from '../service/documentosService'\nimport { useScreenSize, useScreenSizeGrid } from '../../../utils/media-query'\nimport {\n  Column,\n  ColumnChooser,\n  Export,\n  FilterPanel,\n  FilterRow,\n  Grouping,\n  HeaderFilter,\n  LoadPanel,\n  Selection,\n  Pager,\n  Paging,\n  Scrolling,\n  SearchPanel,\n  Sorting,\n  StateStoring,\n  Summary,\n  TotalItem,\n} from 'devextreme-react/data-grid'\nimport { now } from 'moment'\nimport CustomStore from 'devextreme/data/custom_store'\nimport { ExpedienteModel } from '../models/expedienteModel'\n\nimport { exportDataGrid as exportDataGridToPdf } from 'devextreme/pdf_exporter'\nimport jsPDF from 'jspdf'\nimport SetTemplateEngine from 'devextreme/core/set_template_engine'\nimport setTemplateEngine from 'devextreme/core/set_template_engine'\nimport { Item } from 'devextreme-react/form'\nimport { formatDate } from 'devextreme/localization'\nlet dataGrid: any = null\nlet idRowSelected: string\nlet popUpshowInfo: any = null\nconst currency = getCurrency()\n//let expedientesCount = 0\nfunction ExpedienteIndexNew(): ReactElement {\n  const [expedientesCount, setExpedientesCount] = useState(0)\n  const [expedientesTotalFactura, setExpedientesTotalFactura] = useState(0)\n  const expedienteState = useSelector((state: RootState) => state.expediente)\n  const userState = useSelector((state: RootState) => state.user)\n  const [showForm, setShowForm] = useState(false)\n  const [showInfo, setShowInfo] = useState(false)\n  const [showInfoConfig, setShowInfoConfig] = useState(false)\n  const [checkboxFilterRow, setcheckboxFilterRow] = useState(false)\n  const [structure, setStructure] = useState(new ExpedienteGridCampoDatoModel())\n  const [store, setStore]: any = useState(null)\n  var visibleFilterRow = localStorage.getItem('CheckFilterrow')\n  const dispatch = useDispatch()\n  const [rowFocused, setRowFocused] = useState('')\n  const { isXSmall, isLarge } = useScreenSize()\n  const expedienteGridRef: any = useRef(null)\n  const gridheight = useScreenSizeGrid()\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const structure = await getStructure(userState?.user!)\n        setStructure(structure)\n        dispatch(addExpedientes(structure))\n\n        const store: any = new CustomStore({\n          key: 'IdKey',\n          load: function (loadOptions: any) {\n            let params = '?'\n            ;[\n              'skip',\n              'take',\n              'requireTotalCount',\n              //\"requireGroupCount\",\n              'sort',\n              'filter',\n              'totalSummary',\n              //'group'\n              //\"groupSummary\",\n            ].forEach(function (i) {\n              if (i in loadOptions && isNotEmpty(loadOptions[i])) {\n                params += `${i}=${JSON.stringify(loadOptions[i])}&`\n              }\n            })\n            params = params.slice(0, -1)\n            if (params.includes('group')) {\n              url = `${url}/${params}`\n            } else url = `${urlAux}/${params}`\n            return fetch(url, {\n              method: 'GET',\n              headers: {\n                Authorization: 'Bearer ' + token,\n              },\n            })\n              .then((response) => {\n                checkStatusCode(response.status)\n                return response.json()\n              })\n              .then((data) => {\n                if (data.Datos != null) {\n                  return {\n                    data: data.Datos,\n                    totalCount: data.totalCount,\n                    summary: data.summary,\n                    //groupCount: data.groupCount,\n                  }\n                }\n\n                return null\n                // logger.info('front.endpoint.get.expedientes.loadStorefromdb.format', {\n                //   component: loadStore.name\n                // })\n              })\n              .catch((err) => {\n                console.log(err)\n                // logger.error('front.endpoint.get.expedientes.loadStore.format', {\n                //   component: loadStore.name\n                // })\n              })\n          },\n        })\n        setStore(store)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetchData()\n  }, [])\n  function onToolbarPreparing(event: any, dataGrid: any) {\n    event.toolbarOptions.items.unshift(\n      {\n        name: 'filtro',\n        location: 'after',\n        widget: 'dxButton',\n        options: {\n          hint: 'Filtros personalizados',\n          icon: 'filter',\n          onClick: (_e: any) => {\n            expedienteGridRef\n              ? expedienteGridRef!.current!.instance.option(\n                  'filterBuilderPopup.visible',\n                  true,\n                )\n              : showToast(\n                  'No se ha podido recargar, int√©ntelo de nuevo mas tarde',\n                  NotifyType.error,\n                  5000,\n                )\n            // let elementFilterPanel: HTMLElement =\n            //   document.getElementsByClassName(\n            //     'dx-datagrid-filter-panel-text',\n            //   )[0] as HTMLElement\n            // elementFilterPanel.click()\n          },\n        },\n      },\n\n      {\n        location: 'after',\n        widget: 'dxButton',\n        name: 'id1',\n        id: 'id1',\n        options: {\n          id: 'id1',\n          name: 'id2',\n          icon: 'refresh',\n          hint: 'Refrescar contenido',\n          onClick: (_e: any) => {\n            expedienteGridRef\n              ? expedienteGridRef!.current!.instance.refresh()\n              : showToast(\n                  'No se ha podido recargar, int√©ntelo de nuevo mas tarde',\n                  NotifyType.error,\n                  5000,\n                )\n          },\n        },\n      },\n      {\n        location: 'after',\n        widget: 'dxButton',\n\n        options: {\n          icon: 'exportpdf',\n          hint: 'Exportar a PDF',\n          onClick: () => {\n            const doc = new jsPDF()\n            //setTemplateEngine('hogan')\n            exportDataGridToPdf({\n              jsPDFDocument: doc,\n              component: expedienteGridRef.current!.instance,\n              keepColumnWidths: true,\n              //selectedRowsOnly: true,\n            }).then(() => {\n              doc.save('Expedientes.pdf')\n            })\n          },\n        },\n      },\n    )\n  }\n  let token = userState?.user?.Token\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Expedientes/GetExpedientes`\n  let urlAux = `${process.env.REACT_APP_API_URL_CORE}/Expedientes/GetExpedientes`\n\n  const openExpediente = async (rowData: any) => {\n    setShowInfo(true)\n    dispatch(addShowLoader(true))\n    dispatch(\n      addExpediente(await getExpediente(rowData.data.Id, userState!.user!)),\n    )\n    dispatch(addCoste(await getDetalleCoste(rowData.data.Id, userState!.user!)))\n    dispatch(\n      addVehiculo(\n        await getDetalleVehiculo(rowData.data.IdVehiculo, userState!.user!),\n      ),\n    )\n    dispatch(addCostes(await getCostes(rowData.data.Id, userState!.user!)))\n    dispatch(\n      addTareaspendientes(\n        await getTareasPendientesByExpediente(\n          rowData.data.Id,\n          userState!.user!,\n        ),\n      ),\n    )\n    dispatch(\n      addDocumentos(\n        await getDocumentoByExpediente(rowData.data.Id, userState!.user!),\n      ),\n    )\n    dispatch(addShowLoader(false))\n  }\n\n  const openExpedienteEnterKey = async (rowId: any) => {\n    setShowInfo(true)\n    dispatch(addShowLoader(true))\n    let data: ExpedienteCampoDatoModel | undefined = await getExpediente(\n      rowId,\n      userState!.user!,\n    )\n    if (data != undefined) {\n      dispatch(addExpediente(data))\n      dispatch(addHideLoader(false))\n    } else {\n      setShowInfo(false)\n      showToast('No se ha podido cargar el expediente', NotifyType.error, 5000)\n    }\n  }\n\n  const focusEventChanged = (e: any) => {\n    if (e.row) {\n      setRowFocused(e.row.key)\n      idRowSelected = e.row.key\n    }\n  }\n\n  const handleHideInfo = () => {\n    setShowInfo(false)\n  }\n  const handleHideInfoConfig = () => {\n    setShowInfoConfig(false)\n  }\n\n  //handle del filtro por columna\n  const handleOnUpdateCheckFilterrow = () => {\n    setcheckboxFilterRow(!checkboxFilterRow)\n    localStorage.setItem('CheckFilterrow', checkboxFilterRow!.toString())\n    window.location.reload()\n  }\n  function isMobileScreen() {\n    if (!checkScreenSize())\n      return (\n        <Button\n          text=\"Cerrar\"\n          style={{ float: 'right' }}\n          onClick={handleHideInfo}\n        />\n      )\n  }\n  const buttonOptions = {\n    icon: 'close',\n    onClick: function () {\n      handleHideInfo()\n    },\n  }\n\n  return (\n    <>\n      {isRolAllowed(userState!.user!, modulos.EXPEDIENTES, [\n        modulosClaims.VIEW,\n      ]) ? (\n        <div\n          className={'content-block dx-card'}\n          style={{\n            borderColor: '#f4f9ff',\n            borderWidth: '2px',\n            margin: '0.3%',\n            padding: '0.16%',\n          }}\n        >\n          <div id=\"\">\n            <h3 style={{ margin: 0, padding: 0 }}>Consulta de Expedientes</h3>\n            {structure?.Campos != undefined && structure?.Campos.length > 0 ? (\n              <DataGrid\n                id={'gridExpedientesComponent'}\n                keyExpr=\"IdKey\"\n                ref={expedienteGridRef}\n                dataSource={store}\n                remoteOperations={true}\n                allowColumnReordering={true}\n                allowColumnResizing={true}\n                columnAutoWidth={true}\n                showBorders={true}\n                showRowLines={true}\n                height={gridheight}\n                onInitialized={function (e) {\n                  e.component?.selectAll()\n                }}\n                rowAlternationEnabled={true}\n                columnHidingEnabled={checkScreenSize() ? false : true}\n                onRowDblClick={(event: any) => {\n                  if (event.data != undefined) {\n                    openExpediente(event)\n                  }\n                }}\n                onKeyDown={(e: any) => {\n                  try {\n                    if (e.event.code === 'Enter') {\n                      if (\n                        expedienteGridRef?.current?.props.focusedRowKey !=\n                        undefined\n                      )\n                        openExpedienteEnterKey(\n                          expedienteGridRef?.current?.props.focusedRowKey,\n                        )\n                    }\n                  } catch (error) {}\n                }}\n                focusedRowEnabled={true}\n                focusedRowKey={rowFocused}\n                onFocusedRowChanged={(event: any) => {\n                  focusEventChanged(event)\n                }}\n                onToolbarPreparing={(event: any) => {\n                  onToolbarPreparing(\n                    { ...event, component: dataGrid },\n                    dataGrid,\n                  )\n                }}\n              >\n                <Scrolling\n                  mode=\"virtual\"\n                  rowRenderingMode=\"virtual\"\n                  showScrollbar=\"always\"\n                  scrollByThumb={true}\n                  preloadEnabled={true}\n                  useNative={true}\n                />\n\n                {checkScreenSize() ? (\n                  <SearchPanel visible={true} width={240} />\n                ) : (\n                  <SearchPanel visible={true} width={100} />\n                )}\n                <Sorting mode={'multiple'} />\n                <HeaderFilter visible={false} />\n\n                <Paging pageSize={1000} />\n                <ColumnChooser enabled={true} />\n                <LoadPanel enabled={true} />\n                <FilterRow visible={true} />\n                <FilterPanel visible={true} />\n                <Export\n                  excelWrapTextEnabled={true}\n                  enabled={true}\n                  fileName={'Expedientes' + now()}\n                  allowExportSelectedData={true}\n                />\n\n                <Selection\n                  mode=\"multiple\"\n                  showCheckBoxesMode={isLarge ? 'always' : 'never'}\n                />\n                <Grouping\n                  autoExpandAll={false}\n                  allowCollapsing={true}\n                  expandMode={'rowClick'}\n                />\n                <StateStoring\n                  enabled={true}\n                  type=\"localStorage\"\n                  storageKey={'gridExpedientesComponent'}\n                />\n\n                {structure.Campos != undefined\n                  ? structure.Campos.map((value) => {\n                      return (\n                        <Column\n                          visible={value.Visible}\n                          key={value.Nombre}\n                          dataField={value.Nombre}\n                          caption={value.Texto}\n                          dataType={value.Tipo}\n                          allowGrouping={\n                            value.Nombre == 'TotalFactura' ? false : true\n                          }\n                          alignment={getAlignment(value.Tipo)}\n                          format={getColumnType(value.Tipo, value.Format)}\n                          allowHeaderFiltering={\n                            value.Tipo == 'date' ? false : true\n                          }\n                          defaultSortOrder=\"asc\"\n                          // allowFiltering={\n                          //   value.Nombre == 'TipoUsuario' ? false : true\n                          // }\n                        />\n                      )\n                    })\n                  : null}\n\n                <Summary>\n                  <TotalItem column=\"NumeroExpediente\" summaryType=\"count\" />\n                  <TotalItem\n                    column=\"TotalFactura\"\n                    summaryType=\"sum\"\n                    valueFormat={currency}\n                    alignment=\"center\"\n                    displayFormat=\"{0}\"\n                  />\n                </Summary>\n              </DataGrid>\n            ) : null}\n            <Popup\n              visible={showInfoConfig}\n              onHiding={handleHideInfoConfig}\n              dragEnabled={true}\n              closeOnOutsideClick={false}\n              showTitle={true}\n              title=\"Configuraci√≥n\"\n              width={300}\n              height={250}\n            >\n              <CheckBox\n                text=\"B√∫squeda por campo.\"\n                value={\n                  visibleFilterRow\n                    ? getBoolean(visibleFilterRow)\n                    : checkboxFilterRow\n                }\n                onValueChanged={handleOnUpdateCheckFilterrow}\n              />\n            </Popup>\n            <Popup\n              ref={(ref) => (popUpshowInfo = ref)}\n              visible={showInfo}\n              onHiding={handleHideInfo}\n              dragEnabled={true}\n              closeOnOutsideClick={false}\n              showTitle={true}\n              title=\"Consulta Expediente\"\n              resizeEnabled={true}\n              showCloseButton={false}\n              width=\"95%\"\n              height=\"95%\"\n            >\n              <ToolbarItem\n                options={buttonOptions}\n                widget=\"dxButton\"\n                location=\"after\"\n              />\n              <ScrollView width=\"100%\" height=\"100%\">\n                <ExpedienteInfo></ExpedienteInfo>\n              </ScrollView>\n              <div>{isMobileScreen()}</div>\n            </Popup>\n            <Button\n              id=\"buttonPopUpConf\"\n              style={{ display: 'none' }}\n              onClick={() => setShowInfoConfig(!showInfoConfig)}\n            />\n          </div>\n        </div>\n      ) : (\n        <div\n          className={'content-block dx-card responsive-paddings'}\n          style={{ borderColor: '#f4f9ff', borderWidth: '2px', margin: '0.6%' }}\n        >\n          <NotFound data={{ type: 1 }}></NotFound>\n        </div>\n      )}\n\n      {}\n    </>\n  )\n}\n\nexport default ExpedienteIndexNew\n","import React, { ReactElement, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { RootState } from '../../redux/combineReducers'\n\nimport './expedienteStyles.scss'\nimport { useClearCache } from 'react-clear-cache'\nimport ExpedienteIndex from './components/expedienteIndex'\n//import { runInsights } from \"../../services/telemetryService\";\nimport { runInsights } from 'telemetry-portal'\nimport { isAlreadyLoggedUser } from '../../redux/utils/reduxUtils'\nimport { isModuloAllowed, modulos } from '../../utils/allowModuloUtil'\nimport NotFound from '../../components/notFound/notFound'\nimport { isSuperAdministrador } from '../../utils/allowAuthUtil'\nimport ExpedienteIndexNew from './components/expedienteIndexNew'\n\nfunction ExpedientePage(): ReactElement {\n  const userState = useSelector((state: RootState) => state.user)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const { isLatestVersion, emptyCacheStorage } = useClearCache()\n  const [showUserLinks, setShowUserLinks] = useState(true)\n  //const appInsights = runInsights()\n\n  const obtenerAncho = () => {}\n  if (userState!.isLoggedIn === false) {\n    isAlreadyLoggedUser('/expedientePage', history, dispatch)\n  }\n  const usuarioState = useSelector((state: RootState) => state.user)\n\n  const handleHideShowUserLinks = () => {\n    setShowUserLinks(false)\n    localStorage.setItem('acceptedLinksUsers', 'true')\n  }\n\n  return (\n    <React.Fragment>\n      {/*\n       **Modificaci√≥n TODO Probar, Esto ya deberia de funcionar\n       *TODO cuando dejo esto activo en el menu o el login afectan a que no funcione el debugger de VS */}\n      {!isLatestVersion && emptyCacheStorage()}\n      {userState!.isLoggedIn === false ? history.push('/') : null}\n      {isModuloAllowed(userState!.user!, modulos.EXPEDIENTES) ? (\n        !isSuperAdministrador(userState!.user!) ? (\n          <ExpedienteIndexNew />\n        ) : (\n          // <ExpedienteIndex />\n          <div\n            className={'content-block dx-card '}\n            style={{\n              borderColor: '#f4f9ff',\n              borderWidth: '2px',\n              margin: '0.3%',\n              padding: '0.16%',\n            }}\n          >\n            <NotFound data={{ type: 1 }}></NotFound>\n          </div>\n        )\n      ) : null}\n\n      {obtenerAncho}\n    </React.Fragment>\n  )\n}\n\nexport default ExpedientePage\n","export default __webpack_public_path__ + \"static/media/newlogo.c60927be.png\";","import React from 'react';\nimport PwaInstallPopupIOS from 'react-pwa-install-ios';\n\n \nconst PwaInstallPopupIOSComponent = () => {\n  return (\n    <PwaInstallPopupIOS>\n    <div \n      delay={0}\n      style={{\n        padding: '15px 30px',\n        backgroundColor: 'blue',\n        color: 'white',\n        textAlign: 'center',\n      }}\n    > \n     Instalar aplicaci√≥n\n    <p>Para instalar <b>El Portal del Despacho</b> en su dispositivo debe pulsar en el icono se√±alado debajo del mensaje.</p>\n    </div>\n  </PwaInstallPopupIOS>\n  );\n};\n\nexport default PwaInstallPopupIOSComponent;","import { ConfiguracionEnvioEmailModel } from '../../models/configuracionEnvioEmailModel'\nimport { EnlaceModel } from '../../models/enlaceModel'\nimport { EnlacesModel } from '../../models/enlacesModel'\n\nimport {\n  ADD_ENLACE,\n  ADD_ENLACES,\n  ADD_PARENT_ENLACES,\n  CLEAR_ENLACE,\n  EnlaceActionsTypes,\n} from './enlaceType'\n\nexport const addEnlace = (\n  enlace: Partial<EnlaceModel> | EnlaceModel | undefined,\n): EnlaceActionsTypes => ({\n  type: ADD_ENLACE,\n  payload: enlace,\n})\nexport const addParentEnlaces = (\n  parentEnlaces: Partial<EnlaceModel[]> | EnlacesModel[] | undefined,\n): EnlaceActionsTypes => ({\n  type: ADD_PARENT_ENLACES,\n  payload: parentEnlaces,\n})\nexport const addEnlaces = (\n  enlaces: Partial<EnlaceModel[]> | EnlacesModel[] | undefined,\n): EnlaceActionsTypes => ({\n  type: ADD_ENLACES,\n  payload: enlaces,\n})\n\nexport const clearEnlace = (\n  enlace: EnlaceModel | undefined,\n): EnlaceActionsTypes => ({\n  type: CLEAR_ENLACE,\n  payload: enlace,\n})\n","import Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { Popup } from 'devextreme-react/popup'\nimport React, { ChangeEvent, FormEvent, useState } from 'react'\nimport { useClearCache } from 'react-clear-cache'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport logoLogin from '../../assets/newlogo.png'\nimport PwaInstallPopupIOSComponent from '../../components/pwaIos/pwaIos'\nimport { RootState } from '../../redux/combineReducers'\nimport { getCookie, checkScreenSize } from 'shared-utils'\nimport './login.css'\nimport clsx from 'clsx'\nimport {\n  addLoggedUser,\n  addRestablecerContrase√±a,\n  addUnLoggedUser,\n} from './redux/authActions'\nimport { RecuperarContrase√±a, restablecerContrase√±aCall } from 'shared-services'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { NotifyType, showToast } from '../../utils/sharedUitls'\nimport { LoginUser, RestorePassword } from './service/authService'\nimport {\n  addParentCompany,\n  addParentCompanyModulos,\n} from '../companyAdministracionPages/companyPage/redux/companiesActions'\nimport {\n  getCompany,\n  getCompanyModulos,\n} from '../companyAdministracionPages/companyPage/services/companiesServices'\nimport { addParentEnlaces } from '../companyAdministracionPages/companyPage/redux/Enlace/enlaceActions'\nimport { getEnlaces } from '../companyAdministracionPages/companyPage/services/enlacesService'\nimport { isNormalUser } from '../../utils/allowAuthUtil'\nimport { getUsuarioByUserName } from '../usuarioAdministracionPages/usuarioPage/services/usuarioServices'\ninterface Props {}\n\nconst Login: React.FC<Props> = ({}) => {\n  let history = useHistory()\n\n  const [username, setUsername] = useState(getCookie('UsuarioRecordado'))\n  const [password, setPassword] = useState(getCookie('passwdRecordado'))\n  const [UsuarioResetPasswd, setUsuarioResetPasswd] = useState('')\n  const [emailResetPasswd, setEmailResetPasswd] = useState('')\n  const [checkedIsTrue, setCheckedIsTrue] = useState(false)\n  const userState = useSelector((state: RootState) => state.user)\n  //Control del versiones\n  const { isLatestVersion, emptyCacheStorage } = useClearCache()\n\n  //recordar usuario\n  let recordarFalse = 'false'\n  localStorage.setItem('recordarUsuario', recordarFalse)\n  var recordarUsuario = localStorage.getItem('recordarUsuario')\n  const rootState = useSelector((state: RootState) => state.user)\n  const dispatch = useDispatch()\n  //variable para el popup\n  const [isVisiblePop, setIsVisiblePop] = useState(false)\n  const [isVisiblePopEmail, setIsVisiblePopEmail] = useState(false)\n  const [loading, setLoading] = React.useState(false)\n  const [success, setSuccess] = React.useState(false)\n  const timer = React.useRef<number>()\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    if (!loading) {\n      setSuccess(false)\n      setLoading(true)\n      timer.current = window.setTimeout(() => {\n        setSuccess(true)\n        setLoading(false)\n      }, 2000)\n    }\n    try {\n      let usuarioLogeado = await LoginUser(username, password)\n\n      if (usuarioLogeado == undefined || usuarioLogeado.Token == '') {\n        dispatch(addUnLoggedUser(undefined))\n      } else {\n        showToast(\n          '¬°Usuario Correcto! Iniciando sesi√≥n...',\n          NotifyType.success,\n          5000,\n        )\n\n        dispatch(\n          addParentCompany(\n            await getCompany(\n              usuarioLogeado,\n              parseInt(usuarioLogeado.CompanyId),\n            ),\n          ),\n        )\n        localStorage.setItem(\n          'parentEnlaces',\n          JSON.stringify(\n            dispatch(\n              addParentEnlaces(\n                await getEnlaces(\n                  usuarioLogeado,\n                  parseInt(usuarioLogeado.CompanyId),\n                ),\n              ),\n            ).payload,\n          ),\n        )\n        localStorage.setItem(\n          'parentCompanyModulos',\n          JSON.stringify(\n            dispatch(\n              addParentCompanyModulos(\n                await getCompanyModulos(\n                  usuarioLogeado,\n                  parseInt(usuarioLogeado.CompanyId),\n                ),\n              ),\n            ).payload,\n          ),\n        )\n\n        dispatch(addLoggedUser(usuarioLogeado))\n\n        if (isNormalUser(usuarioLogeado)) {\n          history.push('/expedientePage')\n        } else history.push('/Companies')\n\n        // history.push('/Companies')\n      }\n      if (checkedIsTrue) {\n        let recordarTrue = 'true'\n        localStorage.setItem('recordarUsuario', recordarTrue)\n        setCheckedIsTrue(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  const handleSubmitResetaContrase√±a = async () => {\n    try {\n      var recuperarPasswd = localStorage.getItem('recuperarPasswd')\n      let recuperarPasswdObj = JSON.parse(recuperarPasswd!)\n      let Username = recuperarPasswdObj!.Usuario\n      let Auth = recuperarPasswdObj!.Auth!\n\n      let respuesta = await restablecerContrase√±aCall(\n        Username,\n        emailResetPasswd,\n        Auth,\n      )\n      if (respuesta == 'OK') {\n        setIsVisiblePopEmail(false)\n        setIsVisiblePop(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  const handleSubmitRecuperarContrase√±a = async () => {\n    console.log(RestorePassword(UsuarioResetPasswd))\n    /*  document.getElementById('mensaje')!.innerHTML = await getUsuarioByUserName(\n      UsuarioResetPasswd,\n    ) */\n    // try {\n    //   var puedeRecuperar = await RecuperarContrase√±a(UsuarioResetPasswd)\n    //   var nodeOK = document.createElement('P')\n    //   var textnode: Text\n    //   var mensaje: string =\n    //     'El usuario no existe, compruebe que esta bien escrito.'\n    //   console.log(puedeRecuperar!)\n    //   if (puedeRecuperar === undefined) {\n    //     mensaje = 'El usuario no existe, compruebe que esta bien escrito.'\n    //     document.getElementById('mensaje')!.innerHTML = mensaje!\n    //   }\n    //   if (puedeRecuperar?.Permitir!) {\n    //     dispatch(addRestablecerContrase√±a(puedeRecuperar))\n    //     localStorage.setItem('recuperarPasswd', JSON.stringify(puedeRecuperar!))\n    //     setIsVisiblePopEmail(true)\n    //     mensaje = puedeRecuperar?.Mensaje!\n    //     document.getElementById('mensajeRecuperarPasswd')!.innerHTML = mensaje!\n    //   } else if (puedeRecuperar === undefined) {\n    //     mensaje = 'El usuario no existe, compruebe que esta bien escrito.'\n    //     document.getElementById('mensaje')!.innerHTML = mensaje!\n    //   } else if (puedeRecuperar != undefined && !puedeRecuperar?.Permitir!) {\n    //     mensaje = puedeRecuperar?.Mensaje!\n    //     document.getElementById('mensaje')!.innerHTML = mensaje!\n    //   }\n    // } catch (e) {\n    //   console.error(e)\n    // }\n  }\n\n  const onUsernameChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setUsername(e.target.value)\n  }\n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value)\n  }\n  const onUsuarioResetPasswdChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setUsuarioResetPasswd(e.target.value)\n  }\n  const onEmailResetPasswdChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setEmailResetPasswd(e.target.value)\n  }\n\n  //copyrigth\n  function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright ¬© '}\n        <Link color=\"inherit\" href=\"https://www.ruano.com/\">\n          Ruano Inform√°tica, S.L.\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    )\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      height: '100vh',\n    },\n    image: {\n      // backgroundImage: \"url(https://source.unsplash.com/random)\",\n      //backgroundImage: \"url(https://source.unsplash.com/collection/277386)\",\n      backgroundRepeat: 'no-repeat',\n      /*  backgroundColor:\n        theme.palette.type === \"light\"\n          ? theme.palette.grey[50]\n          : theme.palette.grey[900], */\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    paperRecuperarContrase√±a: {\n      margin: theme.spacing(0, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: 'auto', // Fix IE 11 issue.\n      maxWidth: '360px',\n      marginTop: theme.spacing(1),\n      padding: '5%',\n    },\n    formRecuperarPass: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    media: {\n      height: 140,\n    },\n    olvideContrase√±aButton: {\n      fontSize: '7pt',\n    },\n    buttonSuccess: {\n      backgroundColor: 'blue',\n      '&:hover': {\n        backgroundColor: 'blue',\n      },\n    },\n    buttonProgress: {\n      color: 'blue',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  }))\n\n  const cerrarPopup = () => {\n    setIsVisiblePop(false)\n    setUsuarioResetPasswd('')\n    document.getElementById('mensaje')!.innerHTML = ''\n    window.location.reload()\n  }\n  const cerrarPopupEmail = () => {\n    setIsVisiblePopEmail(false)\n  }\n  if (rootState?.user!) {\n    if (isNormalUser(rootState?.user!)) {\n      history.push('/expedientePage')\n    } else history.push('/Companies')\n  }\n\n  const popUpResponsiveHeight = () => {\n    if (!checkScreenSize()) {\n      return 400\n    } else {\n      return '70%'\n    }\n  }\n  const popUpResponsiveWidth = () => {\n    if (!checkScreenSize()) {\n      return 300\n    } else {\n      return '30%'\n    }\n  }\n  var shadow = {\n    boxShadow: '1px 3px 1px #9E9E9E',\n  }\n  const classes = useStyles()\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  })\n\n  return (\n    <>\n      {isLatestVersion\n        ? console.log(\n            'Estas en la ultima versi√≥n, ' +\n              'Estado de la aplicacion: ' +\n              process.env.NODE_ENV +\n              ' Numero de versi√≥n: ' +\n              process.env.REACT_APP_SECRET_CODE,\n          )\n        : console.log(\n            'No Estas en la ultima versi√≥n, ' +\n              'Estado de la aplicacion: ' +\n              process.env.NODE_ENV +\n              ' Numero de versi√≥n: ' +\n              process.env.REACT_APP_SECRET_CODE,\n          )}\n      {/*  <div>{!isLatestVersion && emptyCacheStorage()}</div> */}\n      <div>\n        {!isLatestVersion && (\n          <p>\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault()\n                emptyCacheStorage()\n              }}\n              rel=\"noopener noreferrer\"\n            >\n              Actualizar versi√≥n\n            </a>\n          </p>\n        )}\n      </div>\n      <PwaInstallPopupIOSComponent />\n      <Grid container justifyContent=\"center\" direction=\"row\">\n        <Grid item style={{ width: 'auto' }}>\n          <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            className=\"login-form\"\n            style={{ width: '100%' }}\n          >\n            <Paper\n              variant=\"elevation\"\n              elevation={12}\n              className=\"login-background\"\n              style={{ width: '100%' }}\n            >\n              <img\n                src={logoLogin}\n                style={{ display: 'block', margin: 'auto', marginTop: '2%' }}\n                width=\"200px\"\n                height=\"20%\"\n                alt=\"LogoLogin\"\n              />\n\n              <Grid item>\n                <form className={classes.form} onSubmitCapture={handleSubmit}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Usuario\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    value={username}\n                    onChange={onUsernameChange}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"Contrase√±a\"\n                    label=\"Contrase√±a\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    value={password}\n                    onChange={onPasswordChange}\n                  />\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={buttonClassname}\n                    disabled={loading}\n                  >\n                    Acceder\n                  </Button>\n                  {loading && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                  {/* <p style={{ color: 'gray' }}>\n                    Al hacer clic en 'Acceder', usted est√° de acuerdo con el{' '}\n                    <a\n                      href=\"https://www.ruano.com/aviso-legal/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Aviso Legal\n                    </a>{' '}\n                    y las{' '}\n                    <a\n                      href=\"https://www.ruano.com/condiciones-generales/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Condiciones Generales de Contrataci√≥n.\n                    </a>\n                  </p> */}\n                  <Grid container>\n                    <Grid item xs>\n                      <Button\n                        onClick={() => {\n                          setIsVisiblePop(!isVisiblePop)\n                        }}\n                        className={classes.olvideContrase√±aButton}\n                      >\n                        Olvid√© mi contrase√±a\n                      </Button>\n                      <Popup\n                        visible={isVisiblePop}\n                        onHiding={cerrarPopup}\n                        dragEnabled={false}\n                        closeOnOutsideClick={false}\n                        showTitle={true}\n                        width={popUpResponsiveWidth}\n                        height={popUpResponsiveHeight}\n                      >\n                        <div\n                          className={classes.paperRecuperarContrase√±a}\n                          id=\"mensajeRecuperarPasswd\"\n                        >\n                          <img\n                            src={logoLogin}\n                            width=\"70%\"\n                            height=\"70%\"\n                            alt=\"LogoLogin\"\n                          />\n                          <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"Usuario\"\n                            label=\"Usuario\"\n                            name=\"Usuario\"\n                            autoComplete=\"Usuario\"\n                            autoFocus\n                            value={UsuarioResetPasswd}\n                            onChange={onUsuarioResetPasswdChange}\n                          />\n                          <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleSubmitRecuperarContrase√±a}\n                          >\n                            Enviar\n                          </Button>\n\n                          <Box mt={5}>\n                            <Copyright />\n                          </Box>\n                          <h3 id=\"mensaje\"></h3>\n                        </div>\n                      </Popup>\n                      <Popup\n                        visible={isVisiblePopEmail}\n                        onHiding={cerrarPopupEmail}\n                        dragEnabled={false}\n                        closeOnOutsideClick={false}\n                        showTitle={true}\n                        width={popUpResponsiveWidth}\n                        height={popUpResponsiveHeight}\n                      >\n                        <div\n                          className={classes.paperRecuperarContrase√±a}\n                          id=\"mensajeRecuperarPasswd\"\n                        >\n                          <img src={logoLogin} width=\"70%\" height=\"70%\" />\n                          <p style={{ fontSize: '0.8em' }}>\n                            {' '}\n                            Introduzca un email valido. Le enviaremos el enlace\n                            para restablecer su contrase√±a.\n                          </p>\n                          <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"email\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            value={emailResetPasswd}\n                            onChange={onEmailResetPasswdChange}\n                          />\n                          <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleSubmitResetaContrase√±a}\n                          >\n                            Enviar\n                          </Button>\n\n                          <Box mt={5}>\n                            <Copyright />\n                          </Box>\n                          <p id=\"mensaje\"></p>\n                        </div>\n                      </Popup>\n                    </Grid>\n                  </Grid>\n                  <Box mt={5}>\n                    <Copyright />\n                  </Box>\n                </form>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Login\n","import React, { useState, ChangeEvent, FormEvent } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Link from '@material-ui/core/Link'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport logoLogin from '../../../assets/newlogo.png'\n\nimport { RootState } from '../../../redux/combineReducers'\n\nimport { getParameters } from 'shared-utils'\nimport { useClearCache } from 'react-clear-cache'\nimport { checkScreenSize } from 'shared-utils'\nimport { addLoggedUser, addUnLoggedUser } from '../redux/authActions'\nimport { CambiarContrase√±aCall, LoginUser } from '../service/authService'\nimport { NotifyType, showToast } from '../../../utils/sharedUitls'\n\ninterface Props {}\n\nconst ChangePassword: React.FC<Props> = ({}) => {\n  let history = useHistory()\n\n  const [nuevaContrase√±a, setNuevaContrase√±a] = useState('')\n  const [repetirNuevaContrase√±a, setRepetirNuevaContrase√±a] = useState('')\n  //Control del versiones\n  const { isLatestVersion, emptyCacheStorage } = useClearCache()\n\n  const rootState = useSelector((state: RootState) => state.user)\n\n  const dispatch = useDispatch()\n  //variable para el popup\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    try {\n      //Recupera contrase√±a\n      var Username = getParameters('user')\n      var Code = getParameters('code')\n\n      if (Username && Code) {\n        if (nuevaContrase√±a === repetirNuevaContrase√±a) {\n          var CambiaContrase√±a = await CambiarContrase√±aCall(\n            Username!,\n            nuevaContrase√±a!,\n            Code,\n          )\n        } else {\n          showToast(\n            'Las contrase√±as no coinciden, Prueba de nuevo.',\n            NotifyType.info,\n            5000,\n          )\n        }\n      }\n      if (CambiaContrase√±a == 'OK') {\n        history.push('/login')\n        /*        var usuarioLogeado = await LoginUser(Username!, nuevaContrase√±a)\n        //Borro la config de recuperar contrase√±a del storage\n        localStorage.removeItem('recuperarPasswd')\n        usuarioLogeado == undefined\n          ? dispatch(addUnLoggedUser(usuarioLogeado))\n          : dispatch(addLoggedUser(usuarioLogeado)) */\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  const onNuevacontrase√±aChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setNuevaContrase√±a(e.target.value)\n  }\n  const onRepetirNuevaContrase√±aChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setRepetirNuevaContrase√±a(e.target.value)\n  }\n\n  //copyrigth\n  function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright ¬© '}\n        <Link color=\"inherit\" href=\"https://www.ruano.com/\">\n          Ruano Inform√°tica, S.L.\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    )\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      height: '100vh',\n    },\n    image: {\n      // backgroundImage: \"url(https://source.unsplash.com/random)\",\n      backgroundImage: 'url(https://source.unsplash.com/collection/277386)',\n      backgroundRepeat: 'no-repeat',\n      backgroundColor:\n        theme.palette.type === 'light'\n          ? theme.palette.grey[50]\n          : theme.palette.grey[900],\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: formResponsiveWidth,\n      height: formResponsiveHeight, // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    media: {\n      height: 140,\n    },\n  }))\n\n  if (rootState!.isLoggedIn == true) {\n    history.push('/ExpedientePage')\n  }\n\n  const formResponsiveHeight = () => {\n    if (!checkScreenSize()) {\n      return 400\n    } else {\n      return '70%'\n    }\n  }\n  const formResponsiveWidth = () => {\n    if (!checkScreenSize()) {\n      return '100%'\n    } else {\n      return '100%'\n    }\n  }\n\n  const classes = useStyles()\n  return (\n    <>\n      {/*  <Box> */}\n      <div className={classes.paper}>\n        <img\n          src={logoLogin}\n          style={{ display: 'block', margin: 'auto', marginTop: '2%' }}\n          width=\"200px\"\n          height=\"20%\"\n        />\n        <form className={classes.form} onSubmitCapture={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"nuevaContrase√±a\"\n            label=\"Nueva contrase√±a\"\n            name=\"nuevaContrase√±a\"\n            autoComplete=\"nuevaContrase√±a\"\n            type=\"password\"\n            autoFocus\n            value={nuevaContrase√±a}\n            onChange={onNuevacontrase√±aChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"repetirNuevaContrase√±a\"\n            label=\"Repetir nueva contrase√±a\"\n            type=\"password\"\n            id=\"repetirNuevaContrase√±a\"\n            autoComplete=\"repetirNuevaContrase√±a\"\n            value={repetirNuevaContrase√±a}\n            onChange={onRepetirNuevaContrase√±aChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleSubmit}\n          >\n            Enviar\n          </Button>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n        </form>\n      </div>\n      {/*  </Box> */}\n    </>\n  )\n}\n\nexport default ChangePassword\n","export default __webpack_public_path__ + \"static/media/Calculadora.f51a54b7.png\";","import React, { ReactElement } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../redux/combineReducers\";\nimport \"./accesoSoloCalculadoraPage.scss\";\nimport { useClearCache } from \"react-clear-cache\";\nimport calculadoraImg from \"../../assets/Calculadora.png\";\n\nfunction AccesoSoloCalculadoraPage(): ReactElement {\n  const { isLatestVersion, emptyCacheStorage } = useClearCache();\n\n  const usuarioState = useSelector((state: RootState) => state.user);\n\n  return (\n    <>\n      {/*\n       **Modificaci√≥n TODO Probar, Esto ya deberia de funcionar\n       *TODO cuando dejo esto activo en el menu o el login afectan a que no funcione el debugger de VS */}\n      {!isLatestVersion && emptyCacheStorage()}\n\n      <div className=\"center\">\n        <a\n          href={\n            \"https://portal.elgestor.com/CalculadoraIntro.aspx?Id=\" +\n            usuarioState!.user?.CodigoCalculadora\n          }\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            className=\"calculadoraImg\"\n            src={calculadoraImg}\n            alt=\"LogoCalculadora\"\n          />\n        </a>\n      </div>\n    </>\n  );\n}\n\nexport default AccesoSoloCalculadoraPage;\n","import React, { ReactElement } from \"react\";\nimport { LoadPanel } from \"devextreme-react/load-panel\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../redux/combineReducers\";\n\nfunction LoaderComponent(): ReactElement {\n  //const history = useHistory();\n  const configState = useSelector((state: RootState) => state.config);\n\n  return (\n    <LoadPanel\n      id=\"genericLoadPanel\"\n      shadingColor=\"rgba(192,192,192,0.96)\" //rgba(192,192,192,0.9)\n      position=\"center\"\n      // onHiding={ocultarLoader}\n      visible={configState.visibleLoader}\n      showIndicator={true}\n      shading={true}\n      showPane={true}\n      closeOnOutsideClick={false}\n    />\n    /*   <div>\n      <LoadPanel\n        closeOnOutsideClick={false}\n        visible={true}\n        onShowing={() => {\n          setTimeout(() => {\n            history.push(\"/expedientePage\");\n          }, 3000);\n        }}\n      />\n    </div> */\n  );\n}\n\nexport default LoaderComponent;\n","import React, { ReactElement } from \"react\";\nimport Form, {\n  ButtonItem,\n  ButtonOptions,\n  Tab,\n  TabbedItem,\n} from \"devextreme-react/form\";\n\n\nimport \"./administracionTabsStyles.scss\";\nimport Box, { Item } from \"devextreme-react/box\";\nimport Button from \"devextreme-react/button\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\nfunction AdministracionTabsPage(): ReactElement {\n  const history = useHistory();\n\n  return (\n    <React.Fragment>\n      <>\n        {/* <div className=\"dx-field-label\">Administraci√≥n</div> */}\n\n        {/*   <hr /> */}\n        <div\n          className={\"content-block dx-card responsive-paddings\"}\n          style={{ borderColor: \"#f4f9ff\", borderWidth: \"2px\" }}\n        >\n          <Box\n            /* height={600} width={600} */ align=\"center\"\n            crossAlign=\"stretch\"\n            style={{ alignItems: \"center\" }}\n          >\n            <Item ratio=\"1\">\n              <Form id=\"tabs\">\n                <TabbedItem>\n                  <Tab title=\"Email\">\n                    <Box\n                      direction=\"col\"\n                      width=\"100%\"\n                      /*height={75}*/\n                    >\n                      <Item ratio=\"0\" baseSize=\"120%\">\n                       {/*  <EmailAdministracionComponent></EmailAdministracionComponent> */}\n                      </Item>\n                    </Box>\n                  </Tab>\n                  {/* <Tab title=\"Calculadora\">\n                <Box direction=\"row\" width=\"100%\">\n                  <Item ratio=\"0\" baseSize=\"120%\">\n                    <CalculadoraAdministracionComponent></CalculadoraAdministracionComponent>\n                  </Item>\n                </Box>\n              </Tab> */}\n                  {/* <Tab title=\"Estructura\">\n                <Box direction=\"row\" width=\"100%\">\n                  <Item ratio=\"0\" baseSize=\"100%\">\n                    <EstructuraAdministracionComponent></EstructuraAdministracionComponent>\n                  </Item>\n                </Box>\n              </Tab> */}\n                  {/*   <Tab title=\"Idiomas\">\n                <Box\n                  direction=\"row\"\n                  width=\"100%\"\n                  \n                >\n                  <Item ratio=\"0\" baseSize=\"120%\">\n                    <IdiomasAdministracionComponent></IdiomasAdministracionComponent>\n                  </Item>\n                  <Item ratio=\"0\" baseSize=\"2%\">\n                    <Button\n                      icon=\"arrowleft\"\n                      text=\"Register\"\n                      type=\"default\"\n                      useSubmitBehavior={true}\n                      onClick={() => {\n                        history.goBack();\n                      }}\n                    />\n                  </Item>\n                </Box>\n              </Tab> */}\n\n                  <Tab title=\"Legal\">\n                    <Box direction=\"row\" width=\"100%\">\n                      <Item ratio=\"0\" baseSize=\"120%\">\n                       {/*  <LegalAdministracionComponent></LegalAdministracionComponent> */}\n                      </Item>\n                      {/*  <Item ratio=\"0\" baseSize=\"3%\">\n                    <Form>\n                      <ButtonItem horizontalAlignment=\"right\">\n                        <ButtonOptions\n                          icon=\"arrowleft\"\n                          text=\" \"\n                          type=\"default\"\n                          useSubmitBehavior={true}\n                          onClick={() => {\n                            history.goBack();\n                          }}\n                          hint=\"Guardar\"\n                          //useSubmitBehavior={true}\n                        >\n                          <span className=\"dx-button-text\">\n                            <i className=\"dx-icon-arrowleft\"></i>\n                          </span>\n                        </ButtonOptions>\n                      </ButtonItem>\n                    </Form>\n                  </Item> */}\n                    </Box>\n                  </Tab>\n                </TabbedItem>\n              </Form>\n            </Item>\n          </Box>\n        </div>\n      </>\n    </React.Fragment>\n  );\n}\nexport default AdministracionTabsPage;\n","import axios from 'axios'\nimport { UserModel } from 'shared-models'\n\nimport { NotifyType, showToast } from '../../../utils/sharedUitls'\n\nexport const feedBackCall = async (\n  Body: string,\n  FileData: string,\n  user: UserModel,\n) => {\n  try {\n    let url = `https://portaldespachosapi.azurewebsites.net/api/Feedback`\n    const response = await axios.post(\n      url,\n      { Body, FileData },\n      {\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjMwQHJ1YW5vLmNvbSIsIm5iZiI6MTYzNDgzMDExOCwiZXhwIjoxNjY2MzY2MTE4LCJpYXQiOjE2MzQ4MzAxMTh9.Jx9fZbscVe2FpDjNhZroSCPPwZguXnLIPmJRfPMxxvc',\n        },\n      },\n    )\n    if (response.statusText == 'OK' && response.status == 200) {\n      showToast('Reporte enviado correctamente', NotifyType.success, 5000)\n    }\n    return response\n  } catch (err) {\n    // Handle Error Here\n    showToast('No se ha podido enviar el Reporte', NotifyType.error, 5000)\n    //console.log(err);\n    console.error(err)\n  }\n}\n","import React, { ReactElement } from 'react'\nimport { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../redux/combineReducers'\nimport html2canvas from 'html2canvas'\nimport { Button, Popover, ScrollView, TextArea } from 'devextreme-react'\nimport { checkScreenSize } from 'shared-utils'\n\nimport { Checkbox, FormControlLabel } from '@material-ui/core'\n\nimport './feedbackComponent.css'\nimport { UserModel } from '../../models/usuario/userModel'\nimport { feedBackCall } from './services/feedbackService'\ntype FeedBackProps = {\n  user: UserModel\n  isLoggedIn: Boolean | undefined\n}\nfunction FeedBack({ user, isLoggedIn }: FeedBackProps): ReactElement {\n  const [withShadingOptionsVisible, showWithShadingOptions] = useState(false)\n  const [incidencia, setIncidencia] = useState('')\n  const [checkedScreenShotIsTrue, setcheckedScreenShotIsTrue] = useState(false)\n\n  const onIncidenciaChange = (e: any) => {\n    setIncidencia(e.value)\n  }\n  const reportarError = () => {\n    handlePopoverInfoHide()\n    //captura de pantalla\n    let elemento = document.getElementsByTagName('body')[0]\n    setTimeout(function () {\n      html2canvas(elemento, { scrollY: -window.scrollY }).then(function (\n        canvas,\n      ) {\n        var img = canvas.toDataURL('image/jpeg').split(';base64,')[1]\n        if (checkedScreenShotIsTrue) {\n          feedBackCall(incidencia, img, user)\n        } else {\n          feedBackCall(incidencia, '', user)\n        }\n      })\n    }, 5000)\n    //Limpio El mensaje.\n    setIncidencia('')\n  }\n\n  const handlePopoverInfoShow = () => {\n    showWithShadingOptions(!withShadingOptionsVisible)\n  }\n  const handlePopoverInfoHide = () => {\n    showWithShadingOptions(false)\n  }\n  const styles = {\n    buttonStyle: {\n      // backgroundColor: '#fc454e',\n      width: 'auto',\n      height: 'auto',\n      borderRadius: 13,\n      justifyContent: 'center',\n      alignItems: 'center',\n      position: 'fixed',\n      // bottom: 20,\n      right: 20,\n      zIndex: '1600',\n      textAlign: 'center',\n\n      //display: \"none\",\n    },\n    buttonStyleMobile: {\n      // backgroundColor: '#fc454e',\n      width: 'auto',\n      height: 'auto',\n      borderRadius: 13,\n      justifyContent: 'center',\n      alignItems: 'center',\n      position: 'fixed',\n      bottom: 20,\n      right: 20,\n      zIndex: '1600',\n      textAlign: 'center',\n      //  display: \"none\",\n    },\n  }\n\n  return (\n    <>\n      {isLoggedIn === true ? (\n        <>\n          <div id=\"ContenedorFeedBack\" /*className=\"grid-item\"*/>\n            <Button\n              id=\"link5\"\n              style={\n                checkScreenSize()\n                  ? styles.buttonStyle\n                  : styles.buttonStyleMobile\n              }\n              text=\"Enviar Comentarios\"\n              type=\"success\"\n              stylingMode=\"contained\"\n              onClick={handlePopoverInfoShow}\n            />\n\n            <Popover\n              target=\"#link5\"\n              position=\"left\"\n              width={'auto'}\n              height={'auto'}\n              visible={withShadingOptionsVisible}\n              onHiding={handlePopoverInfoHide}\n              dragEnabled={true}\n              closeOnOutsideClick={true}\n              showTitle={true}\n              title=\" \"\n            >\n              <ScrollView\n                id=\"scrollviewFeedBack\"\n                bounceEnabled={true}\n                showScrollbar={'onScroll'}\n              >\n                <form>\n                  <div className=\"item\">\n                    <TextArea\n                      defaultValue={incidencia}\n                      value={incidencia}\n                      showClearButton={true}\n                      placeholder=\"Escriba aqu√≠...\"\n                      valueChangeEvent=\"keyup\"\n                      id=\"Incidencia\"\n                      className=\"Incidencia\"\n                      name=\"Incidencia\"\n                      onValueChanged={onIncidenciaChange}\n                      autoResizeEnabled={true}\n                      minHeight={200}\n                      maxHeight={600}\n                      style={{ maxWidth: 300, minWidth: 200 }}\n                    ></TextArea>\n                  </div>\n                  <div className=\"item\">\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          onChange={(e) => {\n                            setcheckedScreenShotIsTrue(!checkedScreenShotIsTrue)\n                          }}\n                          color=\"primary\"\n                          checked={checkedScreenShotIsTrue}\n                          value=\"remember\"\n                        />\n                      }\n                      label=\"Enviar captura\"\n                    />\n                  </div>\n                  <div className=\"item\">\n                    <Button\n                      text=\"Enviar\"\n                      type=\"default\"\n                      stylingMode=\"contained\"\n                      onClick={reportarError}\n                      style={{ backgroundColor: '#64B5F6' }}\n                    />\n                  </div>\n                </form>\n              </ScrollView>\n            </Popover>\n          </div>\n        </>\n      ) : null}\n    </>\n  )\n}\n\nexport default FeedBack\n","import React, { ReactElement } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport ExpedientePage from '../pages/expedientePage/expedientePage'\nimport LoginPage from '../pages/loginPage/login'\nimport NotFound from '../components/notFound/notFound'\nimport CambiarContrase√±aPage from '../pages/loginPage/components/cambiarContrase√±a'\nimport AccesoSoloCalculadoraPage from '../pages/accesoSoloCalculadoraPage/accesoSoloCalculadoraPage'\nimport LoaderComponent from '../components/loader/loaderComponent'\nimport AdministracionTabsPage from '../pages/administracionPages/AdministracionTabsPage'\nimport FeedBack from '../components/feedBack/feebackComponent'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../redux/combineReducers'\n\nfunction Routes(): ReactElement {\n  const usuarioState = useSelector((state: RootState) => state.user)\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={LoginPage} hideNavBar={true} />\n        <Route exact path=\"/expedientePage\" component={ExpedientePage} />\n        <Route exact path=\"/login\" component={LoginPage} hideNavBar={true} />\n        <Route exact path=\"/loader\" component={LoaderComponent} />\n        <Route exact path=\"/ResetPassword\" component={CambiarContrase√±aPage} />\n        <Route\n          exact\n          path=\"/AccesoSoloCalculadoraPage\"\n          component={AccesoSoloCalculadoraPage}\n        />\n        <Route\n          exact\n          path=\"/Administracion\"\n          component={AdministracionTabsPage}\n        />\n\n        {/* <Route component={NotFound} /> */}\n      </Switch>\n\n      <FeedBack\n        user={usuarioState?.user!}\n        isLoggedIn={usuarioState?.isLoggedIn}\n      ></FeedBack>\n\n      {LoaderComponent()}\n    </>\n  )\n}\n\nexport default Routes\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/user.58de24df.png\";","import DataSource from \"devextreme/data/data_source\";\n\nexport const dataSourceTemas = new DataSource({\n    store: {\n        data: [\n            {\n                ID: \"generic.light\",\n                Name: \"light\",\n            },\n            {\n                ID: \"generic.dark\",\n                Name: \"dark\",\n            },\n            {\n                ID: \"generic.carmine\",\n                Name: \"carmine\",\n            },\n            {\n                ID: \"generic.softblue\",\n                Name: \"softblue\",\n            },\n            {\n                ID: \"generic.darkmoon\",\n                Name: \"darkmoon\",\n            },\n            {\n                ID: \"generic.darkviolet\",\n                Name: \"darkviolet\",\n            },\n            {\n                ID: \"generic.greenmist\",\n                Name: \"greenmist\",\n            },\n            {\n                ID: \"generic.contrast\",\n                Name: \"contrast\",\n            },\n            {\n                ID: \"generic.light.compact\",\n                Name: \"light compact\",\n            },\n            {\n                ID: \"generic.dark.compact\",\n                Name: \"dark compact\",\n            },\n            {\n                ID: \"generic.carmine.compact\",\n                Name: \"carmine compact\",\n            },\n            {\n                ID: \"generic.softblue.compact\",\n                Name: \"softblue compact\",\n            },\n            {\n                ID: \"generic.darkmoon.compact\",\n                Name: \"darkmoon compact\",\n            },\n            {\n                ID: \"generic.darkviolet.compact\",\n                Name: \"darkviolet compact\",\n            },\n            {\n                ID: \"generic.greenmist.compact\",\n                Name: \"greenmist compact\",\n            },\n            {\n                ID: \"generic.contrast.compact\",\n                Name: \"contrast compact\",\n            },\n            {\n                ID: \"material.blue.light\",\n                Name: \"material blue light\",\n            },\n            {\n                ID: \"material.blue.dark\",\n                Name: \"material blue dark\",\n            },\n            {\n                ID: \"material.lime.light\",\n                Name: \"material lime light\",\n            },\n            {\n                ID: \"material.lime.dark\",\n                Name: \"material lime dark\",\n            },\n            {\n                ID: \"material.orange.light\",\n                Name: \"material orange light\",\n            },\n            {\n                ID: \"material.orange.dark\",\n                Name: \"material orange dark\",\n            },\n            {\n                ID: \"material.purple.light\",\n                Name: \"material purple light\",\n            },\n            {\n                ID: \"material.purple.dark\",\n                Name: \"material purple dark\",\n            },\n            {\n                ID: \"material.teal.light\",\n                Name: \"material teal light\",\n            },\n            {\n                ID: \"material.teal.dark\",\n                Name: \"material teal dark\",\n            },\n            {\n                ID: \"material.blue.light.compact\",\n                Name: \"material blue light compact\",\n            },\n            {\n                ID: \"material.blue.dark.compact\",\n                Name: \"material blue dark compact\",\n            },\n            {\n                ID: \"material.lime.light.compact\",\n                Name: \"material lime light compact\",\n            },\n            {\n                ID: \"material.lime.dark.compact\",\n                Name: \"material lime dark compact\",\n            },\n            {\n                ID: \"material.orange.light.compact\",\n                Name: \"material orange light compact\",\n            },\n            {\n                ID: \"material.orange.dark.compact\",\n                Name: \"material orange dark compact\",\n            },\n            {\n                ID: \"material.purple.light.compact\",\n                Name: \"material purple light compact\",\n            },\n\n            {\n                ID: \"material.purple.light.compact\",\n                Name: \"material purple light compact\",\n            },\n            {\n                ID: \"material.purple.dark.compact\",\n                Name: \"material purple dark compact\",\n            },\n            {\n                ID: \"material.teal.light.compact\",\n                Name: \"material teal light compact\",\n            },\n            {\n                ID: \"material.teal.dark.compact\",\n                Name: \"material teal dark compact\",\n            },\n        ],\n        type: \"array\",\n        key: \"ID\",\n    },\n});\n\n\nconst menuItems: any[] = [\n    {\n        name: \"Acerca de\",\n        /* disabled: true, */\n        /*    items: [\n               {\n                   name: \"Pol√≠tica de privacidad y cookies\",\n                   url:\n                       usuarioState!.user?.Configuracion.LinkCookies === null\n                           ? \"\"\n                           : usuarioState!.user?.Configuracion.LinkCookies,\n               },\n               {\n                   name: \" Aviso Legal\",\n                   url:\n                       usuarioState!.user?.Configuracion.LinkCookies === null\n                           ? \"\"\n                           : usuarioState!.user?.Configuracion.LinkCookies,\n               },\n               {\n                   name: \"Reglamento General de Protecci√≥n de Datos\",\n                   url:\n                       usuarioState!.user?.Configuracion.LinkCookies === null\n                           ? \"\"\n                           : usuarioState!.user?.Configuracion.LinkCookies,\n               },\n           ], */\n    },\n];\n\nexport function getTimeLogIn() {\n    var d = new Date();\n    var horaInicioSesion =\n        (\"0\" + d.getDate()).slice(-2) +\n        \"-\" +\n        (\"0\" + (d.getMonth() + 1)).slice(-2) +\n        \"-\" +\n        d.getFullYear() +\n        \" \" +\n        (\"0\" + d.getHours()).slice(-2) +\n        \":\" +\n        (\"0\" + d.getMinutes()).slice(-2);\n    return horaInicioSesion;\n}\n\nexport const myEvent = (itemData: any, history: any) => {\n    if (itemData.url != undefined) {\n        window.open(itemData.url, \"_blank\");\n        // window.location.href = itemData.url;\n    } else {\n        history.push(itemData.page);\n    }\n};","import React, { useMemo, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport ContextMenu, { Position } from 'devextreme-react/context-menu'\nimport List from 'devextreme-react/list'\nimport './user-panel.scss'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../redux/combineReducers'\nimport logoUser from '../../assets/user.png'\nimport { getTimeLogIn } from '../menuGeneric/menuUtils'\nimport { Popup } from 'devextreme-react'\nimport Iframe from 'react-iframe'\nimport { custom } from 'devextreme/ui/dialog'\n\nexport default function ({ menuMode }: { menuMode: any }) {\n  //const { user, signOut } = useAuth() as any;\n  const history = useHistory()\n  const my: any = 'top center'\n  const at: any = 'bottom center'\n  //usuario\n  const usuarioState = useSelector((state: RootState) => state.user)\n  const [popUpHelpVisible, setPopUpHelpVisible] = useState(false)\n  function navigateToProfile() {\n    history.push('/profile')\n  }\n  const handlePopupHelpShow = () => {\n    setPopUpHelpVisible(true)\n  }\n  const handlePopupHelpHide = () => {\n    setPopUpHelpVisible(false)\n  }\n  const menuItems = useMemo(\n    () => [\n      /*  {\n        text: \"Profile\",\n        icon: \"user\",\n        onClick: navigateToProfile,\n      }, */\n\n      /*      {\n        text: 'Mi Cuenta',\n        icon: 'card',\n        onClick: () => {},\n      }, */\n      {\n        text: 'Ayuda',\n        icon: 'help',\n        onClick: handlePopupHelpShow,\n      },\n      {\n        text: getTimeLogIn(),\n        icon: 'clock',\n        style: { fontWeight: 'bold' },\n      },\n      {\n        text: 'Cerrar Sesi√≥n',\n        icon: 'runner',\n        onClick: () => {\n          localStorage.removeItem('user')\n          localStorage.removeItem('storage')\n          localStorage.removeItem('parentCompanyModulos')\n          localStorage.removeItem('parentEnlaces')\n          localStorage.removeItem('recordarUsuario')\n          localStorage.removeItem('APP_VERSION')\n          localStorage.removeItem('gridExpedientesComponent')\n          localStorage.removeItem('companyGridComponent')\n          localStorage.removeItem('componenteGridComponent')\n          window.location.reload()\n        },\n      },\n    ],\n    [\n      /* signOut */\n    ],\n  )\n\n  return (\n    <>\n      <div className={'user-panel'}>\n        <div className={'user-info'}>\n          <div className={'user-name'}>\n            <b>{usuarioState?.user?.UserName}</b>\n          </div>\n\n          <div className={'image-container'}>\n            <div\n              style={{\n                background: `url(${logoUser}) no-repeat #fff`,\n                backgroundSize: 'cover',\n              }}\n              className={'user-image'}\n            />\n          </div>\n        </div>\n        <div style={{ marginRight: '6em', marginTop: '0.16em' }}>\n          {usuarioState?.user?.role}\n        </div>\n        {menuMode === 'context' && (\n          <ContextMenu\n            items={menuItems}\n            target={'.user-button'}\n            showEvent={'dxclick'}\n            width={210}\n            cssClass={'user-menu'}\n          >\n            <Position my={my} at={at} />\n          </ContextMenu>\n        )}\n        {menuMode === 'list' && (\n          <List className={'dx-toolbar-menu-action'} items={menuItems} />\n        )}\n      </div>\n      <Popup\n        visible={popUpHelpVisible}\n        onHiding={handlePopupHelpHide}\n        dragEnabled={true}\n        closeOnOutsideClick={false}\n        showTitle={true}\n        title=\"Ayuda\"\n        resizeEnabled={true}\n        showCloseButton={true}\n        width=\"98%\"\n        height=\"98%\"\n      >\n        <Iframe\n          url=\"https://wiki.ruano.com/index.php?title=Portal:_%C3%8Dndice\"\n          width=\"100%\"\n          height=\"100%\"\n          id=\"myId\"\n          className=\"myClassname\"\n          display=\"block\"\n          position=\"relative\"\n        />\n      </Popup>\n    </>\n  )\n}\n","import React from 'react'\nimport Toolbar, { Item } from 'devextreme-react/toolbar'\nimport Button from 'devextreme-react/button'\nimport UserPanel from '../user-panel/user-panel'\nimport './header.scss'\nimport { Template } from 'devextreme-react/core/template'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../redux/combineReducers'\nimport { useScreenSize } from '../../utils/media-query'\n\nexport default ({\n  menuToggleEnabled,\n  title,\n  toggleMenu,\n  userState,\n  menuStatus,\n  company,\n}: {\n  menuToggleEnabled: any\n  title: any\n  toggleMenu: any\n  userState: any\n  menuStatus: any\n  company: any\n}) => {\n  const { isLarge, isXSmall } = useScreenSize()\n  return (\n    <header className={'header-component'}>\n      <Toolbar className={'header-toolbar'}>\n        <Item\n          visible={menuToggleEnabled}\n          location={'before'}\n          widget={'dxButton'}\n          cssClass={'menu-button'}\n        >\n          <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\n        </Item>\n        <Item\n          location={'before'}\n          cssClass={'header-title'}\n          text={title}\n          visible={!!title}\n        />\n\n        <Item\n          location={'before'}\n          cssClass={'header-title'}\n          /* visible={!menuStatus} */\n        >\n          {company?.PrincipalLogo != undefined ? (\n            <img\n              //GOODLOGO\n              src={`data:image/jpeg;base64,${company?.PrincipalLogo}`}\n              style={\n                isXSmall\n                  ? {\n                      height: 'auto',\n                      maxWidth: '100px',\n                      maxHeight: '50px',\n                      marginTop: '-5%',\n                    }\n                  : {\n                      width: 'auto',\n                      height: 'auto',\n                      maxWidth: '146px',\n                      maxHeight: '50px',\n                      marginTop: '-5%',\n                    }\n              }\n              alt=\"\"\n            />\n          ) : null}\n        </Item>\n        <Item\n          location={'before'}\n          cssClass={'header-title'}\n          /* visible={!menuStatus} */\n        >\n          {company?.SecondaryLogo != undefined ? (\n            <img\n              //GOODLOGO\n              src={`data:image/jpeg;base64,${company?.SecondaryLogo}`}\n              style={\n                isXSmall\n                  ? {\n                      height: 'auto',\n                      maxWidth: '100px',\n                      maxHeight: '50px',\n                      marginTop: '-5%',\n                    }\n                  : {\n                      width: 'auto',\n                      height: 'auto',\n                      maxWidth: '146px',\n                      maxHeight: '50px',\n                      marginTop: '-5%',\n                    }\n              }\n              alt=\"\"\n            />\n          ) : null}\n        </Item>\n        <Item location={'after'} visible={isLarge ? true : false}>\n          <div\n            style={{\n              fontWeight: 'bold',\n            }}\n          >\n            {company?.Slogan}\n          </div>\n        </Item>\n        <Item location={'after'}>\n          <div></div>\n        </Item>\n        <Item\n          location={'after'}\n          locateInMenu={'auto'}\n          menuItemTemplate={'userPanelTemplate'}\n          cssClass={'userItem'}\n        >\n          <Button\n            className={'user-button authorization'}\n            width={210}\n            height={'100%'}\n            stylingMode={'text'}\n          >\n            <UserPanel menuMode={'context'} />\n          </Button>\n        </Item>\n        <Template name={'userPanelTemplate'}>\n          <UserPanel menuMode={'list'} />\n        </Template>\n      </Toolbar>\n    </header>\n  )\n}\n","import React from \"react\";\nimport \"./footer.scss\";\n\nexport default ({ ...rest }) => {\n  return <footer className={\"footer\"} {...rest} />;\n};\n","import React, { useState, createContext, useContext, useEffect } from \"react\";\n\nconst NavigationContext = createContext({});\nconst useNavigation = () => useContext(NavigationContext);\n\nfunction NavigationProvider(props: any) {\n  const [navigationData, setNavigationData] = useState({});\n\n  return (\n    <NavigationContext.Provider\n      value={{ navigationData, setNavigationData }}\n      {...props}\n    />\n  );\n}\n\nfunction withNavigationWatcher(Component: any) {\n  return function (props: any) {\n    const { path } = props.match;\n    const { setNavigationData } = useNavigation() as any;\n\n    useEffect(() => {\n      setNavigationData({ currentPath: path });\n    }, [path, setNavigationData]);\n\n    return React.createElement(Component, props);\n  };\n}\n\nexport { NavigationProvider, useNavigation, withNavigationWatcher };\n","import DataSource from \"devextreme/data/data_source\";\n\nexport const dataSourceTemas = new DataSource({\n    store: {\n        data: [\n            {\n                ID: \"generic.light\",\n                Name: \"light\",\n            },\n            {\n                ID: \"generic.dark\",\n                Name: \"dark\",\n            },\n            {\n                ID: \"generic.carmine\",\n                Name: \"carmine\",\n            },\n            {\n                ID: \"generic.softblue\",\n                Name: \"softblue\",\n            },\n            {\n                ID: \"generic.darkmoon\",\n                Name: \"darkmoon\",\n            },\n            {\n                ID: \"generic.darkviolet\",\n                Name: \"darkviolet\",\n            },\n            {\n                ID: \"generic.greenmist\",\n                Name: \"greenmist\",\n            },\n            {\n                ID: \"generic.contrast\",\n                Name: \"contrast\",\n            },\n            {\n                ID: \"generic.light.compact\",\n                Name: \"light compact\",\n            },\n            {\n                ID: \"generic.dark.compact\",\n                Name: \"dark compact\",\n            },\n            {\n                ID: \"generic.carmine.compact\",\n                Name: \"carmine compact\",\n            },\n            {\n                ID: \"generic.softblue.compact\",\n                Name: \"softblue compact\",\n            },\n            {\n                ID: \"generic.darkmoon.compact\",\n                Name: \"darkmoon compact\",\n            },\n            {\n                ID: \"generic.darkviolet.compact\",\n                Name: \"darkviolet compact\",\n            },\n            {\n                ID: \"generic.greenmist.compact\",\n                Name: \"greenmist compact\",\n            },\n            {\n                ID: \"generic.contrast.compact\",\n                Name: \"contrast compact\",\n            },\n            {\n                ID: \"material.blue.light\",\n                Name: \"material blue light\",\n            },\n            {\n                ID: \"material.blue.dark\",\n                Name: \"material blue dark\",\n            },\n            {\n                ID: \"material.lime.light\",\n                Name: \"material lime light\",\n            },\n            {\n                ID: \"material.lime.dark\",\n                Name: \"material lime dark\",\n            },\n            {\n                ID: \"material.orange.light\",\n                Name: \"material orange light\",\n            },\n            {\n                ID: \"material.orange.dark\",\n                Name: \"material orange dark\",\n            },\n            {\n                ID: \"material.purple.light\",\n                Name: \"material purple light\",\n            },\n            {\n                ID: \"material.purple.dark\",\n                Name: \"material purple dark\",\n            },\n            {\n                ID: \"material.teal.light\",\n                Name: \"material teal light\",\n            },\n            {\n                ID: \"material.teal.dark\",\n                Name: \"material teal dark\",\n            },\n            {\n                ID: \"material.blue.light.compact\",\n                Name: \"material blue light compact\",\n            },\n            {\n                ID: \"material.blue.dark.compact\",\n                Name: \"material blue dark compact\",\n            },\n            {\n                ID: \"material.lime.light.compact\",\n                Name: \"material lime light compact\",\n            },\n            {\n                ID: \"material.lime.dark.compact\",\n                Name: \"material lime dark compact\",\n            },\n            {\n                ID: \"material.orange.light.compact\",\n                Name: \"material orange light compact\",\n            },\n            {\n                ID: \"material.orange.dark.compact\",\n                Name: \"material orange dark compact\",\n            },\n            {\n                ID: \"material.purple.light.compact\",\n                Name: \"material purple light compact\",\n            },\n\n            {\n                ID: \"material.purple.light.compact\",\n                Name: \"material purple light compact\",\n            },\n            {\n                ID: \"material.purple.dark.compact\",\n                Name: \"material purple dark compact\",\n            },\n            {\n                ID: \"material.teal.light.compact\",\n                Name: \"material teal light compact\",\n            },\n            {\n                ID: \"material.teal.dark.compact\",\n                Name: \"material teal dark compact\",\n            },\n        ],\n        type: \"array\",\n        key: \"ID\",\n    },\n    //group: \"Category\",\n});","import React, { useEffect, useRef, useCallback, useMemo, useState } from 'react'\n\nimport { useNavigation } from '../../contexts/navigation'\nimport { useScreenSize } from '../../utils/media-query'\nimport './side-navigation-menu.scss'\nimport * as events from 'devextreme/events'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../redux/combineReducers'\nimport SelectBox from 'devextreme-react/select-box'\nimport { CambiarTema } from 'shared-services'\nimport Button from 'devextreme-react/button'\nimport { dataSourceTemas } from './dataSourceTemas'\nimport { useHistory } from 'react-router-dom'\nimport { Popup, ToolbarItem } from 'devextreme-react/popup'\nimport ScrollView from 'devextreme-react/scroll-view'\nimport { isModuloAllowed, modulos } from '../../utils/allowModuloUtil'\nimport {\n  isAdministrador,\n  isSuperAdministrador,\n} from '../../utils/allowAuthUtil'\ninterface MenuStatus {\n  Closed: 1\n  Opened: 2\n  TemporaryOpened: 3\n}\nexport default function SideNavigationMenu(props: any) {\n  const {\n    children,\n    openMenu,\n    closeMenu,\n    compactMode,\n    menuStatus,\n  }: {\n    children: any\n    selectedItemChanged: any\n    openMenu: any\n    closeMenu: any\n    compactMode: any\n    onMenuReady: any\n    menuStatus: MenuStatus\n    setMenuStatus: any\n    menuStatusHandler: any\n  } = props\n\n  const { isLarge } = useScreenSize()\n  const [popUpThemes, setPopUpThemes] = useState(false)\n  const [popUpHelpVisible, setPopUpHelpVisible] = useState(false)\n  const userState = useSelector((state: RootState) => state.user)\n  const [displayItemsMenu, setDisplayItemsMenu] = useState('flex')\n  const displayItemHandler = () => {\n    if (compactMode) {\n      setDisplayItemsMenu('none')\n    } else {\n      setDisplayItemsMenu('flex')\n    }\n    return displayItemsMenu\n  }\n\n  const usuarioState = useSelector((state: RootState) => state.user)\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handlePopupThemesShow = () => {\n    setPopUpThemes(true)\n  }\n  const handlePopupThemesHide = () => {\n    setPopUpThemes(false)\n  }\n  // Pop Up Ayudas\n  const handlePopupHelpShow = () => {\n    setPopUpHelpVisible(true)\n  }\n  const handlePopupHelpHide = () => {\n    setPopUpHelpVisible(false)\n  }\n  const buttonToolbarThemesOptions = {\n    icon: 'close',\n    onClick: function () {\n      handlePopupThemesHide()\n    },\n  }\n  const buttonToolbarHelpOptions = {\n    icon: 'close',\n    onClick: function () {\n      handlePopupHelpHide()\n    },\n  }\n\n  const navigation = [\n    {\n      text: 'Aplicaciones',\n    },\n\n    {\n      text: 'Home',\n      path: '/home',\n      icon: 'home',\n    },\n\n    {\n      text: 'Examples',\n      icon: 'folder',\n      items: [\n        {\n          text: 'Profile',\n          path: '/profile',\n        },\n        {\n          text: 'Tasks',\n          path: '/tasks',\n        },\n      ],\n    },\n  ]\n\n  function normalizePath() {\n    return navigation.map((item) => {\n      if (item.path && !/^\\//.test(item.path)) {\n        item.path = `/${item.path}`\n      }\n      return { ...item, expanded: isLarge }\n    })\n  }\n\n  const items = useMemo(\n    normalizePath,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  )\n\n  const {\n    navigationData: { currentPath },\n  } = useNavigation() as any\n\n  const treeViewRef: any = useRef()\n  const wrapperRef = useRef()\n  const getWrapperRef = useCallback(\n    (element) => {\n      const prevElement = wrapperRef.current\n      if (prevElement) {\n        events.off(prevElement, 'dxclick')\n      }\n\n      wrapperRef.current = element\n      events.on(element, 'dxclick', (e: any) => {\n        // openMenu(e)\n        closeMenu(e)\n      })\n    },\n    [openMenu],\n  )\n\n  useEffect(() => {\n    const treeView = treeViewRef.current && treeViewRef.current.instance\n    if (!treeView) {\n      return\n    }\n\n    if (currentPath !== undefined) {\n      treeView.selectItem(currentPath)\n      treeView.expandItem(currentPath)\n    }\n\n    if (compactMode) {\n      treeView.collapseAll()\n    }\n  }, [, /* currentPath */ compactMode])\n  function addIconClass(className: string, newClassName: string) {\n    var testarray = document.querySelector(className)\n    console.log('Elementos', testarray)\n    /*  for (var i = 0; i < testarray!.length; i++) {\n      testarray[i].className += newClassName;\n    } */\n  }\n\n  return (\n    <div\n      className={\n        'dx-swatch-additional side-navigation-menu dx-theme-background-color '\n      }\n     // style={{height:\"100vh\"}}\n      ref={getWrapperRef}\n      id={'panelList'}\n    >\n      {children}\n      <ScrollView>\n        <div\n          className={'menu-container'}\n          style={menuStatus ? { marginLeft: '-1em' } : { marginLeft: '-3em' }}\n        >\n          <div className=\"panel-list \" style={{ marginLeft: '3em' }} >\n            <div className=\"\">\n              <Button\n                //width={120}\n                text={menuStatus ? 'Inicio' : ''}\n                hint=\"Inicio\"\n                icon=\"home\"\n                type=\"normal\"\n                stylingMode=\"text\"\n                style={{ fontWeight: 'bold' }}\n                onClick={(e) => {\n                  history.push('/expedientePage')\n                  closeMenu(e)\n                }}\n              ></Button>\n            </div>\n\n            <div className=\"rect demo-dark\">\n              {!compactMode ? (\n                <h5\n                  style={{\n                    fontWeight: 'bold',\n                    marginBottom: '0',\n                  }}\n                >\n                  APLICACIONES\n                </h5>\n              ) : null}\n              <div>\n                {isModuloAllowed(userState!.user!, modulos.EXPEDIENTES) ? (\n                  !isSuperAdministrador(userState!.user!) ? (\n                    <Button\n                      text={menuStatus ? 'Expedientes' : ''}\n                      hint=\"Expedientes\"\n                      icon=\"verticalaligncenter\"\n                      type=\"normal\"\n                      stylingMode=\"text\"\n                      style={{ fontWeight: 'bold' }}\n                      onClick={(e) => {\n                        history.push('/ExpedientePage')\n                        closeMenu(e)\n                      }}\n                    ></Button>\n                  ) : null\n                ) : null}\n              </div>\n              {/* <div>\n                {isModuloAllowed(userState!.user!, modulos.EXPEDIENTES) ? (\n                  <Button\n                    text={menuStatus ? 'Expedientes' : ''}\n                    hint=\"Expedientes\"\n                    icon=\"verticalaligncenter\"\n                    type=\"normal\"\n                    stylingMode=\"text\"\n                    style={{ fontWeight: 'bold' }}\n                    onClick={(e) => {\n                      history.push('/ExpedientePage')\n                      closeMenu(e)\n                    }}\n                  ></Button>\n                ) : null}\n              </div> */}\n              {isModuloAllowed(userState!.user!, modulos.CALCULADORA) ? (\n                <Button\n                  text={menuStatus ? 'Calculadora' : ''}\n                  hint=\"Calculadora\"\n                  icon=\"percent\"\n                  type=\"normal\"\n                  stylingMode=\"text\"\n                  style={{ fontWeight: 'bold', margin: '0' }}\n                  onClick={(e) => {\n                    window.open(\n                      'https://svportal.elgestor.com/CalculadoraIntro.aspx?Id=' +\n                        usuarioState?.user?.CodigoCalculadora,\n                      '_blank',\n                    )\n                    closeMenu(e)\n                  }}\n                ></Button>\n              ) : null}\n            </div>\n\n            {isModuloAllowed(userState!.user!, modulos.ADMINISTRACION) ? (\n              <div className=\"rect demo-dark\">\n                {!compactMode ? (\n                  <h5 style={{ fontWeight: 'bold', marginBottom: '0' }}>\n                    ADMINISTRACI√ìN\n                  </h5>\n                ) : null}\n                <div>\n                  <Button\n                    text={menuStatus ? 'Gestor√≠as' : ''}\n                    hint=\"Gestor√≠as\"\n                    icon=\"toolbox\"\n                    type=\"normal\"\n                    stylingMode=\"text\"\n                    style={{ fontWeight: 'bold' }}\n                    onClick={(e) => {\n                      history.push('/Companies')\n                      closeMenu(e)\n                    }}\n                  ></Button>\n                </div>\n                <div>\n                  <Button\n                    text={menuStatus ? 'Usuarios' : ''}\n                    hint=\"Usuarios\"\n                    icon=\"group\"\n                    type=\"normal\"\n                    stylingMode=\"text\"\n                    style={{ fontWeight: 'bold' }}\n                    onClick={(e) => {\n                      history.push('/usuarios')\n                      closeMenu(e)\n                    }}\n                  ></Button>\n                </div>\n              </div>\n            ) : null}\n\n            <div className=\"rect demo-dark\">\n              {!compactMode ? (\n                <h5 style={{ fontWeight: 'bold', marginBottom: '0' }}>\n                  CONFIGURACI√ìN\n                </h5>\n              ) : null}\n              <div>\n                {isAdministrador(userState!.user!) ||\n                isSuperAdministrador(userState!.user!) ? (\n                  <Button\n                    text={menuStatus ? 'Plantillas' : ''}\n                    hint=\"Plantillas\"\n                    icon=\"cellproperties\"\n                    type=\"normal\"\n                    stylingMode=\"text\"\n                    style={{ fontWeight: 'bold' }}\n                    onClick={() => history.push('/Plantillas')}\n                  ></Button>\n                ) : null}\n              </div>\n              <div>\n                {isAdministrador(userState!.user!) ||\n                isSuperAdministrador(userState!.user!) ? (\n                  <Button\n                    text={menuStatus ? 'Perfiles' : ''}\n                    hint=\"Perfiles\"\n                    icon=\"smalliconslayout\"\n                    type=\"normal\"\n                    stylingMode=\"text\"\n                    style={{ fontWeight: 'bold' }}\n                    onClick={() => history.push('/perfiles')}\n                  ></Button>\n                ) : null}\n              </div>\n              <div>\n                <Button\n                  //width={220}\n\n                  text={menuStatus ? 'Tema' : ''}\n                  hint=\"Tema\"\n                  icon=\"palette\"\n                  type=\"normal\"\n                  stylingMode=\"text\"\n                  style={{ fontWeight: 'bold' }}\n                  onClick={(e) => {\n                    handlePopupThemesShow()\n                    closeMenu(e)\n                  }}\n                ></Button>\n              </div>\n            </div>\n            <div className=\"rect demo-dark\"></div>\n          </div>\n          <Popup\n            visible={popUpThemes}\n            onHiding={handlePopupThemesHide}\n            dragEnabled={true}\n            closeOnOutsideClick={false}\n            showTitle={true}\n            title=\"Selecci√≥n de Tema\"\n            resizeEnabled={true}\n            showCloseButton={false}\n            width=\"70vw\"\n            height=\"20vh\"\n          >\n            <ToolbarItem\n              options={buttonToolbarThemesOptions}\n              widget=\"dxButton\"\n              location=\"after\"\n            />\n            <div>\n              <SelectBox\n                dataSource={dataSourceTemas}\n                valueExpr=\"ID\"\n                displayExpr=\"Name\"\n                searchEnabled={true}\n                placeholder={\n                  localStorage.getItem('dx-theme')\n                    ? localStorage.getItem('dx-theme')!.replace(/\\./g, ' ')!\n                    : 'Elige un tema'\n                }\n                onValueChanged={(event: any) => {\n                  let themeSelect = event.value\n                  window.localStorage.setItem('dx-theme', themeSelect)\n                  window.location.reload()\n                }}\n              />\n            </div>\n          </Popup>\n        </div>\n      </ScrollView>\n    </div>\n  )\n}\n","import Button from 'devextreme-react/button'\nimport Drawer from 'devextreme-react/drawer'\nimport ScrollView from 'devextreme-react/scroll-view'\nimport Toolbar, { Item } from 'devextreme-react/toolbar'\nimport React, { useState, useCallback, useRef } from 'react'\nimport { useHistory } from 'react-router'\nimport { Footer } from '../../components'\nimport './side-nav-inner-toolbar.scss'\nimport '../../utils/patches.scss'\nimport { useScreenSize } from '../../utils/media-query'\nimport { Template } from 'devextreme-react/core/template'\nimport SelectBox from 'devextreme-react/select-box'\nimport DataSource from 'devextreme/data/data_source'\nimport SideNavigationMenu from '../side-navigation-menu/side-navigation-menu'\nimport { Header } from '..'\nimport { CambiarTema } from 'shared-services'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../redux/combineReducers'\nimport { addUpdateTheme } from '../../pages/loginPage/redux/authActions'\nimport { ConfigModel } from '../../models/usuario/configModel'\nimport { useMenuPatch } from '../../utils/patches'\nimport Box from 'devextreme-react/box'\nimport { Item as ItemBox } from 'devextreme-react/box'\n\nexport default function SideNavbarInner({\n  title,\n  children,\n}: {\n  title?: any\n  children: any\n}) {\n  const scrollViewRef: any = useRef()\n  const history = useHistory()\n  const { isXSmall, isLarge } = useScreenSize()\n  const [patchCssClass, onMenuReady] = useMenuPatch()\n  const [menuStatus, setMenuStatus] = useState(\n    isLarge ? MenuStatus.Closed : MenuStatus.Closed,\n  )\n  /*   const [menuStatus, setMenuStatus] = useState(\n    isLarge ? MenuStatus.Opened : MenuStatus.Closed\n  ); */\n  const [visibilityLogos, setVisibilityLogos] = useState('')\n\n  //usuario\n  const usuarioState = useSelector((state: RootState) => state.user)\n  const company = useSelector(\n    (state: RootState) => state.company?.parentCompany,\n  )\n  const toggleMenu = useCallback(({ event }) => {\n    setMenuStatus((prevMenuStatus) =>\n      prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.Opened\n        : MenuStatus.Closed,\n    )\n\n    event.stopPropagation()\n  }, [])\n\n  const temporaryOpenMenu = useCallback(() => {\n    setMenuStatus((prevMenuStatus) =>\n      prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.TemporaryOpened\n        : prevMenuStatus,\n    )\n  }, [])\n  const temporaryClosedMenu = useCallback(() => {\n    setMenuStatus(MenuStatus.Closed)\n  }, [])\n\n  const onOutsideClick = useCallback(() => {\n    setMenuStatus((prevMenuStatus) =>\n      prevMenuStatus !== MenuStatus.Closed && !isLarge\n        ? MenuStatus.Closed\n        : prevMenuStatus,\n    )\n\n    return isLarge\n  }, [isLarge])\n\n  const onNavigationChanged = useCallback(\n    ({ itemData: { path }, event, node }) => {\n      if (menuStatus === MenuStatus.Closed || !path || node.selected) {\n        event.preventDefault()\n        return\n      }\n\n      history.push(path)\n      scrollViewRef.current!.instance.scrollTo(0)\n\n      if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\n        setMenuStatus(MenuStatus.Closed)\n        event.stopPropagation()\n      }\n    },\n    [history, menuStatus, isLarge],\n  )\n\n  var logo1 = {\n    width: 'auto',\n    height: 'auto',\n    maxWidth: '220px',\n    maxHeight: '120px',\n    //align: \"right\",\n    marginLeft: '1em',\n    marginTop: '0.2em',\n    Visibility: menuStatus === MenuStatus.Closed ? 'hidden' : 'visible',\n  }\n\n  var logo2 = {\n    width: 'auto',\n    height: 'auto',\n    maxWidth: '160px',\n    maxHeight: '90px',\n    align: 'right',\n    marginLeft: '3em',\n    marginTop: '0.2em',\n  }\n\n  return (\n    <div className={'side-nav-inner-toolbar'}>\n      <Drawer\n        className={['drawer', patchCssClass].join(' ')}\n        id={'drawerApp'}\n        position={'before'}\n        closeOnOutsideClick={onOutsideClick}\n        //openedStateMode={isLarge ? 'shrink' : 'overlap'}\n        openedStateMode={isLarge ? 'shrink' : 'push'}\n        \n        activeStateEnabled={true}\n        hoverStateEnabled={true}\n        focusStateEnabled={true}\n        revealMode={isXSmall ? 'slide' : 'expand'}\n        minSize={isXSmall ? 0 : 36}\n        maxSize={250}\n        shading={isLarge ? false : true}\n        opened={menuStatus === MenuStatus.Closed ? false : true}\n        template={'menu'}\n      >\n         \n        <Header\n          menuToggleEnabled={isXSmall}\n          toggleMenu={toggleMenu}\n          title=\"\"\n          userState={usuarioState}\n          menuStatus={menuStatus === MenuStatus.Closed ? false : true}\n          company={company}\n        />\n\n      \n          <div className={'content'}>\n            {React.Children.map(children, (item) => {\n              return item.type !== Footer && item\n            })}\n          </div>\n          <div className={'content-block'}>\n            {React.Children.map(children, (item) => {\n              return item.type === Footer && item\n            })}\n          </div>\n       \n        \n        <Template name={'menu'}>\n          <SideNavigationMenu\n            compactMode={menuStatus === MenuStatus.Closed}\n            selectedItemChanged={onNavigationChanged}\n            openMenu={temporaryOpenMenu}\n            closeMenu={temporaryClosedMenu}\n            menuStatus={menuStatus === MenuStatus.Closed ? false : true}\n            setMenuStatus={setMenuStatus}\n            menuStatusHandler={MenuStatus}\n            /*   onMenuReady={onMenuReady} */\n          >\n            <Toolbar\n              id={'navigation-header'}\n              //className={\"dx-theme-accent-as-background-color\"}\n              //style={{ height: \"6.9vh\" }}\n            >\n              {!isXSmall && (\n                <Item location={'before'} cssClass={'menu-button'}>\n                  <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\n                </Item>\n              )}\n              <Item location={'before'} cssClass={'header-title'}></Item>\n            </Toolbar>\n          \n            \n          </SideNavigationMenu>\n        </Template>\n       \n      </Drawer>\n    </div>\n  )\n}\n\nconst MenuStatus = {\n  Closed: 1,\n  Opened: 2,\n  TemporaryOpened: 3,\n}\n","import { useState, useCallback } from 'react';\nimport { useScreenSize } from './media-query';\n\nexport function useMenuPatch() {\n  const { isSmall, isMedium } = useScreenSize();\n  const [enabled, setEnabled] = useState(isSmall || isMedium);\n  const onMenuReady = useCallback(() => {\n    if (!enabled) {\n      return;\n    }\n\n    setTimeout(() => setEnabled(false));\n  }, [enabled]);\n\n  return [enabled ? 'pre-init-blink-fix' : '', onMenuReady];\n}\n","export default {\n  title: 'Proyecto Base'\n};\n","import React from 'react';\nimport 'devextreme/data/odata/store';\nimport DataGrid, {\n  Column,\n  Pager,\n  Paging,\n  FilterRow,\n  Lookup\n} from 'devextreme-react/data-grid';\n\nexport default () => (\n  <React.Fragment>\n    <h2 className={'content-block'}>Tasks</h2>\n\n    <DataGrid\n      className={'dx-card wide-card'}\n      dataSource={dataSource}\n      showBorders={false}\n      focusedRowEnabled={true}\n      defaultFocusedRowIndex={0}\n      columnAutoWidth={true}\n      columnHidingEnabled={true}\n    >\n      <Paging defaultPageSize={10} />\n      <Pager showPageSizeSelector={true} showInfo={true} />\n      <FilterRow visible={true} />\n\n      <Column dataField={'Task_ID'} width={90} hidingPriority={2} />\n      <Column\n        dataField={'Task_Subject'}\n        width={190}\n        caption={'Subject'}\n        hidingPriority={8}\n      />\n      <Column\n        dataField={'Task_Status'}\n        caption={'Status'}\n        hidingPriority={6}\n      />\n      <Column\n        dataField={'Task_Priority'}\n        caption={'Priority'}\n        hidingPriority={5}\n      >\n        <Lookup\n          dataSource={priorities}\n          valueExpr={'value'}\n          displayExpr={'name'}\n        />\n      </Column>\n      <Column\n        dataField={'ResponsibleEmployee.Employee_Full_Name'}\n        caption={'Assigned To'}\n        allowSorting={false}\n        hidingPriority={7}\n      />\n      <Column\n        dataField={'Task_Start_Date'}\n        caption={'Start Date'}\n        dataType={'date'}\n        hidingPriority={3}\n      />\n      <Column\n        dataField={'Task_Due_Date'}\n        caption={'Due Date'}\n        dataType={'date'}\n        hidingPriority={4}\n      />\n      <Column\n        dataField={'Task_Priority'}\n        caption={'Priority'}\n        name={'Priority'}\n        hidingPriority={1}\n      />\n      <Column\n        dataField={'Task_Completion'}\n        caption={'Completion'}\n        hidingPriority={0}\n      />\n    </DataGrid>\n  </React.Fragment>\n);\n\nconst dataSource = {\n  store: {\n    type: 'odata',\n    key: 'Task_ID',\n    url: 'https://js.devexpress.com/Demos/DevAV/odata/Tasks'\n  },\n  expand: 'ResponsibleEmployee',\n  select: [\n    'Task_ID',\n    'Task_Subject',\n    'Task_Start_Date',\n    'Task_Due_Date',\n    'Task_Status',\n    'Task_Priority',\n    'Task_Completion',\n    'ResponsibleEmployee/Employee_Full_Name'\n  ]\n};\n\nconst priorities = [\n  { name: 'High', value: 4 },\n  { name: 'Urgent', value: 3 },\n  { name: 'Normal', value: 2 },\n  { name: 'Low', value: 1 }\n];\n","import React, { useState } from 'react';\nimport './profile.scss';\nimport Form from 'devextreme-react/form';\n\nexport default () => {\n  const [notes, setNotes] = useState(\n    'Sandra is a CPA and has been our controller since 2008. She loves to interact with staff so if you`ve not met her, be certain to say hi.\\r\\n\\r\\nSandra has 2 daughters both of whom are accomplished gymnasts.'\n  );\n  const employee = {\n    ID: 7,\n    FirstName: 'Sandra',\n    LastName: 'Johnson',\n    Prefix: 'Mrs.',\n    Position: 'Controller',\n    Picture: 'images/employees/06.png',\n    BirthDate: new Date('1974/11/15'),\n    HireDate: new Date('2005/05/11'),\n    Notes: notes,\n    Address: '4600 N Virginia Rd.'\n  };\n\n  return (\n    <React.Fragment>\n      <h2 className={'content-block'}>Profile</h2>\n\n      <div className={'content-block dx-card responsive-paddings'}>\n        <div className={'form-avatar'}>\n          <img\n            alt={''}\n            src={`https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/${\n              employee.Picture\n            }`}\n          />\n        </div>\n        <span>{notes}</span>\n      </div>\n\n      <div className={'content-block dx-card responsive-paddings'}>\n        <Form\n          id={'form'}\n          defaultFormData={employee}\n          onFieldDataChanged={e => e.dataField === 'Notes' && setNotes(e.value)}\n          labelLocation={'top'}\n          colCountByScreen={colCountByScreen}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst colCountByScreen = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4\n};\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, FileUploader, Form, ProgressBar } from 'devextreme-react'\n\nimport {\n  GroupItem,\n  Item,\n  Label,\n  RequiredRule,\n  SimpleItem,\n} from 'devextreme-react/form'\nimport './scss/companiesAdministracionStyles.scss'\n\nimport { checkScreenSize } from 'shared-utils'\nimport { confirm } from 'devextreme/ui/dialog'\n\nimport ReactDOM from 'react-dom'\nimport CreateToolbarComponent from '../../../administracionPages/navigationAdministracion/toolbarComponent'\n\nimport { useForm } from 'react-hook-form'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { useScreenSize } from '../../../../utils/media-query'\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport { ToolbarModel } from '../../../../models/toolbarModel'\nimport { postCompany } from '../services/companiesServices'\nimport { CompanyModel } from '../models/companyModel'\n\nfunction CompaniesAdministracionComponent(): ReactElement {\n  const userState = useSelector((state: RootState) => state.user)\n  const administracionLegalState = useSelector(\n    (state: RootState) => state.administracionLegal?.legal,\n  )\n  const { isXSmall, isLarge } = useScreenSize()\n\n  const [loading, setLoading] = useState(false)\n  const formData = useRef({})\n  const dispatch = useDispatch()\n  var principalLogo: any\n  var secondaryLogo: any\n\n  const [isDropZoneActiveLogo1, setIsDropZoneActiveLogo1] = useState(false)\n  const [isDropZoneActiveLogo2, setIsDropZoneActiveLogo2] = useState(false)\n  const [imageSourceLogo1, setImageSourceLogo1]: any = useState('')\n  const [imageSourceLogo2, setImageSourceLogo2]: any = useState('')\n  const [textVisibleLogo1, setTextVisibleLogo1] = useState(true)\n  const [textVisibleLogo2, setTextVisibleLogo2] = useState(true)\n  const [progressVisibleLogo1, setProgressVisibleLogo1] = useState(false)\n  const [progressVisibleLogo2, setProgressVisibleLogo2] = useState(false)\n  const [progressValueLogo1, setProgressValueLogo1] = useState(0)\n  const [progressValueLogo2, setProgressValueLogo2] = useState(0)\n\n  const { register, handleSubmit } = useForm()\n\n  useEffect(() => {\n    async function fetchData() {}\n    fetchData()\n  }, [])\n\n  const onSubmit = async (data: any) => {\n    const {\n      allowChangePassword,\n      contactInformation,\n      enabled,\n      name,\n      notificationsEmail,\n      principalLogo,\n      secondaryLogo,\n      slogan,\n    } = formData.current as any\n    setLoading(true)\n\n    let confirmDialog = confirm(\n      '<i>¬øEst√° seguro de que quiere guardar la informaci√≥n?</i>',\n      'Confirma los cambios',\n    )\n    confirmDialog.then((dialogResult) => {\n      if (dialogResult) {\n        dialogCall()\n      } else {\n        setLoading(false)\n      }\n    })\n\n    const dialogCall = async () => {\n      //const result = await postCompany(formData.current)\n      const result = await postCompany(userState!.user!, new CompanyModel())\n\n      if (result) {\n        setLoading(false)\n        //? para Agregar a redux\n        //dispatch(addLegalAdminstracion(result));\n        //notify(result.message, \"error\", 2000);\n      } else {\n        setLoading(false)\n      }\n    }\n  }\n  //gestion de subida de imagenes\n  const onSelectedFilesChanged = (selectorFiles: FileList) => {\n    principalLogo = selectorFiles\n  }\n  const onSelectedFilesChanged2 = (selectorFiles2: FileList) => {\n    secondaryLogo = selectorFiles2\n  }\n  const onDropZoneEnterLogo1 = (e: any) => {\n    if (e.dropZoneElement.id === 'dropzone-external') {\n      setIsDropZoneActiveLogo1(true)\n    }\n  }\n\n  const onDropZoneLeaveLogo1 = (e: any) => {\n    if (e.dropZoneElement.id === 'dropzone-external') {\n      setIsDropZoneActiveLogo1(false)\n    }\n  }\n  const onDropZoneEnterLogo2 = (e: any) => {\n    if (e.dropZoneElement.id === 'dropzone-external2') {\n      setIsDropZoneActiveLogo2(true)\n    }\n  }\n\n  const onDropZoneLeaveLogo2 = (e: any) => {\n    if (e.dropZoneElement.id === 'dropzone-external2') {\n      setIsDropZoneActiveLogo2(false)\n    }\n  }\n  const onProgressLogo1 = (e: any) => {\n    setProgressValueLogo1((e.bytesLoaded / e.bytesTotal) * 100)\n  }\n  const onProgressLogo2 = (e: any) => {\n    setProgressValueLogo2((e.bytesLoaded / e.bytesTotal) * 100)\n  }\n\n  const onUploadStartedLogo1 = () => {\n    setImageSourceLogo1('')\n    setProgressVisibleLogo1(true)\n  }\n\n  const onUploadStartedLogo2 = () => {\n    setImageSourceLogo2('')\n    setProgressVisibleLogo2(true)\n  }\n  const onUploadedLogo1 = (e: any) => {\n    const file = e.file\n    const fileReader = new FileReader()\n    fileReader.onload = () => {\n      setIsDropZoneActiveLogo1(false)\n      setImageSourceLogo1(fileReader.result)\n    }\n    fileReader.readAsDataURL(file)\n    setTextVisibleLogo1(false)\n    setProgressVisibleLogo1(false)\n    setProgressValueLogo1(0)\n  }\n  const onUploadedLogo2 = (e: any) => {\n    const file = e.file\n    const fileReader = new FileReader()\n    fileReader.onload = () => {\n      setIsDropZoneActiveLogo2(false)\n      setImageSourceLogo2(fileReader.result)\n    }\n    fileReader.readAsDataURL(file)\n    setTextVisibleLogo2(false)\n    setProgressVisibleLogo2(false)\n    setProgressValueLogo2(0)\n  }\n  //-----final gestion subida de imagenes\n\n  //render para botones de guardar y concelar\n  const renderButtons = () => {\n    return (\n      <>\n        <Button\n          icon=\"remove\"\n          text=\"Cancelar\"\n          type=\"normal\"\n          stylingMode=\"outlined\"\n          style={{\n            float: 'right',\n            margin: '1em',\n          }}\n        />\n\n        <Button\n          icon=\"save\"\n          text=\"Guardar\"\n          type=\"default\"\n          useSubmitBehavior={true}\n          stylingMode=\"contained\"\n          style={{ float: 'right', margin: '1em' }}\n        />\n\n        {/* //! spinner de los botones, hay que ver como meterlo \n         <span className=\"dx-button-text\">\n          {loading ? (\n            <LoadIndicator width={\"24px\"} height={\"24px\"} visible={true} />\n          ) : (\n            <>\n              {\" \"}\n              <i className=\"dx-icon-remove\"> </i>\n              Cancelar\n            </>\n          )}\n        </span> */}\n      </>\n    )\n  }\n  //-----final render botones de guardar y cancelar\n  return (\n    <>\n      <div\n        className={'content-block dx-card responsive-paddings'}\n        style={{ borderColor: '#f4f9ff', borderWidth: '2px', margin: '0.6%' }}\n      >\n        <div className={'content-block  '}>\n          <form\n            className={'legalForm'}\n            onSubmit={handleSubmit(onSubmit)}\n            encType=\"multipart/form-data\"\n            style={{ width: '100%' }}\n          >\n            <Form\n              formData={formData.current}\n              disabled={loading}\n              labelLocation={isLarge ? 'left' : 'top'}\n            >\n              <GroupItem\n                caption=\"Creaci√≥n de Compa√±√≠a\"\n                cssClass={'titleCenter'}\n              ></GroupItem>\n              <GroupItem colCount=\"2\">\n                <Item\n                  dataField={'name'}\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Nombre de compa√±√≠a',\n\n                    mode: 'text',\n                  }}\n                >\n                  <RequiredRule message=\"El campo es requerido\" />\n\n                  <Label visible={true} text=\"Nombre\" />\n                </Item>\n                <Item\n                  dataField={'slogan'}\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Eslogan de la compa√±√≠a',\n\n                    mode: 'text',\n                  }}\n                >\n                  <RequiredRule message=\"El campo es requerido\" />\n\n                  <Label visible={true} text=\"Eslogan\" />\n                </Item>\n                <Item\n                  dataField={'contactInformation'}\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Informaci√≥n de contacto',\n\n                    mode: 'text',\n                  }}\n                >\n                  <RequiredRule message=\"El campo es requerido\" />\n\n                  <Label visible={true} text=\"Informaci√≥n del contacto\" />\n                </Item>\n\n                <Item\n                  dataField={'notificationsEmail'}\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Email para notificaciones',\n\n                    mode: 'text',\n                  }}\n                >\n                  <RequiredRule message=\"El campo es requerido\" />\n                  {/* <EmailRule message=\"Email is invalid\" /> */}\n                  <Label visible={true} text=\"Email para notificaciones\" />\n                </Item>\n                <Item\n                  dataField={'allowChangePassword'}\n                  editorType={'dxCheckBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n\n                    mode: 'text',\n                  }}\n                >\n                  <Label visible={true} text=\"Permitir cambiar contrase√±a\" />\n                </Item>\n                <Item\n                  dataField={'enabled'}\n                  editorType={'dxCheckBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n\n                    mode: 'text',\n                  }}\n                >\n                  <Label visible={true} text=\"Compa√±√≠a activa\" />\n                </Item>\n              </GroupItem>\n              <GroupItem colCount=\"2\">\n                <Item dataField={'principalLogo'}>\n                  <div className=\"widget-container flex-box\">\n                    <span>Logo principal</span>\n                    <div\n                      id=\"dropzone-external\"\n                      className={`flex-box ${\n                        isDropZoneActiveLogo1\n                          ? 'dx-theme-accent-as-border-color dropzone-active'\n                          : 'dx-theme-border-color'\n                      }`}\n                    >\n                      {imageSourceLogo1 && (\n                        <img\n                          id=\"dropzone-image\"\n                          src={imageSourceLogo1}\n                          alt=\"\"\n                        />\n                      )}\n                      {textVisibleLogo1 && (\n                        <div id=\"dropzone-text\" className=\"flex-box\">\n                          <span>Arrastra aqu√≠ el archivo</span>\n                          <span>‚Ä¶o haz clic para subirlo.</span>\n                        </div>\n                      )}\n                      <ProgressBar\n                        id=\"upload-progress\"\n                        min={0}\n                        max={100}\n                        width=\"30%\"\n                        showStatus={false}\n                        visible={progressVisibleLogo1}\n                        value={progressValueLogo1}\n                      ></ProgressBar>\n                    </div>\n                    <FileUploader\n                      id=\"file-uploader\"\n                      dialogTrigger=\"#dropzone-external\"\n                      dropZone=\"#dropzone-external\"\n                      multiple={false}\n                      allowedFileExtensions={['.jpg', '.jpeg', '.gif', '.png']}\n                      uploadMode=\"instantly\"\n                      uploadUrl=\"https://js.devexpress.com/Demos/NetCore/FileUploader/Upload\"\n                      visible={false}\n                      onDropZoneEnter={onDropZoneEnterLogo1}\n                      onDropZoneLeave={onDropZoneLeaveLogo1}\n                      onUploaded={onUploadedLogo1}\n                      onProgress={onProgressLogo1}\n                      onUploadStarted={onUploadStartedLogo1}\n                      onValueChange={(e) => {\n                        onSelectedFilesChanged(e)\n                      }}\n                    ></FileUploader>\n                  </div>\n                  <Label visible={false} text=\"Logo principal\" />\n                </Item>\n\n                <Item dataField={'secondaryLogo'}>\n                  <div className=\"widget-container flex-box\">\n                    <span>Logo Secundario</span>\n                    <div\n                      id=\"dropzone-external2\"\n                      className={`flex-box ${\n                        isDropZoneActiveLogo2\n                          ? 'dx-theme-accent-as-border-color dropzone-active'\n                          : 'dx-theme-border-color'\n                      }`}\n                    >\n                      {imageSourceLogo2 && (\n                        <img\n                          id=\"dropzone-image2\"\n                          src={imageSourceLogo2}\n                          alt=\"\"\n                        />\n                      )}\n                      {textVisibleLogo2 && (\n                        <div id=\"dropzone-text2\" className=\"flex-box\">\n                          <span>Arrastra aqu√≠ el archivo</span>\n                          <span>‚Ä¶o haz clic para subirlo.</span>\n                        </div>\n                      )}\n                      <ProgressBar\n                        id=\"upload-progress2\"\n                        min={0}\n                        max={100}\n                        width=\"30%\"\n                        showStatus={false}\n                        visible={progressVisibleLogo2}\n                        value={progressValueLogo2}\n                      ></ProgressBar>\n                    </div>\n                    <FileUploader\n                      id=\"file-uploader2\"\n                      dialogTrigger=\"#dropzone-external2\"\n                      dropZone=\"#dropzone-external2\"\n                      multiple={false}\n                      allowedFileExtensions={['.jpg', '.jpeg', '.gif', '.png']}\n                      uploadMode=\"instantly\"\n                      uploadUrl=\"https://js.devexpress.com/Demos/NetCore/FileUploader/Upload\"\n                      visible={false}\n                      onDropZoneEnter={onDropZoneEnterLogo2}\n                      onDropZoneLeave={onDropZoneLeaveLogo2}\n                      onUploaded={onUploadedLogo2}\n                      onProgress={onProgressLogo2}\n                      onUploadStarted={onUploadStartedLogo2}\n                      onValueChange={(e) => {\n                        onSelectedFilesChanged2(e)\n                      }}\n                    ></FileUploader>\n                  </div>\n                  <Label visible={false} text=\"Logo Secundario\" />\n                </Item>\n              </GroupItem>\n              <SimpleItem render={renderButtons} cssClass=\"alignBottom\" />\n            </Form>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default CompaniesAdministracionComponent\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('ModuloComponenteModel')\nexport class ModuloComponenteModel {\n  @JsonProperty('Id', Number, 0)\n  Id: Number = 0\n  @JsonProperty('IdPlantilla', Number, 0)\n  IdPlantilla: Number = 0\n  @JsonProperty('IdTipoComponente', Number, 0)\n  IdTipoComponente: Number = 0\n  @JsonProperty('Nombre', String)\n  Nombre: string = ''\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('ComponenteModel')\nexport class ComponenteModel {\n  @JsonProperty('Id', Number)\n  Id: Number = 0\n  @JsonProperty('IdPlantilla', Number)\n  IdPlantilla: Number = 0\n  @JsonProperty('IdTipoComponente', Number)\n  IdTipoComponente: Number = 0\n  @JsonProperty('TipoComponente', String || null)\n  TipoComponente: String = ''\n  @JsonProperty('Plantilla', String || null)\n  Plantilla: String = ''\n  @JsonProperty('ComponentesAsociados', String || null)\n  ComponentesAsociados: String = ''\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel } from 'shared-models'\nimport { ModuloComponenteModel } from './moduloComponenteModel'\n\n@JsonObject('ModuloComponenteCampoDatoModel')\nexport class ModuloComponenteCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModel] || [])\n  Campos: ColumnModel[] = []\n  @JsonProperty('Datos', [ModuloComponenteModel] || [])\n  Datos: ModuloComponenteModel[] = []\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel } from 'shared-models'\nimport { ComponenteModel } from './componenteModel'\n\n@JsonObject('ComponentesModel')\nexport class ComponenteCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModel] || [])\n  Campos: ColumnModel[] = []\n  @JsonProperty('Datos', [ComponenteModel] || [])\n  Datos: ComponenteModel[] = []\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { checkStatusCode, methodsEndPointType } from 'shared-utils'\nimport { UserModel } from 'shared-models'\nimport { authHeader } from 'shared-services'\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport { ModuloComponenteCampoDatoModel } from '../models/moduloComponenteModel/moduloComponenteCampoDatoModel'\nimport { ComponenteCampoDatoModel } from '../models/componenteModel/componenteDatoModelModel'\nimport { ComponenteModel } from '../models/componenteModel/componenteModel'\n\nconst serviceName = 'ComponentesService'\nexport const getComponentes = async (\n  user: UserModel,\n): Promise<ComponenteCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Componente`\n    let ComponenteData: ComponenteCampoDatoModel =\n      new ComponenteCampoDatoModel()\n    let datos\n    await axios({\n      url: url,\n      method: methodsEndPointType.GET,\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        ComponenteData = jsonConvert.deserializeObject(\n          response.data,\n          ComponenteCampoDatoModel,\n        )\n        datos = response.data\n      })\n      .catch((error) => {\n        showToast(\n          'No se han podido obtener los componentes.',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return ComponenteData\n  } catch (err) {\n    console.error(err)\n  }\n}\nexport const getComponente = async (\n  user: UserModel,\n  Id: Number,\n): Promise<ModuloComponenteCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/ModuloComponente/` + Id\n    let ModuloComponenteData: ModuloComponenteCampoDatoModel =\n      new ModuloComponenteCampoDatoModel()\n    let datos\n    await axios({\n      url: url,\n      method: methodsEndPointType.GET,\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        ModuloComponenteData = jsonConvert.deserializeObject(\n          response.data,\n          ModuloComponenteCampoDatoModel,\n        )\n        datos = response.data\n      })\n      .catch((error) => {\n        showToast(\n          'No se han podido obtener el componente.',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return ModuloComponenteData\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n\nexport async function getStructure(\n  user: UserModel,\n): Promise<ComponenteCampoDatoModel> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Componente/Structure`\n\n  let componente: ComponenteCampoDatoModel = new ComponenteCampoDatoModel()\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    // headers: authHeader(user),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      componente = jsonConvert.deserializeObject(\n        response.data,\n        ComponenteCampoDatoModel,\n      )\n    })\n    .catch((error) => {\n      return {}\n    })\n\n  return componente\n}\n\nexport function getMapperComponente(componenteData: any): ComponenteModel {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let componete: ComponenteModel = jsonConvert.deserializeObject(\n    componenteData,\n    ComponenteModel,\n  )\n  return componete\n}\n","import { ModuloModel } from '../../models/moduloModel/moduloModel'\nimport { ModuloCampoDatoModel } from '../../models/moduloModel/moduloCampoDatoModel'\nimport {\n  ADD_MODULO,\n  ADD_MODULOS,\n  CLEAR_MODULO,\n  ModuloActionsTypes,\n} from './moduloType'\n\nexport const addModulo = (\n  sujeto: Partial<ModuloModel> | undefined,\n): ModuloActionsTypes => ({\n  type: ADD_MODULO,\n  payload: sujeto,\n})\n\nexport const clearModulo = (\n  sujeto: ModuloModel | undefined,\n): ModuloActionsTypes => ({\n  type: CLEAR_MODULO,\n  payload: sujeto,\n})\nexport const addModulos = (\n  sujetos: ModuloCampoDatoModel | undefined,\n): ModuloActionsTypes => ({\n  type: ADD_MODULOS,\n  payload: sujetos,\n})\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('ModuloModel')\nexport class ModuloModel {\n  @JsonProperty('Id', Number, 0)\n  Id: Number = 0\n  @JsonProperty('Nombre', String)\n  Nombre: string = ''\n  @JsonProperty('Descripcion', String)\n  Descripcion: string = ''\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel } from 'shared-models'\nimport { ModuloModel } from './moduloModel'\n\n@JsonObject('ModuloCampoDatoModel')\nexport class ModuloCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModel] || [])\n  Campos: ColumnModel[] = []\n  @JsonProperty('Datos', [ModuloModel] || [])\n  Datos: ModuloModel[] = []\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { checkStatusCode } from 'shared-utils'\nimport { logger } from 'login-service'\nimport { UserModel } from 'shared-models'\nimport { authHeader } from 'shared-services'\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport { ModuloCampoDatoModel } from '../models/moduloModel/moduloCampoDatoModel'\n\nconst serviceName = 'ModulosService'\nexport const getModulos = async (\n  user: UserModel,\n): Promise<ModuloCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Modulo`\n    let ModuloData: ModuloCampoDatoModel = new ModuloCampoDatoModel()\n    let datos\n    const headers = {\n      Authorization: user.Token,\n      'My-Custom-Header': 'foobar',\n    }\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: headers,\n    })\n      .then((response) => {\n        ModuloData = jsonConvert.deserializeObject(\n          response.data,\n          ModuloCampoDatoModel,\n        )\n        datos = response.data\n      })\n      .catch((error) => {\n        showToast(\n          'No se han podido obtener las compa√±ias.',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return ModuloData\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\n@JsonObject('PlantillaCamposModel')\nexport class PlantillaCamposModel {\n  @JsonProperty('Id', Number)\n  Id: Number = 0\n  @JsonProperty('IdPlantilla', Number)\n  IdPlantilla: Number = 0\n  @JsonProperty('IdCampo', Number)\n  IdCampo: Number = 0\n  @JsonProperty('Nombre', String)\n  Nombre: String = ''\n  @JsonProperty('Visible', Boolean)\n  Visible: Boolean = false\n  @JsonProperty('Orden', Number)\n  Orden: Number = 0\n  @JsonProperty('Ancho', Number)\n  Ancho: Number = 0\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n// export class ComponentePlantillaCustomPerfiles {\n//   @JsonProperty('Id', Number)\n//   Id: Number = 0\n//   @JsonProperty('IdComponente', Number)\n//   IdComponente: Number = 0\n//   @JsonProperty('IdPerfil', Number)\n//   IdPerfil: Number = 0\n//   @JsonProperty('IdPlantilla', Number)\n//   IdPlantilla: Number = 0\n// }\n@JsonObject('PlantillaModel')\nexport class PlantillaModel {\n  @JsonProperty('Id', Number)\n  Id: Number = 0\n  @JsonProperty('Nombre', String)\n  Nombre: string = ''\n  @JsonProperty('EsGenerica', Boolean)\n  EsGenerica: Boolean = false\n  @JsonProperty('IdPlantillaParent', Number)\n  IdPlantillaParent: Number = 0\n  @JsonProperty('IdPerfil', Number)\n  IdPerfil: Number = 0\n  // @JsonProperty(\n  //   'ComponentePlantillaCustomPerfiles',\n  //   [ComponentePlantillaCustomPerfiles] || [],\n  // )\n  // ComponentePlantillaCustomPerfiles: ComponentePlantillaCustomPerfiles[] = []\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel } from 'shared-models'\nimport { PlantillaModel } from './plantillaModel'\n\n@JsonObject('PlantillaCampoDatoModel')\nexport class PlantillaCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModel] || [])\n  Campos: ColumnModel[] = []\n  @JsonProperty('Datos', [PlantillaModel] || [])\n  Datos: PlantillaModel[] = []\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { UserModel } from 'shared-models'\nimport { authHeader } from 'shared-services'\nimport {\n  checkStatusCode,\n  customLog,\n  logType,\n  methodsEndPointType,\n} from 'shared-utils'\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport { PlantillaCamposModel } from '../models/plantillaCamposModel/plantillaCamposModel'\nimport { PlantillaCampoDatoModel } from '../models/plantillaModel/plantillaCampoDatoModel'\nimport { PlantillaModel } from '../models/plantillaModel/plantillaModel'\n\nconst serviceName = 'UsuarioService'\n\nexport const getPlantillas = async (\n  user: UserModel,\n): Promise<PlantillaCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/plantillas`\n\n    let plantillas: PlantillaCampoDatoModel = new PlantillaCampoDatoModel()\n    let datos\n    await axios({\n      url: url,\n      method: methodsEndPointType.GET,\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        plantillas = jsonConvert.deserializeObject(\n          response.data,\n          PlantillaCampoDatoModel,\n        )\n        datos = response.data\n      })\n      .catch((error) => {\n        customLog(\n          null,\n          logType.ERROR,\n          serviceName,\n          getPlantillas.name,\n          methodsEndPointType.GET,\n        )\n        showToast(\n          'No se han podido obtener las plantillas.',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return plantillas\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\nexport const getPlantillaCampos = async (\n  user: UserModel,\n  plantillaId: Number,\n): Promise<PlantillaCamposModel[] | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/PlantillaCampo/GetByPlantillaId/${plantillaId}`\n\n    let plantillaCamposModel: PlantillaCamposModel[] = []\n    let datos\n    await axios({\n      url: url,\n      method: methodsEndPointType.GET,\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        plantillaCamposModel = jsonConvert.deserializeArray(\n          response.data,\n          PlantillaCamposModel,\n        )\n      })\n      .catch((error) => {\n        customLog(\n          null,\n          logType.ERROR,\n          serviceName,\n          getPlantillas.name,\n          methodsEndPointType.GET,\n        )\n        showToast(\n          'No se han podido obtener PlantillaCampos.',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return plantillaCamposModel\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\nexport async function getPlantillaWithChild(\n  user: UserModel,\n  id: number,\n): Promise<PlantillaModel[]> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Plantilla/PlantillaWithChild/${id}`\n\n  let plantillas: PlantillaModel[] = []\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    headers: authHeader(user),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      plantillas = jsonConvert.deserializeArray(\n        response.data.Datos,\n        PlantillaModel,\n      )\n    })\n    .catch((error) => {\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getPlantillaWithChild.name,\n        methodsEndPointType.GET,\n      )\n      showToast(\n        'No se han podido plantillas relacionadas',\n        NotifyType.error,\n        5000,\n      )\n    })\n\n  return plantillas\n}\nexport async function getStructure(\n  user: UserModel,\n): Promise<PlantillaCampoDatoModel> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Plantilla/Structure`\n\n  let plantilla: PlantillaCampoDatoModel = new PlantillaCampoDatoModel()\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    // headers: authHeader(user),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      plantilla = jsonConvert.deserializeObject(\n        response.data,\n        PlantillaCampoDatoModel,\n      )\n    })\n    .catch((error) => {\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getStructure.name,\n        methodsEndPointType.GET,\n      )\n      return {}\n    })\n\n  return plantilla\n}\nexport async function postPlantilla(\n  user: UserModel,\n  plantillaCampos: PlantillaCamposModel[],\n  extraData: any,\n): Promise<boolean> {\n  let created = false\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/PlantillaCampo`\n    let orden = 0\n    plantillaCampos.map((plantillaCampo) => {\n      orden++\n      return (plantillaCampo.Orden = orden)\n    })\n    const plantillaCamposBody = {\n      PlantillaCampos: [...plantillaCampos],\n      ...extraData,\n    }\n\n    await axios\n      .post(url, plantillaCamposBody, { headers: authHeader(user) })\n      .then((response) => {\n        checkStatusCode(response.status)\n        // plantillaCampos = jsonConvert.deserializeArray(\n        //   response.data,\n        //   PlantillaCamposModel,\n        // )\n        customLog(\n          `Plantilla created ${response.data.Id}`,\n          logType.INFO,\n          serviceName,\n          postPlantilla.name,\n          methodsEndPointType.POST,\n        )\n        showToast('Plantilla creada correctamente', NotifyType.success, 5000)\n        created = true\n      })\n      .catch((error) => {\n        showToast(error.response.data.Message, NotifyType.error, 5000)\n        customLog(\n          `Error create plantilla  => ${error.message}`,\n          logType.ERROR,\n          serviceName,\n          postPlantilla.name,\n          methodsEndPointType.PUT,\n        )\n        checkStatusCode(error.request.status)\n        created = false\n      })\n  } catch (error:any) {\n    showToast(error.response.data, NotifyType.error, 5000)\n    customLog(\n      `Error created plantilla => ${error.message}`,\n      logType.ERROR,\n      serviceName,\n      postPlantilla.name,\n      methodsEndPointType.POST,\n    )\n    showToast(error.response.data, NotifyType.error, 5000)\n  }\n  return created\n}\nexport async function putPlantilla(\n  user: UserModel,\n  plantillaCampos: PlantillaCamposModel[],\n  extraData: any,\n): Promise<boolean> {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/PlantillaCampo`\n\n    let orden = 0\n    plantillaCampos.map((plantillaCampo) => {\n      orden++\n      return (plantillaCampo.Orden = orden)\n    })\n    const plantillaCamposBody = {\n      PlantillaCampos: [...plantillaCampos],\n      ...extraData,\n    }\n\n    await axios\n      .put(url, plantillaCamposBody, { headers: authHeader(user) })\n      .then((response) => {\n        checkStatusCode(response.status)\n        customLog(\n          `plantilla modificada ${plantillaCamposBody.Id}`,\n          logType.INFO,\n          serviceName,\n          putPlantilla.name,\n          methodsEndPointType.PUT,\n        )\n        showToast('Plantilla editada', NotifyType.success, 5000)\n      })\n      .catch((error) => {\n        customLog(\n          `Error al editar Plantilla => ${error.message}`,\n          logType.ERROR,\n          serviceName,\n          putPlantilla.name,\n          methodsEndPointType.PUT,\n        )\n      })\n    return true\n  } catch (error) {\n    return false\n  }\n}\n\nexport async function deletePlantilla(user: UserModel, idPlantilla: number) {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Plantilla/${idPlantilla}`\n\n    await axios.delete(url, { headers: authHeader(user!) }).then((response) => {\n      checkStatusCode(response.status)\n      customLog(\n        `plantilla elminada`,\n        logType.INFO,\n        serviceName,\n        deletePlantilla.name,\n        methodsEndPointType.POST,\n      )\n      showToast('Plantilla elminada', NotifyType.success, 5000)\n    })\n    return true\n  } catch (error:any) {\n    if (error.response.status == 400) {\n      showToast(error.response.data, NotifyType.error, 5000)\n    }\n    customLog(\n      `Error al eliminar Plantilla => ${error.response.data}`,\n      logType.ERROR,\n      serviceName,\n      deletePlantilla.name,\n      methodsEndPointType.POST,\n    )\n    checkStatusCode(error.request.status)\n    return false\n  }\n}\n\nexport function getMapperPlantilla(usuarioData: any): PlantillaModel {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let plantilla: PlantillaModel = jsonConvert.deserializeObject(\n    usuarioData,\n    PlantillaModel,\n  )\n  return plantilla\n}\n","import {\n  ADD_DATAFORMCHANGE,\n  OPEN_POPUPEXPEDIENTES,\n  OPEN_POPUPSUJETOS,\n  sharedUtilsActionsTypes,\n} from '../types/sharedUtilsType'\n\nexport const addOpenPopupExpedientes = (\n  OpenPopupExpedientes: boolean | undefined,\n): sharedUtilsActionsTypes => ({\n  type: OPEN_POPUPEXPEDIENTES,\n  payload: OpenPopupExpedientes,\n})\nexport const isOpenPopup = (\n  isOpenPopup: boolean | undefined,\n  popupRef: any,\n): sharedUtilsActionsTypes => ({\n  type: OPEN_POPUPSUJETOS,\n  payload: { isOpenPopup: isOpenPopup, popupRef: popupRef },\n})\n\nexport const addDataFormChange = (\n  isChanged: boolean | undefined,\n): sharedUtilsActionsTypes => ({\n  type: ADD_DATAFORMCHANGE,\n  payload: isChanged,\n})\n","import { Button } from 'devextreme-react'\nimport React from 'react'\n\nexport const renderButtonsComponent = (\n  validationGroup: string,\n  handleCancelClick: () => void,\n) => {\n  return (\n    <>\n      <Button\n        icon=\"remove\"\n        text=\"Cancelar\"\n        type=\"normal\"\n        stylingMode=\"outlined\"\n        style={{\n          float: 'right',\n          margin: '1em',\n        }}\n        onClick={handleCancelClick}\n      />\n\n      <Button\n        icon=\"save\"\n        text=\"Guardar\"\n        type=\"success\"\n        useSubmitBehavior={true}\n        validationGroup={validationGroup}\n        stylingMode=\"contained\"\n        style={{ float: 'right', margin: '1em' }}\n      />\n    </>\n  )\n}\n","export const campos = [\n  {\n    IdPlantilla: 28,\n    IdCampo: 1,\n    Nombre: 'IdEmpresa',\n    Visible: true,\n    Orden: 1,\n    Ancho: 20,\n  },\n  {\n    IdPlantilla: 28,\n    IdCampo: 2,\n    Nombre: 'SerieExpediente',\n    Visible: true,\n    Orden: 3,\n    Ancho: 20,\n  },\n  {\n    IdPlantilla: 28,\n    IdCampo: 3,\n    Nombre: 'NumeroExpediente',\n    Visible: true,\n    Orden: 4,\n    Ancho: 20,\n  },\n  {\n    IdPlantilla: 28,\n    IdCampo: 4,\n    Nombre: 'FechaInicio',\n    Visible: true,\n    Orden: 5,\n    Ancho: 20,\n  },\n  {\n    IdPlantilla: 28,\n    IdCampo: 5,\n    Nombre: 'Descripcion',\n    Visible: true,\n    Orden: 6,\n    Ancho: 20,\n  },\n  {\n    IdPlantilla: 28,\n    IdCampo: 6,\n    Nombre: 'Comentario',\n    Visible: true,\n    Orden: 7,\n    Ancho: 20,\n  },\n  {\n    IdPlantilla: 28,\n    IdCampo: 7,\n    Nombre: 'Referencia',\n    Visible: true,\n    Orden: 8,\n    Ancho: 20,\n  },\n  {\n    IdPlantilla: 28,\n    IdCampo: 8,\n    Nombre: 'TotalAnticipos',\n    Visible: true,\n    Orden: 9,\n    Ancho: 20,\n  },\n]\n","import { ModuloComponenteModel } from '../../models/moduloComponenteModel/moduloComponenteModel'\nimport { ModuloComponenteCampoDatoModel } from '../../models/moduloComponenteModel/moduloComponenteCampoDatoModel'\nimport {\n  ADD_PLANTILLA,\n  ADD_PLANTILLA_CAMPOS,\n  PlantillaActionsTypes,\n} from './plantillaComponenteType'\nimport { PlantillaModel } from '../../models/plantillaModel/plantillaModel'\nimport { PlantillaCamposModel } from '../../models/plantillaCamposModel/plantillaCamposModel'\n\nexport const addPlantilla = (\n  plantilla: Partial<PlantillaModel> | undefined,\n): PlantillaActionsTypes => ({\n  type: ADD_PLANTILLA,\n  payload: plantilla,\n})\n\nexport const addPlantillaCampos = (\n  plantillaCampos: PlantillaCamposModel[] | undefined,\n): PlantillaActionsTypes => ({\n  type: ADD_PLANTILLA_CAMPOS,\n  payload: plantillaCampos,\n})\n","import { useState, ReactElement, useEffect, useRef } from 'react'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../../redux/combineReducers'\nimport NotFound from '../../../../components/notFound/notFound'\nimport { NumberBox, ScrollView, Sortable, Switch } from 'devextreme-react'\nimport { campos } from '../utils/data'\nimport './plantillaCamposComponent.scss'\nimport { addPlantillaCampos } from '../redux/plantilla/plantillaComponenteActions'\nimport { PlantillaCamposModel } from '../models/plantillaCamposModel/plantillaCamposModel'\nfunction PlantillaCampos(props: any): ReactElement {\n  const dispatch = useDispatch()\n  const userState = useSelector((state: RootState) => state.user)\n  const plantillaState = useSelector((state: RootState) => state.plantilla)\n  const [loading, setLoading] = useState(false)\n  const [camposState, setCampos] = useState([{}])\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setCampos(campos)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetchData()\n  }, [])\n\n  const handleUpdatedPlantilla = (id: number, property: any) => {\n    let plantillasCampo: PlantillaCamposModel[] = []\n    plantillaState.plantillaCampos?.map((plantilla: PlantillaCamposModel) => {\n      if (plantilla.IdCampo == id) {\n        plantilla = {\n          ...plantilla,\n          ...property,\n        }\n      }\n      return plantillasCampo.push(plantilla)\n    })\n\n    dispatch(addPlantillaCampos(plantillasCampo))\n  }\n\n  const onSubmit = async (data: any) => {\n    setLoading(true)\n    const dialogCall = async () => {\n      let result: boolean = false\n\n      if (result) {\n        setLoading(false)\n      } else {\n        setLoading(false)\n      }\n    }\n  }\n  const handleCancelClick = () => {\n    props.setShowForm(false)\n  }\n  // const renderButtons = () => {\n  //   return renderButtonsComponent(`companyModuloData`, handleCancelClick)\n  // }\n\n  const onDragStart = (e: any) => {\n    e.itemData = campos[e.fromIndex]\n  }\n\n  const onReorder = (e: any) => {\n    const itemSelected = plantillaState?.plantillaCampos![e.fromIndex]\n    let plantillaCampos =\n      plantillaState.plantillaCampos != undefined\n        ? plantillaState.plantillaCampos\n        : []\n    setCampos([{}])\n    plantillaCampos = [\n      ...plantillaCampos!.slice(0, e.fromIndex),\n      ...plantillaCampos!.slice(e.fromIndex + 1),\n    ]\n    plantillaCampos = [\n      ...plantillaCampos.slice(0, e.toIndex),\n      itemSelected,\n      ...plantillaCampos.slice(e.toIndex),\n    ]\n    dispatch(addPlantillaCampos(plantillaCampos))\n  }\n  return (\n    <>\n      {/* {isAllowed(PermisoType.AccesoExpedientes, userState!.user) ? ( */}\n      {true ? (\n        <>\n          <div\n            className={'content-block dx-card responsive-paddings'}\n            style={{\n              borderColor: '#f4f9ff',\n              borderWidth: '2px',\n              margin: '0.6%',\n            }}\n          >\n            <ScrollView width=\"100%\" height=\"100%\" showScrollbar=\"always\">\n              <Sortable\n                id=\"list\"\n                dropFeedbackMode={'push'}\n                itemOrientation={'vertical'}\n                dragDirection={'both'}\n                scrollSpeed={30}\n                scrollSensitivity={60}\n                handle={''}\n                onDragStart={(e: any) => {\n                  onDragStart(e)\n                }}\n                onReorder={(e: any) => {\n                  onReorder(e)\n                }}\n              >\n                {plantillaState.plantillaCampos?.map((campo) => (\n                  <div\n                    key={campo.Id as number}\n                    className=\"item dx-card dx-theme-text-color dx-theme-background-color\"\n                  >\n                    <div className=\"settings\">\n                      <div className=\"column\">\n                        <div className=\"field\">\n                          <div className=\"value\">\n                            <h4>{campo.Nombre}</h4>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"column\">\n                        <div className=\"field\">\n                          <div className=\"label\">Ancho</div>\n                          &nbsp;\n                          <div\n                            className=\"value\"\n                            title={campo.IdCampo.toString()}\n                          >\n                            <NumberBox\n                              value={campo.Ancho as number}\n                              onValueChanged={(e: any) => {\n                                handleUpdatedPlantilla(\n                                  parseInt(e.element.parentElement.title),\n                                  {\n                                    Ancho: e.value,\n                                  },\n                                )\n                              }}\n                              showSpinButtons={true}\n                              max={100}\n                              min={20}\n                              format=\"#0px\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      &nbsp;\n                      <div className=\"column\">\n                        <div className=\"field\">\n                          <div className=\"label\">Visible</div>\n                          &nbsp;\n                          <div\n                            className=\"value\"\n                            title={campo.IdCampo.toString()}\n                          >\n                            <Switch\n                              value={campo.Visible as boolean}\n                              onValueChanged={(e: any) => {\n                                handleUpdatedPlantilla(\n                                  parseInt(e.element.parentElement.title),\n                                  {\n                                    Visible: e.value,\n                                  },\n                                )\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </Sortable>\n            </ScrollView>\n          </div>\n        </>\n      ) : (\n        <div>\n          <NotFound data={{ type: 1 }}></NotFound>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default PlantillaCampos\n","import { PerfilModel } from '../models/perfilModel'\nimport { PerfilesCampoDatoModel } from '../models/perfilCampoDatoModel'\nimport {\n  SujetoActionsTypes,\n  ADD_PERFILES,\n  ADD_PERFIL,\n  CLEAR_PERFIL,\n} from './perfilType'\n\nexport const addPerfil = (\n  perfil: Partial<PerfilModel> | PerfilModel | undefined,\n): SujetoActionsTypes => ({\n  type: ADD_PERFIL,\n  payload: perfil,\n})\n\nexport const clearPerfil = (\n  clearPerfil: PerfilModel | undefined,\n): SujetoActionsTypes => ({\n  type: CLEAR_PERFIL,\n  payload: clearPerfil,\n})\nexport const addPerfiles = (\n  perfiles: PerfilModel[] | undefined,\n): SujetoActionsTypes => ({\n  type: ADD_PERFILES,\n  payload: perfiles,\n})\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form } from 'devextreme-react'\nimport { GroupItem, RequiredRule, SimpleItem } from 'devextreme-react/form'\nimport { confirm } from 'devextreme/ui/dialog'\nimport { useForm } from 'react-hook-form'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { useScreenSize } from '../../../../utils/media-query'\nimport { renderButtonsComponent } from '../../../../components/buttonsForm/renderButtons'\nimport PlantillaCampos from '../components/plantillaCamposComponent'\nimport { addPlantilla } from '../redux/plantilla/plantillaComponenteActions'\nimport { addPerfil } from '../../../administracionPages/perfilPage/redux/perfilActions'\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport {\n  getPlantillaWithChild,\n  postPlantilla,\n  putPlantilla,\n} from '../services/plantillaService'\n\nfunction PlantillaFormPage(props: any): ReactElement {\n  const userState = useSelector((state: RootState) => state.user)\n  const perfilState = useSelector((state: RootState) => state.perfil)\n  const plantillaState = useSelector((state: RootState) => state.plantilla)\n  const { isXSmall, isLarge } = useScreenSize()\n  const [loading, setLoading] = useState(false)\n  const formData = useRef({})\n  const { register, handleSubmit } = useForm()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    async function fetchData() {}\n    fetchData()\n  }, [])\n\n  const onSubmit = async (data: any) => {\n    setLoading(true)\n\n    let confirmDialog = confirm(\n      '<i>¬øEst√° seguro de que quiere guardar la informaci√≥n?</i>',\n      'Confirma los cambios',\n    )\n    confirmDialog.then(async (dialogResult) => {\n      if (dialogResult) {\n        if (\n          plantillaState?.plantilla?.Nombre != undefined &&\n          plantillaState?.plantilla?.Nombre != '' &&\n          perfilState.perfil != undefined\n        ) {\n          const extraData = {\n            IdPlantillaParent: plantillaState?.plantillaCampos![0].IdPlantilla,\n            IdPerfil: perfilState.perfil?.Id,\n            Nombre: plantillaState?.plantilla?.Nombre,\n          }\n          let isCreatePlantilla: boolean = false\n          if (plantillaState?.plantilla?.Id == 0) {\n            isCreatePlantilla = await postPlantilla(\n              userState!.user!,\n              plantillaState?.plantillaCampos!,\n              extraData,\n            )\n          } else {\n            isCreatePlantilla = await putPlantilla(\n              userState!.user!,\n              plantillaState?.plantillaCampos!,\n              extraData,\n            )\n          }\n\n          if (isCreatePlantilla) {\n            const plantillasChild = await getPlantillaWithChild(\n              userState!.user!,\n              plantillaState?.plantillaCampos![0].IdPlantilla as number,\n            )\n            props.setPlantillas(plantillasChild)\n            setLoading(false)\n            props.setShowForm(!props.showForm)\n          } else {\n            setLoading(false)\n          }\n        } else {\n          setLoading(false)\n          showToast(\n            'La plantilla no tiene nombre o no tiene asignado un perfil',\n            NotifyType.error,\n            5000,\n          )\n        }\n      } else {\n        setLoading(false)\n      }\n    })\n  }\n\n  const handleCancelClick = () => {\n    props.setShowForm(false)\n  }\n\n  const renderButtons = () => {\n    return renderButtonsComponent(`plantillaData`, handleCancelClick)\n  }\n\n  const perfilBoxOptions = {\n    items: perfilState.perfiles,\n    value:\n      perfilState.perfil?.Id != undefined\n        ? perfilState.perfil?.Id\n        : plantillaState.plantilla?.IdPerfil,\n    placeholder: 'Seleccione un perfil',\n    displayExpr: 'Nombre',\n    valueExpr: 'Id',\n    onValueChanged: (event: any) => {\n      if (event.event) {\n        dispatch(\n          addPerfil(\n            perfilState?.perfiles!.find((perfil) => perfil.Id === event.value),\n          ),\n        )\n      }\n    },\n  }\n\n  const handleUpdatedSujeto = (property: any) => {\n    // dispatch(\n    //   addSujeto({\n    //     ...sujetoState,\n    //     ...property,\n    //   }),\n    // )\n  }\n  //const formSujetoRef=useRef(null);\n  return (\n    <>\n      <div className={'content-block  responsive-paddings'}>\n        <div className={'content-block  '}>\n          <h4>\n            Plantilla de donde se hereda:{' '}\n            {props['plantillaParent'] != undefined\n              ? props['plantillaParent'].Nombre\n              : ''}\n          </h4>\n          <form\n            className={'legalForm'}\n            onSubmit={handleSubmit(onSubmit)}\n            encType=\"multipart/form-data\"\n            style={{ width: '100%' }}\n          >\n            <Form\n              formData={formData.current}\n              disabled={loading}\n              //ref={formSujetoRef}\n              readOnly={false}\n              labelLocation={isLarge ? 'left' : 'top'}\n              showValidationSummary={false}\n              validationGroup=\"sujetoData\"\n              showColonAfterLabel={true}\n            >\n              <GroupItem colCount=\"2\">\n                <SimpleItem\n                  dataField={'Nombre'}\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Nombre Plantillas',\n                    mode: 'text',\n                    value: plantillaState.plantilla?.Nombre\n                      ? plantillaState.plantilla?.Nombre\n                      : '',\n                    onValueChanged: (event: any) => {\n                      if (event.event) {\n                        dispatch(\n                          addPlantilla({\n                            ...plantillaState.plantilla,\n                            Nombre: event.value,\n                          }),\n                        )\n                      }\n                    },\n                  }}\n                ></SimpleItem>\n                <SimpleItem\n                  dataField=\"Perfiles\"\n                  editorType=\"dxSelectBox\"\n                  editorOptions={perfilBoxOptions}\n                ></SimpleItem>\n              </GroupItem>\n\n              <GroupItem colCount=\"1\">\n                <SimpleItem>\n                  <PlantillaCampos></PlantillaCampos>\n                </SimpleItem>\n              </GroupItem>\n              <SimpleItem render={renderButtons} cssClass=\"alignBottom\" />\n            </Form>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default PlantillaFormPage\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('PerfilModel')\nexport class PerfilModel {\n  @JsonProperty('Id', Number, 0)\n  Id: Number = 0\n  @JsonProperty('Descripcion', String)\n  Descripcion: string = ''\n  @JsonProperty('Nombre', String)\n  Nombre: string = ''\n  @JsonProperty('IdSujeto', Number)\n  IdSujeto: number = 0\n}\n\n@JsonObject('PerfilModelGrid')\nexport class PerfilModelGrid {\n  @JsonProperty('Id', Number, 0)\n  Id: Number = 0\n  @JsonProperty('Descripcion', String)\n  Descripcion: string = ''\n  @JsonProperty('Nombre', String)\n  Nombre: string = ''\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel } from 'shared-models'\nimport { PerfilModel, PerfilModelGrid } from './perfilModel'\n\n@JsonObject('PerfilesCampoDatoModel')\nexport class PerfilesCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModel] || [])\n  Campos: ColumnModel[] = []\n  @JsonProperty('Datos', [PerfilModelGrid] || [])\n  Datos: PerfilModelGrid[] = []\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\n\nimport {\n  logType,\n  methodsEndPointType,\n  customLog,\n  checkStatusCode,\n} from 'shared-utils'\nimport { ForgotPasswordModel, UserModel } from 'shared-models'\n\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\n\nimport { PerfilesCampoDatoModel } from '../models/perfilCampoDatoModel'\nimport { PerfilModel } from '../models/perfilModel'\nimport { authHeader } from 'shared-services'\n\nconst serviceName = 'authService'\n\nexport const getPerfiles = async (\n  user: UserModel,\n): Promise<PerfilModel[] | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/perfil`\n    let PerfilesData: PerfilModel[] = []\n    let datos\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user),\n    })\n      .then((response) => {\n        PerfilesData = jsonConvert.deserializeArray(response.data, PerfilModel)\n      })\n      .catch((error) => {\n        customLog(\n          null,\n          logType.ERROR,\n          serviceName,\n          getPerfiles.name,\n          methodsEndPointType.GET,\n        )\n        showToast(\n          'No se han podido obtener los perfiles.',\n          NotifyType.error,\n          5000,\n        )\n      })\n\n    return PerfilesData\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\nexport async function getPerfil(\n  user: UserModel,\n  id: number,\n): Promise<PerfilModel> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Perfil/${id}`\n\n  let perfil: PerfilModel = new PerfilModel()\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    headers: authHeader(user),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      perfil = jsonConvert.deserializeObject(response.data, PerfilModel)\n    })\n    .catch((error) => {\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getPerfil.name,\n        methodsEndPointType.GET,\n      )\n      showToast('No se han podido obtener el perfil.', NotifyType.error, 5000)\n    })\n\n  return perfil\n}\nexport async function postPerfil(\n  user: UserModel,\n  sujeto: PerfilModel,\n): Promise<boolean> {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Perfil`\n\n    const headers = {\n      Authorization: 'Bearer my-token',\n      'My-Custom-Header': 'foobar',\n    }\n\n    await axios\n      .post(url, sujeto, { headers: authHeader(user) })\n      .then((response) => {\n        checkStatusCode(response.status)\n        customLog(\n          `sujeto creado ${response.data.Id}`,\n          logType.INFO,\n          serviceName,\n          putPerfil.name,\n          methodsEndPointType.POST,\n        )\n        showToast('Perfil creada', NotifyType.success, 5000)\n      })\n    return true\n  } catch (error: any) {\n    customLog(\n      `Error al crear Sujeto => ${error.message}`,\n      logType.ERROR,\n      serviceName,\n      postPerfil.name,\n      methodsEndPointType.POST,\n    )\n    return false\n  }\n}\nexport async function putPerfil(\n  user: UserModel,\n  perfil: PerfilModel,\n): Promise<boolean> {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Perfil`\n    await axios\n      .put(url, perfil, { headers: authHeader(user) })\n      .then((response) => {\n        checkStatusCode(response.status)\n        customLog(\n          `perfil modificado ${perfil.Id}`,\n          logType.INFO,\n          serviceName,\n          putPerfil.name,\n          methodsEndPointType.PUT,\n        )\n        showToast('Perfil editado', NotifyType.success, 5000)\n      })\n      .catch((error) => {\n        customLog(\n          `Error al editar Perfil => ${error.message}`,\n          logType.ERROR,\n          serviceName,\n          putPerfil.name,\n          methodsEndPointType.PUT,\n        )\n      })\n    return true\n  } catch (error) {\n    return false\n  }\n}\nexport async function getStructure(\n  user: UserModel,\n): Promise<PerfilesCampoDatoModel> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Perfil/Structure`\n\n  let structure: PerfilesCampoDatoModel = new PerfilesCampoDatoModel()\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    headers: authHeader(user),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      structure = jsonConvert.deserializeObject(\n        response.data,\n        PerfilesCampoDatoModel,\n      )\n    })\n    .catch((error: any) => {\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getStructure.name,\n        methodsEndPointType.GET,\n      )\n      return {}\n    })\n\n  return structure\n}\n\nexport function getMapperSujeto(perfilData: any): PerfilModel {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let perfil: PerfilModel = jsonConvert.deserializeObject(\n    perfilData,\n    PerfilModel,\n  )\n  return perfil\n}\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Button,\n  Popup,\n  ScrollView,\n  SelectBox,\n  TreeList,\n} from 'devextreme-react'\nimport './plantillasAdministracionStyles.scss'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { getStructure } from '../services/componenteServices'\nimport { ButtonColumnModel, DataGridModel } from 'shared-models'\nimport { useHistory } from 'react-router-dom'\nimport { SharedGrid } from 'react-library-grid'\nimport { ComponenteCampoDatoModel } from '../models/componenteModel/componenteDatoModelModel'\nimport NotFound from '../../../../components/notFound/notFound'\nimport { addModulos } from '../redux/modulo/moduloActions'\nimport { getModulos } from '../services/moduloServices'\nimport {\n  deletePlantilla,\n  getMapperPlantilla,\n  getPlantillaCampos,\n  getPlantillaWithChild,\n} from '../services/plantillaService'\nimport {\n  Column,\n  ColumnChooser,\n  HeaderFilter,\n  SearchPanel,\n} from 'devextreme-react/data-grid'\nimport { PlantillaModel } from '../models/plantillaModel/plantillaModel'\nimport { isOpenPopup } from '../../../../redux/actions/sharedUtilsActions'\nimport PlantillaFormPage from './plantillaFormPage'\nimport { getPerfiles } from '../../../administracionPages/perfilPage/service/perfilService'\nimport {\n  addPerfil,\n  addPerfiles,\n} from '../../../administracionPages/perfilPage/redux/perfilActions'\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport { CompanyModuloModel } from '../../companyPage/models/companyModuloModel'\nimport {\n  addPlantilla,\n  addPlantillaCampos,\n} from '../redux/plantilla/plantillaComponenteActions'\nimport { useScreenSize } from '../../../../utils/media-query'\n\nfunction PlantillaPage(): ReactElement {\n  const userState = useSelector((state: RootState) => state.user)\n  const [structure, setStructure] = useState(new ComponenteCampoDatoModel())\n  const moduloState = useSelector((state: RootState) => state.modulo)\n  const moduloComponenteState = useSelector(\n    (state: RootState) => state.moduloComponente,\n  )\n  const perfilState = useSelector((state: RootState) => state.perfil)\n  const [selectedModulo, setModulo] = useState(0)\n  const [showForm, setShowForm] = useState(false)\n  const [rowFocused, setRowFocused] = useState('')\n  const [rowSelected, setRow] = useState(0)\n  const [plantillas, setPlantillas] = useState<PlantillaModel[]>([])\n  const [plantillaSelected, setPlantilla] = useState(\n    plantillas.length > 0 ? plantillas[0] : new PlantillaModel(),\n  )\n  const gridRef: any = useRef(null)\n  const formData = useRef({})\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const popupPlantillaRef = useRef(null)\n  const [modulosParent, setModulosParent] = useState([{}])\n  const { isLarge, isMedium, isSmall, isXSmall } = useScreenSize()\n\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  useEffect(() => {\n    async function fetchData() {\n      setStructure(await getStructure(userState!.user!))\n      dispatch(addModulos(await getModulos(userState?.user!)))\n      dispatch(addPerfiles(await getPerfiles(userState!.user!)))\n      setModulosParent(\n        jsonConvert.deserializeArray(\n          JSON.parse(localStorage.getItem('parentCompanyModulos')!),\n          CompanyModuloModel,\n        ),\n      )\n    }\n    fetchData()\n  }, [])\n\n  const handleOpenCreatePopup = async () => {\n    if (plantillas.length > 0) {\n      dispatch(addPlantilla(new PlantillaModel()))\n      dispatch(\n        addPlantillaCampos(\n          await getPlantillaCampos(userState!.user!, plantillas[0].Id),\n        ),\n      )\n      setShowForm(!showForm)\n    } else {\n      showToast(\n        'Selecciona un componentes y su plantilla',\n        NotifyType.info,\n        5000,\n      )\n    }\n  }\n  const editButtonPlantillas = (cellRender: any) => {\n    return (\n      <Button\n        icon=\"edit\"\n        text=\"\"\n        hint=\"Editar\"\n        onClick={async () => {\n          dispatch(addPerfil({}))\n          dispatch(addPlantilla(new PlantillaModel()))\n          dispatch(\n            addPlantillaCampos(\n              await getPlantillaCampos(userState!.user!, cellRender.row.key),\n            ),\n          )\n          dispatch(\n            addPlantilla(\n              plantillas.find(\n                (plantilla) => plantilla.Id == cellRender.row.key,\n              ),\n            ),\n          )\n          setShowForm(!showForm)\n        }}\n      ></Button>\n    )\n  }\n  const deleteButtonPlantillas = (cellRender: any) => {\n    return (\n      <Button\n        icon=\"trash\"\n        text=\"\"\n        hint=\"Eliminar\"\n        onClick={async () => {\n          if (cellRender.row.data.IdPlantillaParent) {\n            await deletePlantilla(userState!.user!, cellRender.row.key)\n            const plantillasChild = await getPlantillaWithChild(\n              userState!.user!,\n              plantillas[0].Id as number,\n            )\n            setPlantillas(plantillasChild)\n          } else\n            showToast(\n              'No puedes eliminar una plantilla generica',\n              NotifyType.warning,\n              5000,\n            )\n        }}\n      ></Button>\n    )\n  }\n  function fillDataGrid(Id: Number): DataGridModel {\n    const buttonColumn: ButtonColumnModel = new ButtonColumnModel({\n      icon: 'edit',\n      text: '',\n      hint: 'Editar',\n      cellRender: async (row: any) => {\n        setRow(row.data)\n        const plantillasChild = await getPlantillaWithChild(\n          userState!.user!,\n          row.data.IdPlantilla,\n        )\n        setPlantillas(plantillasChild)\n\n        setPlantilla(\n          getMapperPlantilla(\n            plantillasChild.length > 0\n              ? plantillasChild[0]\n              : new PlantillaModel(),\n          ),\n        )\n      },\n    })\n    let gridheight = '600;'\n    gridheight = isXSmall ? '300' : '600'\n    gridheight = isSmall ? '400' : '600'\n    gridheight = isMedium ? '400' : '400'\n    gridheight = isLarge ? '400' : '400'\n    let dataGridModel = new DataGridModel({\n      dataGridName: 'componenteGridComponent',\n      height: gridheight,\n      ref: gridRef,\n      rowFocused: rowFocused,\n      columns: structure.Campos,\n      openRow: ({}) => {},\n      openRowEnterKey: ({}) => {},\n      focusEventChanged: (e: any) => {\n        if (e.row) {\n          setRowFocused(e.row.key)\n        }\n      },\n      focusEventChanging: ({}) => {},\n      openCreatePopup: undefined,\n      user: userState!.user!,\n      url: `${process.env.REACT_APP_API_URL_CORE}/ModuloComponente/` + Id,\n      urlAux: `${process.env.REACT_APP_API_URL_CORE}/ModuloComponente/` + Id,\n      buttonsColumns: [buttonColumn],\n      filterRow: true,\n      filterPanel: true,\n      columnChooser: true,\n      headerFilter: true,\n      exportData: true,\n      showSearchPanel: true,\n      showToolbar: true,\n      history: history,\n      singularName: 'Componente',\n      pluralName: 'Componentes',\n      pageName: 'MuduloComponente',\n      openedPopup: showForm,\n    })\n\n    return dataGridModel\n  }\n\n  return (\n    <>\n      {true ? (\n        <div\n          className={'content-block dx-card'}\n          style={{\n            borderColor: '#f4f9ff',\n            borderWidth: '2px',\n            margin: '0.3%',\n            padding: '0.16%',\n          }}\n        >\n          {structure?.Campos != undefined && structure?.Campos.length > 0 ? (\n            <div>\n              <h2>Plantillas</h2>\n              <SelectBox\n                items={modulosParent}\n                displayExpr=\"Nombre\"\n                valueExpr=\"IdModulo\"\n                placeholder=\"Selecciona uno de los Modulo contratados\"\n                //value={0}\n                onValueChanged={async (e: any) => {\n                  setModulo(e.value)\n                  setPlantillas([])\n                  const refreshButton = document.getElementsByClassName(\n                    'dx-icon dx-icon-refresh',\n                  )[0] as HTMLElement\n                  refreshButton.click()\n                }}\n              />\n              <h5>Vistas cargadas del modulo</h5>\n              <ScrollView direction=\"vertical\">\n                <div style={{ marginBottom: '6vh' }}>\n                  <SharedGrid dataGridModel={fillDataGrid(selectedModulo)} />\n                </div>\n              </ScrollView>\n              <div>\n                <Button\n                  icon=\"save\"\n                  text=\"Nueva Plantillas\"\n                  type=\"success\"\n                  stylingMode=\"contained\"\n                  style={{ float: 'right', margin: '1em' }}\n                  onClick={handleOpenCreatePopup}\n                />\n              </div>\n              <h5>\n                Nueva Plantilla hereda de:\n                <b>\n                  {plantillas.length > 0\n                    ? plantillas[0].Nombre\n                    : '(Selecciona una vista para poder cargas sus plantillas)'}\n                </b>\n              </h5>\n              <TreeList\n                dataSource={plantillas != undefined ? plantillas : []}\n                focusedRowEnabled={true}\n                showBorders={true}\n                columnAutoWidth={true}\n                wordWrapEnabled={true}\n                defaultExpandedRowKeys={[1]}\n                defaultSelectedRowKeys={[1]}\n                keyExpr=\"Id\"\n                parentIdExpr=\"IdPlantillaParent\"\n                id=\"Id\"\n                onFocusedRowChanged={(e: any) => {\n                  setPlantilla(getMapperPlantilla(e.row.data))\n                }}\n              >\n                <SearchPanel visible={true} width={250} />\n                <HeaderFilter visible={true} />\n                <ColumnChooser enabled={true} />\n                <Column\n                  type=\"buttons\"\n                  cellRender={(cellRenderData: any) => {\n                    return editButtonPlantillas(cellRenderData)\n                  }}\n                />\n                <Column\n                  type=\"buttons\"\n                  cellRender={(cellRenderData: any) => {\n                    return deleteButtonPlantillas(cellRenderData)\n                  }}\n                />\n                <Column dataField=\"Nombre\" />\n                <Column dataField=\"EsGenerica\" />\n              </TreeList>\n\n              <Popup\n                visible={showForm}\n                ref={popupPlantillaRef}\n                onHiding={({}) => {\n                  setShowForm(!showForm)\n                  dispatch(isOpenPopup(false, popupPlantillaRef))\n                }}\n                dragEnabled={true}\n                closeOnOutsideClick={false}\n                showTitle={true}\n                title=\"Creaci√≥n Plantilla\"\n                resizeEnabled={true}\n                showCloseButton={true}\n                width=\"95%\"\n                height=\"95%\"\n              >\n                <ScrollView width=\"100%\" height=\"100%\">\n                  <PlantillaFormPage\n                    row={rowSelected}\n                    setShowForm={setShowForm}\n                    showForm={showForm}\n                    setPlantillas={setPlantillas}\n                    plantillaParent={plantillas.find(\n                      (x) => x.EsGenerica === true,\n                    )}\n                  ></PlantillaFormPage>\n                </ScrollView>\n              </Popup>\n            </div>\n          ) : null}\n        </div>\n      ) : (\n        <div>\n          <NotFound data={{ type: 1 }}></NotFound>\n        </div>\n      )}\n    </>\n  )\n}\nexport default PlantillaPage\n","import React, { ReactElement, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport './expedienteStyles.scss'\nimport { useClearCache } from 'react-clear-cache'\n/* import ExpedienteIndex from \"./components/expedienteIndex\"; */\n//import { runInsights } from \"../../services/telemetryService\";\nimport { runInsights } from 'telemetry-portal'\n\nimport { RootState } from '../../../redux/combineReducers'\nimport { isAlreadyLoggedUser } from '../../../redux/utils/reduxUtils'\nimport PlantillaPage from './pages/plantillaPage'\n\nfunction PlantillasPage(): ReactElement {\n  const userState = useSelector((state: RootState) => state.user)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const { isLatestVersion, emptyCacheStorage } = useClearCache()\n  const [showUserLinks, setShowUserLinks] = useState(true)\n  const appInsights = runInsights()\n\n  const obtenerAncho = () => {}\n  if (userState!.isLoggedIn === false) {\n    isAlreadyLoggedUser('/expedientePage', history, dispatch)\n  }\n  const usuarioState = useSelector((state: RootState) => state.user)\n  // if (usuarioState!.user?.Configuracion.Tema!) {\n  //   localStorage.setItem('dx-theme', usuarioState!.user?.Configuracion.Tema!)\n  // }\n\n  const handleHideShowUserLinks = () => {\n    setShowUserLinks(false)\n    localStorage.setItem('acceptedLinksUsers', 'true')\n  }\n\n  return (\n    <React.Fragment>\n      {/*\n       **Modificaci√≥n TODO Probar, Esto ya deberia de funcionar\n       *TODO cuando dejo esto activo en el menu o el login afectan a que no funcione el debugger de VS */}\n      {!isLatestVersion && emptyCacheStorage()}\n      {userState!.isLoggedIn === false ? history.push('/') : null}\n      {/* <ExpedienteTable></ExpedienteTable> */}\n      <PlantillaPage></PlantillaPage>\n      {/* //! feedback antiguo\n       <FeedBack></FeedBack> */}\n      {/* <UserLegalLinks></UserLegalLinks> */}\n      {obtenerAncho}\n    </React.Fragment>\n  )\n}\n\nexport default PlantillasPage\n","import { SujetoModel } from '../models/sujetoModel'\nimport { SujetosCampoDatoModel } from '../models/sujetosCampoDatoModel'\nimport {\n  SujetoActionsTypes,\n  ADD_SUJETOS,\n  ADD_SUJETO,\n  CLEAR_SUJETO,\n} from './sujetoType'\n\nexport const addSujeto = (\n  sujeto: Partial<SujetoModel> | SujetoModel | undefined,\n): SujetoActionsTypes => ({\n  type: ADD_SUJETO,\n  payload: sujeto,\n})\n\nexport const clearSujeto = (\n  sujeto: SujetoModel | undefined,\n): SujetoActionsTypes => ({\n  type: CLEAR_SUJETO,\n  payload: sujeto,\n})\nexport const addSujetos = (\n  sujetos: SujetosCampoDatoModel | undefined,\n): SujetoActionsTypes => ({\n  type: ADD_SUJETOS,\n  payload: sujetos,\n})\n","export const PhoneValidator = {\n  mask: '+1 (X00) 000-0000',\n  maskRules: {\n    X: /[02-9]/,\n  },\n  useMaskedValue: true,\n  maskInvalidMessage: 'El telefono debe tener un formato correcto',\n}\n\nexport const NIFValidator = {\n  mask: '00000000A' || 'A00000000',\n  maskRules: {\n    X: /^([a-z]|[A-Z]|[0-9])[0-9]{7}([a-z]|[A-Z]|[0-9])$/,\n  },\n  useMaskedValue: false,\n  maskInvalidMessage:\n    'El numero de identificacion tiene que tener un formato valido.',\n}\nexport const EmailValidator = {\n  mask: '+1 (X00) 000-0000',\n  maskRules: {\n    X: /[02-9]/,\n  },\n  useMaskedValue: true,\n  maskInvalidMessage:\n    'El Email tiene que tener un formato valido, ex: test@test.com',\n}\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, LoadIndicator } from 'devextreme-react'\nimport { GroupItem, RequiredRule, SimpleItem } from 'devextreme-react/form'\nimport { confirm } from 'devextreme/ui/dialog'\nimport { useForm } from 'react-hook-form'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { useScreenSize } from '../../../../utils/media-query'\nimport { postSujeto, putSujeto } from '../service/sujetoService'\n\nimport { addSujeto } from '../redux/sujetoActions'\nimport { NIFValidator } from '../../../../utils/Validators/validators'\nimport { renderButtonsComponent } from '../../../../components/buttonsForm/renderButtons'\nimport { warningFormPrevent } from '../../../../utils/sharedUitls'\n\nfunction SujetoFormPage(props: any): ReactElement {\n  const userState = useSelector((state: RootState) => state.user)\n  const companyState = useSelector((state: RootState) => state.company)\n  const sujetoState = useSelector((state: RootState) => state.sujeto.sujeto)\n  const { isXSmall, isLarge } = useScreenSize()\n  const [loading, setLoading] = useState(false)\n  const formData = useRef({})\n  const { register, handleSubmit } = useForm()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    async function fetchData() {}\n    fetchData()\n  }, [])\n\n  const onSubmit = async (data: any) => {\n    setLoading(true)\n\n    let confirmDialog = confirm(\n      '<i>¬øEst√° seguro de que quiere guardar la informaci√≥n?</i>',\n      'Confirma los cambios',\n    )\n    confirmDialog.then((dialogResult) => {\n      if (dialogResult) {\n        dialogCall()\n      } else {\n        setLoading(false)\n      }\n    })\n\n    const dialogCall = async () => {\n      let result: boolean = false\n      if (!sujetoState?.Id) {\n        dispatch(addSujeto({ ...sujetoState, Id: 0 }))\n      }\n\n      if (sujetoState?.Id) {\n        result = await putSujeto(userState!.user!, sujetoState)\n      } else {\n        result = await postSujeto(userState!.user!, sujetoState!)\n      }\n\n      if (result) {\n        setLoading(false)\n        const refreshButton = document.getElementsByClassName(\n          'dx-icon dx-icon-refresh',\n        )[0] as HTMLElement\n        refreshButton.click()\n        props.setShowForm(false)\n      } else {\n        setLoading(false)\n      }\n    }\n  }\n\n  const handleCancelClick = () => {\n    props.setShowForm(false)\n    // warningFormPrevent(false,formSujetoRef)\n  }\n\n  const renderButtons = () => {\n    return renderButtonsComponent(`sujetoData`, handleCancelClick)\n  }\n\n  const selectedBoxOptions = {\n    items: companyState?.companies?.Datos,\n    value: sujetoState?.IdCompany,\n    placeholder: 'Seleccione una compa√±√≠a',\n    displayExpr: 'Name',\n    valueExpr: 'Id',\n    onValueChanged: (event: any) => {\n      if (event.event) {\n        handleUpdatedSujeto({ IdCompany: event.value })\n      }\n    },\n  }\n\n  const handleUpdatedSujeto = (property: any) => {\n    dispatch(\n      addSujeto({\n        ...sujetoState,\n        ...property,\n      }),\n    )\n  }\n  //const formSujetoRef=useRef(null);\n  return (\n    <>\n      <div className={'content-block  responsive-paddings'}>\n        <div className={'content-block  '}>\n          <form\n            className={'legalForm'}\n            onSubmit={handleSubmit(onSubmit)}\n            encType=\"multipart/form-data\"\n            style={{ width: '100%' }}\n          >\n            <Form\n              formData={formData.current}\n              disabled={loading}\n              //ref={formSujetoRef}\n              readOnly={false}\n              labelLocation={isLarge ? 'left' : 'top'}\n              showValidationSummary={false}\n              validationGroup=\"sujetoData\"\n              showColonAfterLabel={true}\n            >\n              <GroupItem colCount=\"2\">\n                <SimpleItem\n                  dataField=\"Nif\"\n                  helpText=\"Formato Valido Ex:77777777D\"\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'NIF',\n                    mode: 'text',\n                    value: sujetoState?.NIF ? sujetoState : null,\n                    onValueChanged: (event: any) => {\n                      if (event.event) {\n                        handleUpdatedSujeto({ NIF: event.value })\n                      }\n                    },\n                    ...NIFValidator,\n                  }}\n                >\n                  <RequiredRule message=\"Debes introducir un NIF\" />\n                </SimpleItem>\n                <SimpleItem\n                  dataField={'Slogan'}\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Nombre',\n                    mode: 'text',\n                    value: sujetoState?.Nombre ? sujetoState.Nombre : null,\n                    onValueChanged: (event: any) => {\n                      if (event.event) {\n                        handleUpdatedSujeto({ Nombre: event.value })\n                      }\n                    },\n                  }}\n                >\n                  <RequiredRule message=\"Debes introducir un Nombre\" />\n                </SimpleItem>\n                <SimpleItem\n                  dataField=\"Compa√±ia\"\n                  editorType=\"dxSelectBox\"\n                  editorOptions={selectedBoxOptions}\n                >\n                  <RequiredRule message=\"Debes elegir al menos una Compa√±√≠a\" />\n                </SimpleItem>\n              </GroupItem>\n              <SimpleItem render={renderButtons} cssClass=\"alignBottom\" />\n            </Form>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default SujetoFormPage\n","import { useState, ReactElement, useEffect, useRef } from 'react'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport ScrollView from 'devextreme-react/scroll-view'\nimport { SharedGrid } from 'react-library-grid'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { addHideLoader } from '../../../../redux/actions/configActions'\nimport NotFound from '../../../../components/notFound/notFound'\nimport {\n  getMapperSujeto,\n  getStructure,\n  getSujeto,\n} from '../service/sujetoService'\nimport { addSujeto, addSujetos, clearSujeto } from '../redux/sujetoActions'\nimport { ButtonColumnModel, DataGridModel } from 'shared-models'\nimport { Popup } from 'devextreme-react'\nimport SujetoFormPage from './sujetoFormPage'\nimport { SujetoModel } from '../models/sujetoModel'\nimport { addCompanies } from '../../companyPage/redux/companiesActions'\nimport { getCompanies } from '../../companyPage/services/companiesServices'\nimport { useHistory } from 'react-router-dom'\nimport { SujetosCampoDatoModel } from '../models/sujetosCampoDatoModel'\n\nimport { formatDate } from 'devextreme/localization'\nimport { isOpenPopup } from '../../../../redux/actions/sharedUtilsActions'\nimport { useScreenSize } from '../../../../utils/media-query'\n\nfunction SujetosPage(): ReactElement {\n  const dispatch = useDispatch()\n  const [structure, setStructure] = useState(new SujetosCampoDatoModel())\n  const userState = useSelector((state: RootState) => state.user)\n  const sujetoState = useSelector((state: RootState) => state.sujeto)\n  const [rowFocused, setRowFocused] = useState('')\n  const [showForm, setShowForm] = useState(false)\n  const [rowSelected, setRow] = useState(0)\n  const history = useHistory()\n  const popupSujetosRef = useRef(null)\n  const { isLarge, isMedium, isSmall, isXSmall } = useScreenSize()\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setStructure(await getStructure(userState!.user!))\n        await dispatch(addCompanies(await getCompanies(userState!.user!)))\n        dispatch(addHideLoader(false))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetchData()\n  }, [])\n\n  const openCreatePopup = async () => {\n    dispatch(addSujeto(new SujetoModel()))\n    setShowForm(!showForm)\n    dispatch(isOpenPopup(!showForm, popupSujetosRef))\n  }\n  const dataGridSujetosRef = useRef(null)\n  function fillDataGrid(): DataGridModel {\n    const buttonColumn: ButtonColumnModel = new ButtonColumnModel({\n      icon: 'edit',\n      text: '',\n      hint: 'Editar',\n      cellRender: async (row: any) => {\n        setRow(row.data)\n        setShowForm(!showForm)\n        const sujeto: SujetoModel = getMapperSujeto(\n          await getSujeto(userState!.user!, row.data.Id),\n        )\n        dispatch(addSujeto(sujeto))\n      },\n    })\n\n    let dataGridModel = new DataGridModel({\n      dataGridName: 'sujetoGridComponent',\n      ref: '',\n      rowFocused: rowFocused,\n      columns: structure.Campos,\n      openRow: ({}) => {},\n      openRowEnterKey: ({}) => {},\n      focusEventChanged: (e: any) => {\n        if (e.row) {\n          setRowFocused(e.row.key)\n        }\n      },\n      focusEventChanging: ({}) => {},\n      openCreatePopup: openCreatePopup,\n      user: userState!.user!,\n      url: `${process.env.REACT_APP_API_URL_CORE}/Sujeto`,\n      urlAux: `${process.env.REACT_APP_API_URL_CORE}/Sujeto`,\n      buttonsColumns: [buttonColumn],\n      filterRow: true,\n      filterPanel: true,\n      columnChooser: true,\n      headerFilter: true,\n      exportData: true,\n      showSearchPanel: true,\n      showToolbar: true,\n      history: history,\n      singularName: 'Sujeto',\n      pluralName: 'Sujetos',\n      pageName: 'Sujeto',\n      openedPopup: showForm,\n    })\n\n    return dataGridModel\n  }\n\n  return (\n    <>\n      {/* {isAllowed(PermisoType.AccesoAdministracion, userState!.user) ? ( */}\n      {true ? (\n        <div\n          className={'content-block dx-card responsive-paddings'}\n          style={{ borderColor: '#f4f9ff', borderWidth: '2px', margin: '0.6%' }}\n        >\n          <h3 style={{ margin: 0, padding: 0 }}>Sujetos</h3>\n          {structure?.Campos != undefined && structure?.Campos.length > 0 ? (\n            <ScrollView direction=\"vertical\">\n              <div style={{ height: '75vh' }}>\n                <SharedGrid dataGridModel={fillDataGrid()} />\n              </div>\n            </ScrollView>\n          ) : null}\n          <Popup\n            visible={showForm}\n            ref={popupSujetosRef}\n            onHiding={({}) => {\n              setShowForm(!showForm)\n              dispatch(isOpenPopup(false, popupSujetosRef))\n            }}\n            dragEnabled={true}\n            closeOnOutsideClick={false}\n            showTitle={true}\n            title=\"Formulario Sujeto\"\n            width={'60%'}\n            height={'50%'}\n          >\n            <SujetoFormPage\n              row={rowSelected}\n              setShowForm={setShowForm}\n              showForm={showForm}\n            ></SujetoFormPage>\n          </Popup>\n        </div>\n      ) : (\n        <div>\n          <NotFound data={{ type: 1 }}></NotFound>\n        </div>\n      )}\n      {}\n    </>\n  )\n}\n\nexport default SujetosPage\n","import React, { ReactElement, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useClearCache } from \"react-clear-cache\";\nimport { runInsights } from \"telemetry-portal\";\nimport { RootState } from \"../../../redux/combineReducers\";\nimport { isAlreadyLoggedUser } from \"../../../redux/utils/reduxUtils\";\nimport SujetosPage from \"./pages/sujetosPage\";\n\nfunction SujetoPage(): ReactElement {\n  const userState = useSelector((state: RootState) => state.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { isLatestVersion, emptyCacheStorage } = useClearCache();\n  const [showUserLinks, setShowUserLinks] = useState(true);\n  const appInsights = runInsights();\n\n  //   if (userState!.isLoggedIn === false) {\n  //     isAlreadyLoggedUser(\"/expedientePage\", history, dispatch);\n  //   }\n  //   const usuarioState = useSelector((state: RootState) => state.user);\n  //   if (usuarioState!.user?.Configuracion.Tema!) {\n  //     localStorage.setItem(\"dx-theme\", usuarioState!.user?.Configuracion.Tema!);\n  //   }\n\n  //   const handleHideShowUserLinks = () => {\n  //     setShowUserLinks(false);\n  //     localStorage.setItem(\"acceptedLinksUsers\", \"true\");\n  //   };\n\n  return (\n    <React.Fragment>\n      {/* {!isLatestVersion && emptyCacheStorage()}\n      {userState!.isLoggedIn === false ? history.push(\"/\") : null} */}\n      <SujetosPage></SujetosPage>\n    </React.Fragment>\n  );\n}\n\nexport default SujetoPage;\n","export const logo =\n  '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'\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form } from 'devextreme-react'\nimport {\n  EmailRule,\n  GroupItem,\n  Label,\n  PatternRule,\n  RequiredRule,\n  SimpleItem,\n} from 'devextreme-react/form'\nimport './scss/companiesAdministracionStyles.scss'\nimport { useForm } from 'react-hook-form'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { renderButtonsComponent } from '../../../../components/buttonsForm/renderButtons'\nimport { useScreenSize } from '../../../../utils/media-query'\nimport { addCompany } from '../redux/companiesActions'\nimport { postCompany, putCompany } from '../services/companiesServices'\nimport 'react-dropzone-uploader/dist/styles.css'\nimport './scss/dropzoneStyle.scss'\nimport Dropzone, {\n  defaultClassNames,\n  IDropzoneProps,\n  ILayoutProps,\n} from 'react-dropzone-uploader'\n\nimport { logo } from '../utils/images'\nimport { CompanyModel } from '../models/companyModel'\nimport { addDataFormChange } from '../../../../redux/actions/sharedUtilsActions'\nimport { refreshGrid } from '../../../../utils/sharedUitls'\nimport { addParentEnlaces } from '../redux/Enlace/enlaceActions'\nimport { getEnlaces } from '../services/enlacesService'\nimport { isSuperAdministrador } from '../../../../utils/allowAuthUtil'\n\nfunction CompanyFormPage(props: any): ReactElement {\n  const userState = useSelector((state: RootState) => state.user)\n  const company = useSelector((state: RootState) => state.company?.company)\n  const companyState = useSelector((state: RootState) => state.company)\n  const calculadoraState = useSelector(\n    (state: RootState) =>\n      state.calculadoraTransferencias?.calculadoraTransferencias,\n  )\n  const emailState = useSelector((state: RootState) => state.email?.email)\n  const enlaceState = useSelector((state: RootState) => state.enlace)\n  const isChangedState = useSelector(\n    (state: RootState) => state.sharedUtils.isChanged,\n  )\n  const { isLarge } = useScreenSize()\n  const [loading, setLoading] = useState(false)\n  const [pattern, setPattern] = useState('NIF')\n  const formData = useRef({})\n  const dispatch = useDispatch()\n  const { register, handleSubmit } = useForm()\n\n  useEffect(() => {\n    let isMounted = true\n    async function fetchData() {}\n    fetchData()\n    return () => {\n      isMounted = false\n    }\n  }, [props.showForm])\n  var logo1 = {\n    width: 'auto',\n    height: 'auto',\n    maxWidth: '146px',\n    maxHeight: '50px',\n    /*  marginTop: '-5%',\n     marginRight: '1.6em', */\n  }\n\n  const onSubmit = async (data: any) => {\n    setLoading(true)\n    let result: boolean = false\n    if (!company?.Id) {\n      dispatch(addCompany({ ...company, Id: 0 }))\n    }\n    if (company?.Id) {\n      result = await putCompany(\n        userState!.user!,\n        company,\n        calculadoraState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    } else {\n      result = await postCompany(\n        userState!.user!,\n        company!,\n        calculadoraState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    }\n\n    if (result) {\n      setLoading(false)\n      refreshGrid(props, true)\n      props.setShowForm(false)\n      localStorage.setItem(\n        'parentCompanyModulos',\n        JSON.stringify(companyState?.companyModulos),\n      )\n      localStorage.setItem(\n        'parentEnlaces',\n        JSON.stringify(\n          dispatch(\n            addParentEnlaces(\n              await getEnlaces(\n                userState?.user!,\n                parseInt(userState?.user!.CompanyId!),\n              ),\n            ),\n          ).payload,\n        ),\n      )\n    } else {\n      setLoading(false)\n    }\n  }\n\n  const handleCancelClick = () => {\n    // let confirmDialog = custom({\n    //   title: '',\n    //   messageHtml:\n    //     '<b>Para conservar los cambios antes pulsar Guardar, Si continua perder√° todos los datos cambiados</b>',\n    //   buttons: [\n    //     {\n    //       text: 'Continuar',\n    //       onClick: (e) => {\n    //         dispatch(addCompany(new CompanyModel()))\n    //         props.setShowForm(false)\n    //         confirmDialog.hide()\n    //       },\n    //     },\n    //     {\n    //       text: 'Cancelar',\n    //       onClick: (e) => {\n    //         confirmDialog.hide()\n    //       },\n    //     },\n    //   ],\n    // })\n    // confirmDialog.show().then((dialogResult: any) => {\n    //   console.log(dialogResult)\n    // })\n    dispatch(addCompany(new CompanyModel()))\n    props.setShowForm(false)\n  }\n\n  const renderButtons = () => {\n    if (!props.showForm) {\n      companyFormRef.current.instance.resetValues()\n    }\n    return renderButtonsComponent(`companyData`, handleCancelClick)\n  }\n\n  const handleUpdatedCompany = (property: any) => {\n    dispatch(\n      addCompany({\n        ...company,\n        ...property,\n      }),\n    )\n  }\n\n  const Layout = ({\n    input,\n    previews,\n    submitButton,\n    dropzoneProps,\n    files,\n    extra: { maxFiles },\n  }: ILayoutProps) => {\n    return (\n      <div>\n        {previews}\n\n        <div {...dropzoneProps}>{files.length < maxFiles && input}</div>\n\n        {files.length > 0 && submitButton}\n      </div>\n    )\n  }\n  const handleSubmitLogo1: IDropzoneProps['onSubmit'] = (files, allFiles) => {\n    console.log(\n      files.map(async (file) => {\n        var arrayBuffer = await file.file.arrayBuffer()\n        var blob = new Blob([arrayBuffer])\n        var reader = new FileReader()\n        reader.onload = function (event) {\n          const orginalBase = event.target!.result?.toString().split(',')\n          const base64: string | undefined = orginalBase![1].toString()\n          handleUpdatedCompany({\n            PrincipalLogo: base64,\n          })\n        }\n        reader.readAsDataURL(blob)\n      }),\n    )\n    allFiles.forEach((f) => f.remove())\n  }\n  const handleSubmitLogo2: IDropzoneProps['onSubmit'] = (files, allFiles) => {\n    console.log(\n      files.map(async (file) => {\n        var arrayBuffer = await file.file.arrayBuffer()\n        var blob = new Blob([arrayBuffer])\n        var reader = new FileReader()\n        reader.onload = function (event) {\n          const orginalBase = event.target!.result?.toString().split(',')\n          const base64: string | undefined = orginalBase![1].toString()\n          handleUpdatedCompany({\n            SecondaryLogo: base64,\n          })\n        }\n        reader.readAsDataURL(blob)\n      }),\n    )\n    allFiles.forEach((f) => f.remove())\n  }\n  const companyFormRef: any = useRef(null)\n  if (!props.showForm) {\n    if (companyFormRef != null) {\n      companyFormRef.current?.instance.resetValues()\n    }\n  }\n  return (\n    <>\n      <div\n        className={'content-block responsive-paddings'}\n        style={{ borderColor: '#f4f9ff', borderWidth: '2px', margin: '0.6%' }}\n      >\n        <div className=\"form\">\n          <form\n            className={'legalForm'}\n            onSubmit={handleSubmit(onSubmit)}\n            encType=\"multipart/form-data\"\n            style={{ width: '100%' }}\n          >\n            <Form\n              formData={formData.current}\n              disabled={loading}\n              readOnly={false}\n              ref={companyFormRef}\n              labelLocation={isLarge ? 'left' : 'top'}\n              showValidationSummary={false}\n              validationGroup=\"companyData\"\n              showColonAfterLabel={true}\n            >\n              {/* esto solo lo veran los superAdmins de creaci√≥n de empresas */}\n              {company?.Id ? (\n                <SimpleItem\n                  dataField=\"Registro\"\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    disabled: true,\n                    stylingMode: 'filled',\n                    placeholder: 'Numero de registro',\n                    mode: 'text',\n                    value: company?.Id ? company?.Id : '',\n                  }}\n                ></SimpleItem>\n              ) : undefined}\n\n              <SimpleItem\n                dataField=\"NIF/NIE/CIF\"\n                editorOptions={{\n                  stylingMode: 'filled',\n                  placeholder: 'N√∫mero de identificaci√≥n(NIF,NIE,CIF...)',\n                  mode: 'text',\n                  value: company?.IdentificationNumber\n                    ? company?.IdentificationNumber\n                    : '',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedCompany({\n                        IdentificationNumber: event.value,\n                      })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                  //...NIFValidator,\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" type=\"required\" />\n\n                <PatternRule\n                  pattern=\"^([a-z]|[A-Z]|[0-9])[0-9]{7}([a-z]|[A-Z]|[0-9])$\"\n                  message=\"Debes introducir un numero de identificaci√≥n NIF/CIF/NIE\"\n                />\n              </SimpleItem>\n\n              <SimpleItem\n                dataField={'name'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n                  placeholder: 'Nombre de compa√±√≠a',\n                  value: company?.Name ? company?.Name : '',\n                  mode: 'text',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedCompany({ Name: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n\n                <Label visible={true} text=\"Nombre\" />\n              </SimpleItem>\n              <SimpleItem\n                dataField={'Mensaje barra superior'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n                  maxLength: 100,\n                  placeholder: 'Mensaje barra superior',\n                  value: company?.Slogan ? company?.Slogan : '',\n                  mode: 'text',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedCompany({ Slogan: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" type=\"required\" />\n                <Label visible={true} text=\"Mensaje barra superior\" />\n              </SimpleItem>\n\n              <SimpleItem\n                dataField={'contactInformation'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n                  placeholder: 'Informaci√≥n de contacto',\n                  value: company?.ContactInformation\n                    ? company?.ContactInformation\n                    : '',\n                  mode: 'text',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedCompany({ ContactInformation: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n\n                <Label visible={true} text=\"Informaci√≥n de contacto\" />\n              </SimpleItem>\n\n              <SimpleItem\n                dataField={'notificationsEmail'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n                  placeholder: 'Email para notificaciones',\n                  value: company?.NotificationsEmail\n                    ? company?.NotificationsEmail\n                    : '',\n                  mode: 'text',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedCompany({ NotificationsEmail: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n                <EmailRule message=\"Debe introducir un email con un formato correcto\" />\n                <Label visible={true} text=\"Email para notificaciones\" />\n              </SimpleItem>\n              {isSuperAdministrador(userState!.user!) ? (\n                <GroupItem colCount=\"2\">\n                  <SimpleItem\n                    dataField={'enabled'}\n                    editorType={'dxCheckBox'}\n                    editorOptions={{\n                      stylingMode: 'filled',\n\n                      value: company?.Enabled ? company?.Enabled : '',\n                      mode: 'text',\n                      onValueChanged: (event: any) => {\n                        if (event.event) {\n                          handleUpdatedCompany({\n                            Enabled: event.value,\n                          })\n                          if (!isChangedState) dispatch(addDataFormChange(true))\n                        }\n                      },\n                    }}\n                  >\n                    <Label visible={true} text=\"Bloqueado\" />\n                  </SimpleItem>\n                </GroupItem>\n              ) : null}\n\n              <GroupItem colCount=\"2\">\n                <SimpleItem>\n                  <img\n                    src={`data:image/jpeg;base64,${\n                      company?.PrincipalLogo != '' &&\n                      company?.PrincipalLogo != null\n                        ? company?.PrincipalLogo\n                        : logo\n                    }`}\n                    style={logo1}\n                  />\n                  <Dropzone\n                    LayoutComponent={Layout}\n                    onSubmit={handleSubmitLogo1}\n                    classNames={{\n                      inputLabelWithFiles: defaultClassNames.inputLabel,\n                    }}\n                    submitButtonContent=\"Enviar\"\n                    maxFiles={1}\n                    inputContent=\"Subir logo principal\"\n                    inputWithFilesContent={(files) =>\n                      `${1 - files.length} more`\n                    }\n                    submitButtonDisabled={(files) => files.length < 1}\n                    styles={{\n                      dropzone: { minHeight: '6vh', maxHeight: '10vh' },\n                    }}\n                  />\n                </SimpleItem>\n                <SimpleItem>\n                  <img\n                    src={`data:image/jpeg;base64,${\n                      company?.SecondaryLogo != '' &&\n                      company?.SecondaryLogo != null\n                        ? company?.SecondaryLogo\n                        : logo\n                    }`}\n                    style={logo1}\n                  />\n                  <Dropzone\n                    LayoutComponent={Layout}\n                    onSubmit={handleSubmitLogo2}\n                    classNames={{\n                      inputLabelWithFiles: defaultClassNames.inputLabel,\n                    }}\n                    submitButtonContent=\"Enviar\"\n                    maxFiles={1}\n                    inputContent=\"Subir logo secundario\"\n                    inputWithFilesContent={(files) =>\n                      `${1 - files.length} more`\n                    }\n                    submitButtonDisabled={(files) => files.length < 1}\n                    styles={{\n                      dropzone: { minHeight: '6vh', maxHeight: '10vh' },\n                    }}\n                  />\n                </SimpleItem>\n              </GroupItem>\n              {/*  <SimpleItem render={renderButtons} cssClass=\"alignBottom\" /> */}\n            </Form>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default CompanyFormPage\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form } from 'devextreme-react'\nimport { Item, Label, PatternRule, RequiredRule, SimpleItem } from 'devextreme-react/form'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { useScreenSize } from '../../../../utils/media-query'\nimport { addEnlaces, addParentEnlaces } from '../redux/Enlace/enlaceActions'\nimport { EnlaceModel } from '../models/enlaceModel'\nimport { renderButtonsComponent } from '../../../../components/buttonsForm/renderButtons'\nimport { EnlacesModel } from '../models/enlacesModel'\nimport { useForm } from 'react-hook-form'\nimport { addCompany } from '../redux/companiesActions'\nimport { postCompany, putCompany } from '../services/companiesServices'\nimport { addDataFormChange } from '../../../../redux/actions/sharedUtilsActions'\nimport { getEnlaces } from '../services/enlacesService'\nimport { refreshGrid } from '../../../../utils/sharedUitls'\n\nfunction EnlacesFormComponent(props: any): ReactElement {\n  const userState = useSelector((state: RootState) => state.user)\n  const companyState = useSelector((state: RootState) => state.company)\n  const company = useSelector((state: RootState) => state.company?.company)\n  const calculadoraState = useSelector(\n    (state: RootState) =>\n      state.calculadoraTransferencias?.calculadoraTransferencias,\n  )\n  const emailState = useSelector((state: RootState) => state.email?.email)\n  const enlaceState = useSelector((state: RootState) => state.enlace)\n  const isChangedState = useSelector(\n    (state: RootState) => state.sharedUtils.isChanged,\n  )\n  const { isLarge } = useScreenSize()\n  const [loading, setLoading] = useState(false)\n  const { register, handleSubmit } = useForm()\n  const formData = useRef({})\n  const dispatch = useDispatch()\n  useEffect(() => {\n    async function fetchData() {\n      try {\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetchData()\n  }, [])\n  const onSubmit = async (data: any) => {\n    setLoading(true)\n    let result: boolean = false\n    if (!company?.Id) {\n      dispatch(addCompany({ ...company, Id: 0 }))\n    }\n    if (company?.Id) {\n      result = await putCompany(\n        userState!.user!,\n        company,\n        calculadoraState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    } else {\n      result = await postCompany(\n        userState!.user!,\n        company!,\n        calculadoraState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    }\n\n    if (result) {\n      setLoading(false)\n      refreshGrid(props, true)\n      props.setShowForm(false)\n      localStorage.setItem(\n        'parentCompanyModulos',\n        JSON.stringify(companyState?.companyModulos),\n      )\n      localStorage.setItem(\n        'parentEnlaces',\n        JSON.stringify(\n          dispatch(\n            addParentEnlaces(\n              await getEnlaces(\n                userState?.user!,\n                parseInt(userState?.user!.CompanyId!),\n              ),\n            ),\n          ).payload,\n        ),\n      )\n    } else {\n      setLoading(false)\n    }\n  }\n  const handleUpdatedEnlace = (property: any) => {\n    dispatch(\n      addEnlaces({\n        ...enlaceState?.enlaces,\n        ...property,\n      }),\n    )\n  }\n\n  function getEnlaceValue(codigoEnlace: string) {\n    let value = ''\n    if (enlaceState?.enlaces!) {\n      var doubles = enlaceState?.enlaces.map(function (x: EnlaceModel) {\n        if (x.CodigoTipoEnlace == codigoEnlace) {\n          value = x.EnlaceValue\n        }\n      })\n    }\n    return value\n  }\n\n  //comprobaremos si existe el enlace y lo a√±adiremos o lo updatearemos\n  function addEnlace(enlace: EnlaceModel) {\n    if (enlaceState?.enlaces) {\n      let exitEnlace = false\n      enlaceState?.enlaces.map(function (x: EnlaceModel) {\n        if (enlace.CodigoTipoEnlace == x.CodigoTipoEnlace) {\n        }\n      })\n    }\n  }\n  const handleCancelClick = () => {\n    dispatch(addEnlaces(undefined))\n    props.setShowForm(false)\n    /*  calculadoraFormRef.current.instance.resetValues() */\n  }\n  const renderButtons = () => {\n    /*  if (!props.showForm) {\n      enlacesFormRef.current.instance.resetValues()\n    } */\n    return renderButtonsComponent(`enlacesData`, handleCancelClick)\n  }\n  const enlacesFormRef: any = useRef(null)\n  if(!props.showForm){\n    if(enlacesFormRef!=null){\n \n      enlacesFormRef.current?.instance.resetValues()\n  }\n\n  }\n  return (\n    <>\n      <div\n        className={'content-block responsive-paddings'}\n        style={{ borderColor: '#f4f9ff', borderWidth: '2px', margin: '0.6%' }}\n      >\n        <div className={'form'}>\n          <form\n            className={'legalForm'}\n            onSubmit={handleSubmit(onSubmit)}\n            style={{ width: '100%' }}\n          >\n            <Form\n              formData={formData.current}\n              disabled={loading}\n              ref={enlacesFormRef}\n              labelLocation={isLarge ? 'left' : 'top'}\n              validationGroup=\"enlacesData\"\n            >\n              <Item\n                dataField={'linkLegal'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  disabled: false,\n                  stylingMode: 'filled',\n                  placeholder: 'Link a Legal',\n                  value: getEnlaceValue('Legal'),\n                  mode: 'text',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      let enlace: EnlaceModel | undefined =\n                        enlaceState?.enlaces?.find(\n                          (x) =>\n                            x.IdTipoEnlace == 1 &&\n                            x.IdCompany == companyState?.company?.Id,\n                        ) as never\n                      if (enlace == undefined) {\n                        enlace = {\n                          Id: 0,\n                          IdCompany: companyState?.company?.Id!,\n                          IdTipoEnlace: 1,\n                          EnlaceValue: event.value,\n                          CodigoTipoEnlace: 'Legal',\n                        }\n                      } else {\n                        const index = enlaceState?.enlaces.indexOf(enlace)\n                        enlace = enlace as EnlaceModel\n                        enlace.EnlaceValue = event.value\n                        enlaceState?.enlaces.splice(index!, 1)\n                      }\n\n                      enlaceState?.enlaces?.push(enlace as never)\n                      dispatch(addEnlaces(enlaceState?.enlaces!))\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n<PatternRule message=\"Debe introducir una URL. ex: https://www.ejemplo.es \" pattern=\"https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)\"/>\n                <Label visible={true} text=\"Link a Legal\" />\n              </Item>\n\n              <Item\n                dataField={'linkPrivacidadCookies'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  disabled: false,\n                  stylingMode: 'filled',\n                  placeholder: 'Link a t√©rminos de privacidad y cookies',\n                  value: getEnlaceValue('Cookies'),\n                  mode: 'text',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      let enlace: EnlaceModel | undefined =\n                        enlaceState?.enlaces?.find(\n                          (x) =>\n                            x.IdTipoEnlace == 2 &&\n                            x.IdCompany == companyState?.company?.Id,\n                        ) as never\n                      if (enlace == undefined) {\n                        enlace = {\n                          Id: 0,\n                          IdCompany: companyState?.company?.Id!,\n                          IdTipoEnlace: 2,\n                          EnlaceValue: event.value,\n                          CodigoTipoEnlace: 'Cookies',\n                        }\n                      } else {\n                        const index = enlaceState?.enlaces.indexOf(enlace)\n                        enlace = enlace as EnlaceModel\n                        if (event.value == '') {\n                          enlace.EnlaceValue = event.previousValue\n                          enlace.CodigoTipoEnlace = 'Cookies'\n                        } else {\n                          enlace.EnlaceValue = event.value\n                          enlace.CodigoTipoEnlace = 'Cookies'\n                        }\n                        enlaceState?.enlaces.splice(index!, 1)\n                      }\n\n                      enlaceState?.enlaces?.push(enlace as never)\n\n                      dispatch(addEnlaces(enlaceState?.enlaces!))\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n                <PatternRule message=\"Debe introducir una URL. ex: https://www.ejemplo.es \" pattern=\"https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)\"/>\n\n                <Label\n                  visible={true}\n                  text=\"Link a t√©rminos de privacidad y cookies\"\n                />\n              </Item>\n              <Item\n                dataField={'LinkRGPD'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  disabled: false,\n                  stylingMode: 'filled',\n                  placeholder: 'Link a RGPD',\n                  value: getEnlaceValue('RGPD'),\n                  mode: 'text',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      let enlace: EnlaceModel | undefined =\n                        enlaceState?.enlaces?.find(\n                          (x) =>\n                            x.IdTipoEnlace == 3 &&\n                            x.IdCompany == companyState?.company?.Id,\n                        ) as never\n                      if (enlace == undefined) {\n                        enlace = {\n                          Id: 0,\n                          IdCompany: companyState?.company?.Id!,\n                          IdTipoEnlace: 3,\n                          EnlaceValue: event.value,\n                          CodigoTipoEnlace: 'RGPD',\n                        }\n                      } else {\n                        const index = enlaceState?.enlaces.indexOf(enlace)\n                        enlace = enlace as EnlaceModel\n                        enlace.EnlaceValue = event.value\n                        enlaceState?.enlaces.splice(index!, 1)\n                      }\n\n                      enlaceState?.enlaces?.push(enlace as never)\n                      dispatch(addEnlaces(enlaceState?.enlaces!))\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n                <PatternRule message=\"Debe introducir una URL. ex: https://www.ejemplo.es \" pattern=\"https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)\"/>\n\n                <Label visible={true} text=\"Link a RGPD\" />\n              </Item>\n           {/*    <SimpleItem render={renderButtons} cssClass=\"alignBottom\" /> */}\n            </Form>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default EnlacesFormComponent\n","\nimport { CalculadoraTransferenciaModel } from '../../models/calculadoraTransferenciaModel'\nimport {\n\n  ADD_CALCULADORA_TRANSFERENCIAS,\n  CLEAR_CALCULADORA_TRANSFERENCIAS,\n  CalculadoraTransferenciasActionsTypes,\n} from './calculadoraTransferenciasType'\n\n\nexport const addCalculadoraTranseferencias = (\n  calculadoraTransferencias: Partial<CalculadoraTransferenciaModel> | CalculadoraTransferenciaModel | undefined,\n): CalculadoraTransferenciasActionsTypes => ({\n  type: ADD_CALCULADORA_TRANSFERENCIAS,\n  payload: calculadoraTransferencias,\n})\n\n\nexport const clearCalculadoraTranseferencias = (\n  calculadoraTransferencias: CalculadoraTransferenciaModel | undefined,\n): CalculadoraTransferenciasActionsTypes => ({\n  type: CLEAR_CALCULADORA_TRANSFERENCIAS,\n  payload: calculadoraTransferencias,\n})\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport { Form } from 'devextreme-react'\nimport {\n  Item,\n  Label,\n  NumericRule,\n  RequiredRule,\n  SimpleItem,\n} from 'devextreme-react/form'\nimport { checkScreenSize } from 'shared-utils'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { addCalculadoraTranseferencias } from '../redux/CalculadoraTransferencias/calculadoraTransferenciasActions'\nimport { CalculadoraTransferenciaModel } from '../models/calculadoraTransferenciaModel'\nimport { renderButtonsComponent } from '../../../../components/buttonsForm/renderButtons'\nimport { useForm } from 'react-hook-form'\nimport { addCompany } from '../redux/companiesActions'\nimport { postCompany, putCompany } from '../services/companiesServices'\nimport { addDataFormChange } from '../../../../redux/actions/sharedUtilsActions'\nimport { refreshGrid } from '../../../../utils/sharedUitls'\nimport { addParentEnlaces } from '../redux/Enlace/enlaceActions'\nimport { getEnlaces } from '../services/enlacesService'\n\nfunction CalculadoraFormComponent(props: any): ReactElement {\n  const calculadoraTransferenciasState = useSelector(\n    (state: RootState) =>\n      state.calculadoraTransferencias?.calculadoraTransferencias,\n  )\n  const userState = useSelector((state: RootState) => state.user)\n  const company = useSelector((state: RootState) => state.company?.company)\n  const companyState = useSelector((state: RootState) => state.company)\n  const emailState = useSelector((state: RootState) => state.email?.email)\n  const enlaceState = useSelector((state: RootState) => state.enlace)\n  const isChangedState = useSelector(\n    (state: RootState) => state.sharedUtils.isChanged,\n  )\n  const [loading, setLoading] = useState(false)\n  const formData = useRef({})\n  const dispatch = useDispatch()\n  const { register, handleSubmit } = useForm()\n  useEffect(() => {\n    async function fetchData() {\n      try {\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetchData()\n  }, [props.showForm])\n  const onSubmit = async (data: any) => {\n    setLoading(true)\n    let result: boolean = false\n    if (!company?.Id) {\n      dispatch(addCompany({ ...company, Id: 0 }))\n    }\n    if (company?.Id) {\n      result = await putCompany(\n        userState!.user!,\n        company,\n        calculadoraTransferenciasState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    } else {\n      result = await postCompany(\n        userState!.user!,\n        company!,\n        calculadoraTransferenciasState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    }\n\n    if (result) {\n      setLoading(false)\n      refreshGrid(props, true)\n      props.setShowForm(false)\n      localStorage.setItem(\n        'parentCompanyModulos',\n        JSON.stringify(companyState?.companyModulos),\n      )\n      localStorage.setItem(\n        'parentEnlaces',\n        JSON.stringify(\n          dispatch(\n            addParentEnlaces(\n              await getEnlaces(\n                userState?.user!,\n                parseInt(userState?.user!.CompanyId!),\n              ),\n            ),\n          ).payload,\n        ),\n      )\n    } else {\n      setLoading(false)\n    }\n  }\n\n  const handleUpdatedCalculadora = (property: any) => {\n    dispatch(\n      addCalculadoraTranseferencias({\n        ...calculadoraTransferenciasState,\n        ...property,\n      }),\n    )\n  }\n  const handleCancelClick = () => {\n    dispatch(addCalculadoraTranseferencias(new CalculadoraTransferenciaModel()))\n    props.setShowForm(false)\n    /*  calculadoraFormRef.current.instance.resetValues() */\n  }\n  const renderButtons = () => {\n    if (!props.showForm) {\n      calculadoraFormRef.current.instance.resetValues()\n    }\n    return renderButtonsComponent(`calculadoraData`, handleCancelClick)\n  }\n\n  const calculadoraFormRef: any = useRef(null)\n\n  if (!props.showForm) {\n    if (calculadoraFormRef != null) {\n      calculadoraFormRef.current?.instance.resetValues()\n    }\n  }\n  return (\n    <>\n      {' '}\n      <div\n        className={'content-block responsive-paddings'}\n        style={{ borderColor: '#f4f9ff', borderWidth: '2px', margin: '0.6%' }}\n      >\n        <div className=\"form\">\n          <form\n            className={'calculadoraForm'}\n            onSubmit={handleSubmit(onSubmit)}\n            style={{ width: '100%' }}\n          >\n            <Form\n              formData={formData.current}\n              ref={calculadoraFormRef}\n              disabled={loading}\n              labelLocation={checkScreenSize() ? 'left' : 'top'}\n              validationGroup=\"calculadoraData\"\n            >\n              <Item\n                dataField={'CuotaTurismos'}\n                editorType={'dxNumberBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n                  format: {\n                    style: 'currency',\n                    currency: 'EUR',\n                    useGrouping: true,\n                  },\n                  placeholder:\n                    'Cuota de turismos/todoterrenos/comerciales (Ej. 21,60)',\n                  value: calculadoraTransferenciasState?.CuotaTurismos\n                    ? calculadoraTransferenciasState?.CuotaTurismos\n                    : null,\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedCalculadora({ CuotaTurismos: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n                <NumericRule message=\"El Campo debe ser num√©rico\" />\n                <Label visible={true} text=\"Cuota Coches\" />\n              </Item>\n\n              <Item\n                dataField={'CuotaMotocicletas'}\n                editorType={'dxNumberBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n                  format: {\n                    style: 'currency',\n                    currency: 'EUR',\n                    useGrouping: true,\n                  },\n                  placeholder:\n                    'Cuota de motocicletas/ciclomotores/quads (Ej. 21,60)',\n                  value: calculadoraTransferenciasState?.CuotaTurismos\n                    ? calculadoraTransferenciasState.CuotaMotocicletas\n                    : null,\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedCalculadora({\n                        CuotaMotocicletas: event.value,\n                      })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n                <NumericRule message=\"El Campo debe ser num√©rico\" />\n                <Label visible={true} />\n              </Item>\n              <Item\n                dataField={'Mensaje'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n                  placeholder: 'Mensaje de responsabilidad legal',\n                  value: calculadoraTransferenciasState?.Mensaje\n                    ? calculadoraTransferenciasState?.Mensaje\n                    : '',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedCalculadora({ Mensaje: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <Label visible={true} text=\"Mensaje Legal\" />\n              </Item>\n            </Form>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\nexport default CalculadoraFormComponent\n","import { ConfiguracionEnvioEmailModel } from '../../models/configuracionEnvioEmailModel'\nimport { ADD_EMAIL, CLEAR_EMAIL, EmailActionsTypes } from './emailType'\n\nexport const addEmail = (\n  email:\n    | Partial<ConfiguracionEnvioEmailModel>\n    | ConfiguracionEnvioEmailModel\n    | undefined,\n): EmailActionsTypes => ({\n  type: ADD_EMAIL,\n  payload: email,\n})\n\nexport const clearEmail = (\n  email: ConfiguracionEnvioEmailModel | undefined,\n): EmailActionsTypes => ({\n  type: CLEAR_EMAIL,\n  payload: email,\n})\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport { Form } from 'devextreme-react'\nimport {\n  EmailRule,\n  Item,\n  Label,\n  NumericRule,\n  RequiredRule,\n  SimpleItem,\n} from 'devextreme-react/form'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { addEmail } from '../redux/Email/emailActions'\nimport { useScreenSize } from '../../../../utils/media-query'\nimport { ConfiguracionEnvioEmailModel } from '../models/configuracionEnvioEmailModel'\nimport { renderButtonsComponent } from '../../../../components/buttonsForm/renderButtons'\nimport { useForm } from 'react-hook-form'\nimport { addCompany } from '../redux/companiesActions'\nimport { postCompany, putCompany } from '../services/companiesServices'\nimport { addDataFormChange } from '../../../../redux/actions/sharedUtilsActions'\nimport { addParentEnlaces } from '../redux/Enlace/enlaceActions'\nimport { getEnlaces } from '../services/enlacesService'\nimport { refreshGrid } from '../../../../utils/sharedUitls'\n\nfunction EmailFormComponent(props: any): ReactElement {\n  const emailState = useSelector((state: RootState) => state.email?.email)\n  const userState = useSelector((state: RootState) => state.user)\n  const company = useSelector((state: RootState) => state.company?.company)\n  const companyState = useSelector((state: RootState) => state.company)\n  const calculadoraTransferenciasState = useSelector(\n    (state: RootState) =>\n      state.calculadoraTransferencias?.calculadoraTransferencias,\n  )\n  const enlaceState = useSelector((state: RootState) => state.enlace)\n  const isChangedState = useSelector(\n    (state: RootState) => state.sharedUtils.isChanged,\n  )\n  const [loading, setLoading] = useState(false)\n  const formData = useRef({})\n  const dispatch = useDispatch()\n  const { isLarge } = useScreenSize()\n  const { register, handleSubmit } = useForm()\n  useEffect(() => {\n    async function fetchData() {\n      try {\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetchData()\n  }, [])\n  const onSubmit = async (data: any) => {\n    setLoading(true)\n    let result: boolean = false\n    if (!company?.Id) {\n      dispatch(addCompany({ ...company, Id: 0 }))\n    }\n    if (company?.Id) {\n      result = await putCompany(\n        userState!.user!,\n        company,\n        calculadoraTransferenciasState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    } else {\n      result = await postCompany(\n        userState!.user!,\n        company!,\n        calculadoraTransferenciasState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    }\n\n    if (result) {\n      setLoading(false)\n      refreshGrid(props, true)\n      props.setShowForm(false)\n      localStorage.setItem(\n        'parentCompanyModulos',\n        JSON.stringify(companyState?.companyModulos),\n      )\n      localStorage.setItem(\n        'parentEnlaces',\n        JSON.stringify(\n          dispatch(\n            addParentEnlaces(\n              await getEnlaces(\n                userState?.user!,\n                parseInt(userState?.user!.CompanyId!),\n              ),\n            ),\n          ).payload,\n        ),\n      )\n    } else {\n      setLoading(false)\n    }\n  }\n  const handleUpdatedEmail = (property: any) => {\n    dispatch(\n      addEmail({\n        ...emailState,\n        ...property,\n      }),\n    )\n  }\n  const handleCancelClick = () => {\n    dispatch(addEmail(undefined))\n    props.setShowForm(false)\n    /*  calculadoraFormRef.current.instance.resetValues() */\n  }\n  const renderButtons = () => {\n    /*  if (!props.showForm) {\n      enlacesFormRef.current.instance.resetValues()\n    } */\n    return renderButtonsComponent(`emailData`, handleCancelClick)\n  }\n\n  const emailFormRef: any = useRef(null)\n  if (!props.showForm) {\n    emailFormRef.current.instance.repaint()\n  }\n  return (\n    <>\n      {' '}\n      <div\n        className={'content-block responsive-paddings'}\n        style={{ borderColor: '#f4f9ff', borderWidth: '2px', margin: '0.6%' }}\n      >\n        <div className=\"form\">\n          <form\n            className={'calculadoraForm'}\n            onSubmit={handleSubmit(onSubmit)}\n            style={{ width: '100%' }}\n          >\n            <Form\n              formData={formData.current}\n              disabled={loading}\n              ref={emailFormRef}\n              labelLocation={isLarge ? 'left' : 'top'}\n            >\n              <Item\n                dataField={'ServidorSMTP'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n\n                  value: emailState?.ServidorSMTP\n                    ? emailState?.ServidorSMTP\n                    : '',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedEmail({ ServidorSMTP: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n\n                <Label visible={true} text=\"Servidor SMTP\" />\n              </Item>\n\n              <Item\n                dataField={'PuertoSMTP'}\n                editorType={'dxNumberBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n\n                  value: emailState?.PuertoSMTP ? emailState.PuertoSMTP : '',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedEmail({\n                        PuertoSMTP: event.value,\n                      })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n                <NumericRule message=\"El Campo debe ser num√©rico\" />\n                <Label visible={true} text=\"Puerto SMTP\" />\n              </Item>\n              <Item\n                dataField={'UsaSSL'}\n                editorType={'dxCheckBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n\n                  value: emailState?.UsaSSL ? emailState?.UsaSSL : '',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedEmail({ UsaSSL: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <Label visible={true} text=\"Usar SSL\" />\n              </Item>\n              <Item\n                dataField={'NombreMostrar'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n\n                  value: emailState?.NombreMostrar\n                    ? emailState?.NombreMostrar\n                    : '',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedEmail({ NombreMostrar: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n\n                <Label visible={true} text=\"Nombre a Mostrar\" />\n              </Item>\n              <Item\n                dataField={'DireccionEmail'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n                  mode: 'email',\n                  value: emailState?.DireccionEmail\n                    ? emailState?.DireccionEmail\n                    : '',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedEmail({ DireccionEmail: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n                <EmailRule message=\"Debe introducir un email con un formato correcto\" />\n                <Label visible={true} text=\"Direcci√≥n de Email\" />\n              </Item>\n              <Item\n                dataField={'UsuarioEmail'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n\n                  value: emailState?.UsuarioEmail\n                    ? emailState?.UsuarioEmail\n                    : '',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedEmail({ UsuarioEmail: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n                <Label visible={true} text=\"Usuario Email\" />\n              </Item>\n              <Item\n                dataField={'PasswordEmail'}\n                editorType={'dxTextBox'}\n                editorOptions={{\n                  stylingMode: 'filled',\n                  mode: 'password',\n                  value: emailState?.PasswordEmail\n                    ? emailState?.PasswordEmail\n                    : '',\n                  onValueChanged: (event: any) => {\n                    if (event.event) {\n                      handleUpdatedEmail({ PasswordEmail: event.value })\n                      if (!isChangedState) dispatch(addDataFormChange(true))\n                    }\n                  },\n                }}\n              >\n                <RequiredRule message=\"El campo es requerido\" />\n                <Label visible={true} text=\"Contrase√±a\" />\n              </Item>\n            </Form>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\nexport default EmailFormComponent\n","import { useState, ReactElement, useEffect, useRef, useMemo } from 'react'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../../redux/combineReducers'\nimport NotFound from '../../../../components/notFound/notFound'\nimport { List } from 'devextreme-react'\nimport ArrayStore from 'devextreme/data/array_store'\nimport { postCompany, putCompany } from '../services/companiesServices'\nimport { CompanyModuloModel } from '../models/companyModuloModel'\nimport { addCompany, addCompanyModulos } from '../redux/companiesActions'\nimport '../pages/scss/companyModulo.scss'\nimport { renderButtonsComponent } from '../../../../components/buttonsForm/renderButtons'\nimport Form, { SimpleItem } from 'devextreme-react/form'\nimport { useScreenSize } from '../../../../utils/media-query'\nimport { useForm } from 'react-hook-form'\nimport { isSuperAdministrador } from '../../../../utils/allowAuthUtil'\nimport {\n  NotifyType,\n  refreshGrid,\n  showToast,\n} from '../../../../utils/sharedUitls'\nimport { addParentEnlaces } from '../redux/Enlace/enlaceActions'\nimport { getEnlaces } from '../services/enlacesService'\n\nfunction ModulosList(props: any): ReactElement {\n  const dispatch = useDispatch()\n  const moduloState = useSelector((state: RootState) => state.modulo)\n  const companyState = useSelector((state: RootState) => state.company)\n  const userState = useSelector((state: RootState) => state.user)\n  const company = useSelector((state: RootState) => state.company?.company)\n  const calculadoraState = useSelector(\n    (state: RootState) =>\n      state.calculadoraTransferencias?.calculadoraTransferencias,\n  )\n  const emailState = useSelector((state: RootState) => state.email?.email)\n  const enlaceState = useSelector((state: RootState) => state.enlace)\n  const isChangedState = useSelector(\n    (state: RootState) => state.sharedUtils.isChanged,\n  )\n  const [selectedItemKeys, setSelecteItemKeys] = useState<number[] | undefined>(\n    [],\n  )\n  const [dataModules, setDataModules] = useState([{}])\n  const [loading, setLoading] = useState(false)\n  const { isLarge } = useScreenSize()\n  const formData = useRef({})\n  const { register, handleSubmit } = useForm()\n  var ismounted = false\n  useMemo(() => {\n    function fetchData() {\n      setSelecteItemKeys([])\n      try {\n        if (companyState?.companyModulos) {\n          setSelecteItemKeys(\n            companyState?.companyModulos?.map((x: any) => x.IdModulo),\n          )\n        } else {\n          setSelecteItemKeys([])\n        }\n\n        if (moduloState.modulos) {\n          let data: any = []\n          moduloState.modulos.Datos.map((x) => {\n            return data.push({ id: x.Id, text: x.Nombre })\n          })\n          setDataModules(data)\n        }\n        ismounted = true\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetchData()\n  }, [props.showForm])\n  const onSubmit = async (data: any) => {\n    setLoading(true)\n    let result: boolean = false\n    if (!company?.Id) {\n      dispatch(addCompany({ ...company, Id: 0 }))\n    }\n    if (company?.Id) {\n      result = await putCompany(\n        userState!.user!,\n        company,\n        calculadoraState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    } else {\n      result = await postCompany(\n        userState!.user!,\n        company!,\n        calculadoraState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    }\n\n    if (result) {\n      setLoading(false)\n      refreshGrid(props, true)\n      props.setShowForm(false)\n      localStorage.setItem(\n        'parentCompanyModulos',\n        JSON.stringify(companyState?.companyModulos),\n      )\n      localStorage.setItem(\n        'parentEnlaces',\n        JSON.stringify(\n          dispatch(\n            addParentEnlaces(\n              await getEnlaces(\n                userState?.user!,\n                parseInt(userState?.user!.CompanyId!),\n              ),\n            ),\n          ).payload,\n        ),\n      )\n    } else {\n      setLoading(false)\n    }\n  }\n  const saveCompanyModulos = (property: any) => {\n    let companyModulos: CompanyModuloModel[] = []\n    property?.map((key: any) => {\n      return companyModulos.push({\n        IdCompany: companyState?.company?.Id!,\n        IdModulo: key,\n        Nombre: moduloState?.modulos?.Datos.find((x) => x.Id == key)?.Nombre!,\n      })\n    })\n    dispatch(addCompanyModulos(companyModulos))\n  }\n  const dataSource: any = new ArrayStore({\n    key: 'id',\n    data: dataModules,\n  })\n  const handleCancelClick = () => {\n    dispatch(addCompanyModulos(undefined))\n    props.setShowForm(false)\n    /*  calculadoraFormRef.current.instance.resetValues() */\n  }\n  const renderButtons = () => {\n    return renderButtonsComponent(`companyModuloData`, handleCancelClick)\n  }\n\n  const handleOptionChanged = (event: any) => {\n    if (event.name == 'selectedItemKeys') {\n      if (JSON.stringify(event.value) != JSON.stringify(event.previousValue)) {\n        if (isSuperAdministrador(userState!.user!)) {\n          setSelecteItemKeys(event.previousValue)\n          saveCompanyModulos(event.previousValue)\n        } else {\n          showToast(\n            'No se pueden actualizar los m√≥dulos contratados, por favor ponte en contacto con tu proovedor',\n            NotifyType.error,\n            3000,\n          )\n        }\n      }\n    }\n  }\n\n  const companyModuloslistRef: any = useRef(null)\n\n  if (!props.showForm) {\n    if (companyModuloslistRef.current.current != null) {\n      // companyModulosFormRef.current.instance.repaint()\n      //companyModuloslistRef.current.instance.repaintChangesOnly(true)\n      setSelecteItemKeys([])\n    }\n  }\n\n  return (\n    <>\n      {/* {isAllowed(PermisoType.AccesoExpedientes, userState!.user) ? ( */}\n      {true ? (\n        <>\n          <div\n            className={'content-block dx-card responsive-paddings'}\n            style={{\n              borderColor: '#f4f9ff',\n              borderWidth: '2px',\n              margin: '0.6%',\n            }}\n          >\n            <List\n              dataSource={dataSource}\n              ref={companyModuloslistRef}\n              height={'100%'}\n              showSelectionControls={true}\n              selectionMode={'all'}\n              selectAllMode={'allPages'}\n              disabled={isSuperAdministrador(userState!.user!) ? false : true}\n              selectedItemKeys={selectedItemKeys}\n              elementAttr={{ id: 'companyModulosList' }}\n              onOptionChanged={handleOptionChanged}\n            ></List>\n          </div>\n          {/*      <form\n            className={'legalForm'}\n            onSubmit={handleSubmit(onSubmit)}\n            style={{ width: '100%' }}\n          >\n            <Form\n              formData={formData.current}\n              disabled={loading}\n              ref={companyModulosFormRef}\n              labelLocation={isLarge ? 'left' : 'top'}\n              validationGroup=\"companyModulosData\"\n            >\n              {isSuperAdministrador(userState!.user!) ? (\n                <SimpleItem render={renderButtons} cssClass=\"alignBottom\" />\n              ) : null} \n            </Form>\n          </form> */}\n        </>\n      ) : (\n        <div>\n          <NotFound data={{ type: 1 }}></NotFound>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default ModulosList\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport Form, {\n  ButtonItem,\n  ButtonOptions,\n  SimpleItem,\n  Tab,\n  TabbedItem,\n  TabPanelOptions,\n} from 'devextreme-react/form'\n\n/* import './administracionTabsStyles.scss' */\nimport Box, { Item } from 'devextreme-react/box'\nimport { useHistory } from 'react-router-dom'\nimport CompanyFormPage from './CompanyFormPage'\nimport EnlacesFormComponent from '../components/enlacesFormComponent'\nimport CalculadoraFormComponent from '../components/calculadoraFormComponent'\nimport EmailFormComponent from '../components/emailFormComponent'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { clearEmail } from '../redux/Email/emailActions'\nimport {\n  addCalculadoraTranseferencias,\n  clearCalculadoraTranseferencias,\n} from '../redux/CalculadoraTransferencias/calculadoraTransferenciasActions'\nimport { addParentEnlaces, clearEnlace } from '../redux/Enlace/enlaceActions'\nimport {\n  addCompany,\n  addCompanyModulos,\n  clearCompanyModulos,\n} from '../redux/companiesActions'\nimport ModulosList from '../components/companyModuloComponent'\nimport { renderButtonsComponent } from '../../../../components/buttonsForm/renderButtons'\nimport { useScreenSize } from '../../../../utils/media-query'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { useForm } from 'react-hook-form'\nimport { postCompany, putCompany } from '../services/companiesServices'\nimport { refreshGrid } from '../../../../utils/sharedUitls'\nimport { getEnlaces } from '../services/enlacesService'\nimport { CompanyModel } from '../models/companyModel'\nimport { CalculadoraTransferenciaModel } from '../models/calculadoraTransferenciaModel'\nimport {\n  addHideLoader,\n  addShowLoader,\n} from '../../../../redux/actions/configActions'\nimport { custom } from 'devextreme/ui/dialog'\n\nfunction CompanyFormTabsPage(props: any): ReactElement {\n  const history = useHistory()\n  const forceUpdate = React.useReducer(() => ({}), {})[1] as () => void\n  const userState = useSelector((state: RootState) => state.user)\n  const company = useSelector((state: RootState) => state.company?.company)\n  const companyState = useSelector((state: RootState) => state.company)\n  const calculadoraState = useSelector(\n    (state: RootState) =>\n      state.calculadoraTransferencias?.calculadoraTransferencias,\n  )\n  const emailState = useSelector((state: RootState) => state.email?.email)\n  const enlaceState = useSelector((state: RootState) => state.enlace)\n  const isChangedState = useSelector(\n    (state: RootState) => state.sharedUtils.isChanged,\n  )\n  const { isLarge } = useScreenSize()\n  const [loading, setLoading] = useState(false)\n  const [pattern, setPattern] = useState('NIF')\n  const formData = useRef({})\n  const dispatch = useDispatch()\n  const { register, handleSubmit } = useForm()\n  const renderButtons = () => {\n    return renderButtonsComponent(`companyData`, handleCancelClick)\n  }\n  const handleCancelClick = () => {\n    let confirmDialog = custom({\n      title: '',\n      messageHtml:\n        '<b>Para conservar los cambios antes pulsar Guardar, Si continua perder√° todos los datos cambiados</b>',\n      buttons: [\n        {\n          text: 'Continuar',\n          onClick: (e) => {\n            dispatch(addCompany(new CompanyModel()))\n            props.setShowForm(false)\n            confirmDialog.hide()\n          },\n        },\n        {\n          text: 'Cancelar',\n          onClick: (e) => {\n            props.setShowForm(true)\n            confirmDialog.hide()\n          },\n        },\n      ],\n    })\n    if (isChangedState) {\n      confirmDialog.show().then((dialogResult: any) => {\n        console.log(dialogResult)\n      })\n    }\n\n    /*   dispatch(addCompany(new CompanyModel()))\n    dispatch(addCalculadoraTranseferencias(new CalculadoraTransferenciaModel())) */\n    dispatch(addCompanyModulos(undefined))\n\n    props.setShowForm(false)\n  }\n  const onSubmit = async (data: any) => {\n    setLoading(true)\n    dispatch(addShowLoader(true))\n    let result: boolean = false\n    if (!company?.Id) {\n      dispatch(addCompany({ ...company, Id: 0 }))\n    }\n    if (company?.Id) {\n      result = await putCompany(\n        userState!.user!,\n        company,\n        calculadoraState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    } else {\n      result = await postCompany(\n        userState!.user!,\n        company!,\n        calculadoraState,\n        enlaceState?.enlaces!,\n        companyState,\n        emailState,\n      )\n    }\n\n    if (result) {\n      setLoading(false)\n      refreshGrid(props, true)\n      props.setShowForm(false)\n      localStorage.setItem(\n        'parentCompanyModulos',\n        JSON.stringify(companyState?.companyModulos),\n      )\n      localStorage.setItem(\n        'parentEnlaces',\n        JSON.stringify(\n          dispatch(\n            addParentEnlaces(\n              await getEnlaces(\n                userState?.user!,\n                parseInt(userState?.user!.CompanyId!),\n              ),\n            ),\n          ).payload,\n        ),\n      )\n    } else {\n      setLoading(false)\n      dispatch(addHideLoader(false))\n    }\n    dispatch(addHideLoader(false))\n  }\n  const companyFormRef: any = useRef(null)\n  const companyTabRef: any = useRef(null)\n\n  useEffect(() => {\n    async function fetchData() {\n      console.log('RENDER()')\n    }\n    fetchData()\n  }, [])\n  if (!props.showForm) {\n    if (companyTabRef != null) {\n    }\n  }\n  function selectedIndexClosed() {\n    return props.showForm ? undefined : 1\n  }\n\n  return (\n    <React.Fragment>\n      <>\n        <div className={'content-block responsive-paddings'} id={props.id}>\n          <Box\n            align=\"center\"\n            crossAlign=\"stretch\"\n            style={{ alignItems: 'center' }}\n          >\n            <Item ratio=\"1\">\n              <form\n                className={'legalForm'}\n                onSubmit={handleSubmit(onSubmit)}\n                encType=\"multipart/form-data\"\n                style={{ width: '100%' }}\n              >\n                <Form ref={companyFormRef} id=\"tabs\">\n                  <TabbedItem\n                    ref={companyTabRef}\n                    //tabPanelOptions={{ deferRendering:true  }}\n                  >\n                    <Tab title=\"Datos principales\">\n                      <Box direction=\"col\" width=\"100%\">\n                        <Item ratio=\"0\" baseSize=\"120%\">\n                          <CompanyFormPage\n                            row={props.rowSelected}\n                            setShowForm={props.setShowForm}\n                            showForm={props.showForm}\n                            companyTabRef={companyFormRef}\n                          ></CompanyFormPage>\n                        </Item>\n                      </Box>\n                    </Tab>\n\n                    <Tab title=\"Configuraci√≥n Calculadora\">\n                      <Box direction=\"row\" width=\"100%\">\n                        <Item ratio=\"0\" baseSize=\"120%\">\n                          <CalculadoraFormComponent\n                            row={props.rowSelected}\n                            setShowForm={props.setShowForm}\n                            showForm={props.showForm}\n                            companyTabRef={companyFormRef}\n                          ></CalculadoraFormComponent>\n                        </Item>\n                      </Box>\n                    </Tab>\n                    <Tab title=\"Enlaces\">\n                      <Box direction=\"row\" width=\"100%\">\n                        <Item ratio=\"0\" baseSize=\"120%\">\n                          <EnlacesFormComponent\n                            row={props.rowSelected}\n                            setShowForm={props.setShowForm}\n                            showForm={props.showForm}\n                            companyTabRef={companyFormRef}\n                          ></EnlacesFormComponent>\n                        </Item>\n                      </Box>\n                    </Tab>\n\n                    <Tab title=\"Email\">\n                      <Box direction=\"row\" width=\"100%\">\n                        <Item ratio=\"0\" baseSize=\"120%\">\n                          <EmailFormComponent\n                            row={props.rowSelected}\n                            setShowForm={props.setShowForm}\n                            showForm={props.showForm}\n                            companyTabRef={companyTabRef}\n                          ></EmailFormComponent>\n                        </Item>\n                      </Box>\n                    </Tab>\n                    <Tab title=\"Modulos\">\n                      <Box direction=\"row\" width=\"100%\">\n                        <Item ratio=\"0\" baseSize=\"120%\">\n                          <ModulosList\n                            row={props.rowSelected}\n                            setShowForm={props.setShowForm}\n                            showForm={props.showForm}\n                            companyTabRef={companyFormRef}\n                          ></ModulosList>\n                        </Item>\n                      </Box>\n                    </Tab>\n                  </TabbedItem>\n\n                  <SimpleItem render={renderButtons}></SimpleItem>\n                </Form>\n              </form>\n            </Item>\n          </Box>\n        </div>\n      </>\n    </React.Fragment>\n  )\n}\nexport default CompanyFormTabsPage\n","import { useState, ReactElement, useEffect, useRef } from 'react'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Popup, ToolbarItem } from 'devextreme-react/popup'\nimport ScrollView from 'devextreme-react/scroll-view'\nimport { SharedGrid } from 'react-library-grid'\n\nimport { useHistory } from 'react-router-dom'\nimport { RootState } from '../../../../redux/combineReducers'\nimport {\n  deleteCompany,\n  getCompany,\n  getCompanyModulos,\n  getStructure,\n} from '../services/companiesServices'\nimport {\n  addHideLoader,\n  addShowLoader,\n} from '../../../../redux/actions/configActions'\nimport NotFound from '../../../../components/notFound/notFound'\nimport {\n  addCompany,\n  addCompanyModulos,\n  addParentCompany,\n} from '../redux/companiesActions'\nimport { CompanyModel } from '../models/companyModel'\nimport { confirm, custom } from 'devextreme/ui/dialog'\nimport { CompanyCampoDatoGridModel } from '../models/companyCampoDatoModel'\nimport CompanyFormTabsPage from './CompanyFormTabsPage'\nimport { addModulos } from '../../plantillasAdministracion/redux/modulo/moduloActions'\nimport { getModulos } from '../../plantillasAdministracion/services/moduloServices'\nimport { addCalculadoraTranseferencias } from '../redux/CalculadoraTransferencias/calculadoraTransferenciasActions'\nimport { getCalculadora } from '../services/calculadoraService'\nimport { addEnlaces } from '../redux/Enlace/enlaceActions'\nimport { getEnlaces } from '../services/enlacesService'\nimport { addEmail } from '../redux/Email/emailActions'\nimport { getEmail } from '../services/emailService'\nimport { CalculadoraTransferenciaModel } from '../models/calculadoraTransferenciaModel'\nimport { ConfiguracionEnvioEmailModel } from '../models/configuracionEnvioEmailModel'\nimport {\n  isRolAllowed,\n  isSuperAdministrador,\n  modulosClaims,\n} from '../../../../utils/allowAuthUtil'\nimport { modulos } from '../../../../utils/allowModuloUtil'\nimport { addDataFormChange } from '../../../../redux/actions/sharedUtilsActions'\n\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport { ButtonColumnModel, DataGridModel } from 'shared-models'\nimport { useScreenSize, useScreenSizeGrid } from '../../../../utils/media-query'\n// \"react-library-grid\": \"^3.1.5\",\nconst position = { of: 'popupCompany' }\nfunction CompaniesIndex(): ReactElement {\n  const dispatch = useDispatch()\n  const userState = useSelector((state: RootState) => state.user)\n  const [structure, setStructure] = useState(new CompanyCampoDatoGridModel())\n  const isChangedState = useSelector(\n    (state: RootState) => state.sharedUtils.isChanged,\n  )\n  const [rowFocused, setRowFocused] = useState('')\n  const [showForm, setShowForm] = useState(false)\n  const [rowSelected, setRow] = useState(0)\n  const history = useHistory()\n  const popupCompaynyRef = useRef(null)\n  const company = useSelector(\n    (state: RootState) => state.company?.parentCompany,\n  )\n\n\n  const { isXSmall, isSmall, isMedium, isLarge } = useScreenSize()\n  const gridheight = useScreenSizeGrid()\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        localStorage.removeItem('storage')\n        await dispatch(addModulos(await getModulos(userState!.user!)))\n        setStructure(await getStructure(userState!.user!))\n        await dispatch(addHideLoader(false))\n\n        dispatch(\n          addParentCompany(\n            await getCompany(\n              userState!.user!,\n              parseInt(userState!.user?.CompanyId!),\n            ),\n          ),\n        )\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetchData()\n  }, [])\n\n  const openCreatePopup = async () => {\n    if (isSuperAdministrador(userState!.user!)) {\n      dispatch(addCompany(new CompanyModel()))\n      dispatch(addEnlaces([]))\n      dispatch(\n        addCalculadoraTranseferencias(new CalculadoraTransferenciaModel()),\n      )\n      dispatch(addEmail(new ConfiguracionEnvioEmailModel()))\n      dispatch(addDataFormChange(false))\n      setShowForm(!showForm)\n    } else {\n      showToast(\n        'Solo los administradores propietarios de la aplicaci√≥n pueden crear nuevas gestor√≠as',\n        NotifyType.info,\n        5000,\n      )\n    }\n  }\n\n  function fillDataGrid(): DataGridModel {\n    const buttonColumnCreate: ButtonColumnModel = new ButtonColumnModel({\n      text: '',\n      icon: `edit`,\n      hint: 'Editar',\n      cellRender: async (row: any) => {\n        dispatch(addShowLoader(true))\n        setRow(row.data)\n        dispatch(addCompany(await getCompany(userState!.user!, row.data.Id)))\n        dispatch(\n          addCalculadoraTranseferencias(\n            await getCalculadora(userState?.user!, row.data.Id),\n          ),\n        )\n        dispatch(addEnlaces(await getEnlaces(userState!.user!, row.data.Id)))\n        dispatch(addEmail(await getEmail(userState!.user!, row.data.Id)))\n        dispatch(\n          addCompanyModulos(\n            await getCompanyModulos(userState!.user!, row.data.Id),\n          ),\n        )\n        dispatch(addDataFormChange(false))\n        setShowForm(!showForm)\n        dispatch(addShowLoader(false))\n      },\n    })\n    const buttonColumnDelete: ButtonColumnModel = new ButtonColumnModel({\n      text: '',\n      icon: `trash`,\n      hint: 'Eliminar',\n      cellRender: async (row: any) => {\n        setRow(row.data)\n        let confirmDialog = confirm(\n          '<i>¬øEst√° seguro de que quiere eliminar esta gestar√≠a por completo?</i>',\n          'Confirma los cambios',\n        )\n        confirmDialog.then(async (dialogResult) => {\n          if (dialogResult) {\n            await deleteCompany(userState!.user!, row.data.Id)\n            const refreshButton = document.getElementsByClassName(\n              'dx-icon dx-icon-refresh',\n            )[0] as HTMLElement\n            refreshButton.click()\n          } else {\n          }\n        })\n      },\n    })\n    let dataGridModel = new DataGridModel({\n      dataGridName: 'companyGridComponent',\n      height: gridheight,\n      rowFocused: rowFocused,\n      columns: structure.Campos,\n      ref: popupCompaynyRef,\n      openRow: ({}) => {},\n      openRowEnterKey: ({}) => {},\n      focusEventChanged: (e: any) => {\n        if (e.row) {\n          setRowFocused(e.row.key)\n        }\n      },\n      focusEventChanging: ({}) => {},\n      openCreatePopup: openCreatePopup,\n      user: userState!.user!,\n      url: `${process.env.REACT_APP_API_URL_CORE}/Companies/Grid/FilterGroup`,\n      urlAux: `${process.env.REACT_APP_API_URL_CORE}/Companies/Grid`,\n      buttonsColumns: [buttonColumnCreate, buttonColumnDelete],\n      filterRow: true,\n      filterPanel: true,\n      columnChooser: true,\n      headerFilter: false,\n      exportData: true,\n      showSearchPanel: true,\n      showToolbar: true,\n      history: history,\n      singularName: 'Compa√±ia',\n      pluralName: 'Compa√±ias',\n      pageName: 'Compa√±ia', //TODO: revisar esta propiedad sera la pagina que nos quiera abrir en history de create\n      openedPopup: showForm,\n    })\n\n    return dataGridModel\n  }\n\n  const preventClose = (data: any) => {\n    let confirmDialog = confirm(\n      '<i>¬øSalir sin guardar?</i>',\n      'Confirma los cambios',\n    )\n    confirmDialog.then((dialogResult) => {\n      if (dialogResult) {\n        setShowForm(false)\n      } else {\n        setShowForm(true)\n      }\n    })\n  }\n\n  return (\n    <>\n      {isRolAllowed(userState!.user!, modulos.ADMINISTRACION, [\n        modulosClaims.VIEW,\n      ]) ? (\n        <div\n          className={'content-block dx-card'}\n          style={{\n            borderColor: '#f4f9ff',\n            borderWidth: '2px',\n            margin: '0.3%',\n            padding: '0.16%',\n          }}\n        >\n          <h3 style={{ margin: 0, padding: 0 }}>Gestor√≠as</h3>\n          {structure?.Campos != undefined && structure?.Campos.length > 0 ? (\n           \n              \n                <SharedGrid dataGridModel={fillDataGrid()}></SharedGrid>\n            \n          \n          ) : null}\n          <Popup\n            visible={showForm}\n            onHiding={(e) => {\n              if (isChangedState) {\n                preventClose(e)\n              } else {\n                dispatch(addDataFormChange(false))\n              }\n              setShowForm(!showForm)\n            }}\n            dragEnabled={true}\n            closeOnOutsideClick={false}\n            showTitle={true}\n            title=\"Gestor√≠as\"\n            width={'95%'}\n            height={'95%'}\n            showCloseButton={false}\n          >\n              <ToolbarItem\n            widget=\"dxButton\"\n            toolbar=\"top\"\n            location=\"after\"\n            options={{ text: '',\n            icon:\"close\",\n            onClick: ()=>{\n              if(isChangedState){\n                \n                  const buttonAttributes={\n                    id: 'usuarioCancelButton',\n                    class: 'usuarioCancelButtonClass'\n                  }\n                  let confirmDialog = custom({\n                    title: '',\n                    \n                    messageHtml:\n                      '<b>Para conservar los cambios antes pulsar Guardar, Si continua perder√° todos los datos cambiados</b>',\n                    buttons: [\n                      {\n                        text: 'Continuar',\n                        onClick: (e) => {\n                          setShowForm(false)\n                          \n                          dispatch(addCompany(new CompanyModel()))\n                        \n                  \n                          confirmDialog.hide()\n                        },\n                      },\n                      {\n                        \n                        text: 'Cancelar',\n                        \n                        onClick: (e) => {\n                          confirmDialog.hide()\n                        },\n                      },\n                    ],\n                  })\n                  confirmDialog.show().then((dialogResult: any) => {\n                    console.log(dialogResult)\n                  })\n                } else {\n                  setShowForm(false)\n                 \n                  dispatch(addCompany(new CompanyModel()))\n                \n                 \n                }\n              }\n              }\n            }\n          />\n            <ScrollView width=\"100%\" height=\"100%\">\n              <CompanyFormTabsPage\n                row={rowSelected}\n                \n                setShowForm={setShowForm}\n                showForm={showForm}\n                id=\"popupCompany\"\n              ></CompanyFormTabsPage>\n            </ScrollView>\n          </Popup>\n        </div>\n      ) : (\n        <div\n          className={'content-block dx-card responsive-paddings'}\n          style={{ borderColor: '#f4f9ff', borderWidth: '2px', margin: '0.6%' }}\n        >\n          <NotFound data={{ type: 1 }}></NotFound>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default CompaniesIndex\n","import React, { ReactElement, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useClearCache } from 'react-clear-cache'\nimport { runInsights } from 'telemetry-portal'\nimport { RootState } from '../../../redux/combineReducers'\nimport { isAlreadyLoggedUser } from '../../../redux/utils/reduxUtils'\nimport CompaniesIndex from './pages/CompaniesPage'\n\nfunction CompaniesPage(): ReactElement {\n  const userState = useSelector((state: RootState) => state.user)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const { isLatestVersion, emptyCacheStorage } = useClearCache()\n  const [showUserLinks, setShowUserLinks] = useState(true)\n  const appInsights = runInsights()\n\n  const obtenerAncho = () => {}\n  if (userState!.isLoggedIn === false) {\n    isAlreadyLoggedUser('/expedientePage', history, dispatch)\n  }\n  // const usuarioState = useSelector((state: RootState) => state.user)\n  // if (usuarioState!.user?.Configuracion.Tema!) {\n  //   localStorage.setItem('dx-theme', usuarioState!.user?.Configuracion.Tema!)\n  // }\n\n  const handleHideShowUserLinks = () => {\n    setShowUserLinks(false)\n    localStorage.setItem('acceptedLinksUsers', 'true')\n  }\n\n  return (\n    <React.Fragment>\n      {/*\n       **Modificaci√≥n TODO Probar, Esto ya deberia de funcionar\n       *TODO cuando dejo esto activo en el menu o el login afectan a que no funcione el debugger de VS */}\n      {!isLatestVersion && emptyCacheStorage()}\n      {userState!.isLoggedIn === false ? history.push('/') : null}\n      {/* <ExpedienteTable></ExpedienteTable> */}\n      <CompaniesIndex></CompaniesIndex>\n      {/* //! feedback antiguo\n       <FeedBack></FeedBack> */}\n      {/* <UserLegalLinks></UserLegalLinks> */}\n      {obtenerAncho}\n    </React.Fragment>\n  )\n}\n\nexport default CompaniesPage\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('UsuarioModel')\nexport class UsuarioModel {\n  @JsonProperty('Id', Number, 0)\n  Id: Number = 0\n  @JsonProperty('NombreUsuario', String)\n  NombreUsuario: string = ''\n  @JsonProperty('IdSujeto', Number)\n  IdSujeto: Number = 0\n  @JsonProperty('Email', String)\n  Email: string = ''\n  // @JsonProperty('IdGrupoPlantillaCustom', Number)\n  // IdGrupoPlantillaCustom: Number = 0\n  @JsonProperty('IdIdioma', Number)\n  IdIdioma: Number = 0\n  @JsonProperty('IdTipoUsuario', Number)\n  IdTipoUsuario: Number = 0\n  @JsonProperty('IdIdioma', Number)\n  FechaUltimoAcceso: Number = 0\n  @JsonProperty('IdentificationNumber', String)\n  IdentificationNumber: string = ''\n  @JsonProperty('Nombre', String)\n  Nombre: string = ''\n  @JsonProperty('Apellidos', String)\n  Apellidos: string = ''\n  @JsonProperty('Telefono', String)\n  Telefono: string = ''\n  @JsonProperty('Enabled', Boolean)\n  Enabled: Boolean = false\n  @JsonProperty('AllowedChangePassword', Boolean)\n  AllowedChangePassword: Boolean = false\n  @JsonProperty('SujetoIndetification', String)\n  SujetoIndetification: string = ''\n  @JsonProperty('IdRole', Number, 0)\n  IdRole: Number = 0\n  @JsonProperty('Password', String)\n  Password: string = ''\n  @JsonProperty('RolesTipoCuenta', [])\n  RolesTipoCuenta: [] = []\n  @JsonProperty('IdPerfil', Number, 0)\n  IdPerfil: Number = 0\n}\n\n@JsonObject('UsuarioModelGrid')\nexport class UsuarioModelGrid {\n  @JsonProperty('Id', Number, 0)\n  Id: Number = 0\n  @JsonProperty('NombreUsuario', String)\n  NombreUsuario: string = ''\n  @JsonProperty('Email', String)\n  Email: string = ''\n  @JsonProperty('IdentificationNumber', String)\n  IdentificationNumber: string = ''\n  @JsonProperty('Nombre', String)\n  Nombre: string = ''\n  @JsonProperty('Apellidos', String)\n  Apellidos: string = ''\n  @JsonProperty('Telefono', String)\n  Telefono: string = ''\n}\n","import { JsonObject, JsonProperty } from 'json2typescript'\nimport { ColumnModel } from 'shared-models'\nimport { UsuarioModel, UsuarioModelGrid } from './usuarioModel'\n\n@JsonObject('UsuarioCampoDatoModel')\nexport class UsuarioCampoDatoModel {\n  @JsonProperty('Campos', [ColumnModel] || [])\n  Campos: ColumnModel[] = []\n  @JsonProperty('Datos', [UsuarioModelGrid] || [])\n  Datos: UsuarioModelGrid[] = []\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\n\nimport {\n  checkStatusCode,\n  customLog,\n  logType,\n  methodsEndPointType,\n} from 'shared-utils'\nimport { NotifyType, showToast } from '../../../../utils/sharedUitls'\nimport { UsuarioCampoDatoModel } from '../models/usuarioCampoDatoModel'\nimport { UsuarioModel } from '../models/usuarioModel'\nimport { authHeader } from 'shared-services'\nimport { UserModel } from 'shared-models'\n\nconst serviceName = 'UsuarioService'\n\nexport const getUsuarios = async (\n  user: UserModel,\n): Promise<UsuarioCampoDatoModel | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/usuario`\n    let usuario: UsuarioCampoDatoModel = new UsuarioCampoDatoModel()\n    let datos\n    await axios({\n      url: url,\n      method: methodsEndPointType.GET,\n      headers: authHeader(user),\n    })\n      .then((response) => {\n        usuario = jsonConvert.deserializeObject(\n          response.data,\n          UsuarioCampoDatoModel,\n        )\n      })\n      .catch((error) => {\n        customLog(\n          null,\n          logType.ERROR,\n          serviceName,\n          getUsuarios.name,\n          methodsEndPointType.GET,\n        )\n        showToast(\n          'No se han podido obtener los usuarios.',\n          NotifyType.error,\n          5000,\n        )\n        checkStatusCode(error.request.status)\n      })\n\n    return usuario\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\nexport async function getUsuario(\n  user: UserModel,\n  id: number,\n): Promise<UsuarioModel> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/usuario/${id}`\n\n  let usuario: UsuarioModel = new UsuarioModel()\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    headers: authHeader(user),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      usuario = jsonConvert.deserializeObject(\n        response.data.Datos[0],\n        UsuarioModel,\n      )\n      usuario.Enabled = usuario.Enabled ? false : true\n    })\n    .catch((error) => {\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getUsuario.name,\n        methodsEndPointType.GET,\n      )\n      showToast('No se ha podido obtener el usuario.', NotifyType.error, 5000)\n      checkStatusCode(error.request.status)\n    })\n\n  return usuario\n}\nexport async function getUsuarioByUserName(userName: string): Promise<string> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/usuario/GetInfoContacto/${userName}`\n\n  let contactInformation = ''\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    // Handleheaders: authHeader(user),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      contactInformation = response.data\n    })\n    .catch((error) => {\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getUsuario.name,\n        methodsEndPointType.GET,\n      )\n      showToast('No se ha podido obtener el usuario.', NotifyType.error, 5000)\n      checkStatusCode(error.request.status)\n    })\n\n  return contactInformation\n}\nexport async function postUsuario(\n  user: UserModel,\n  usuario: UsuarioModel,\n): Promise<UsuarioModel | undefined | Boolean | any | null> {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/usuario`\n\n    let usuarioData: UsuarioModel | null = new UsuarioModel()\n    if (usuario.RolesTipoCuenta.length > 0) {\n      usuario.IdRole = 0\n    }\n    usuario.Enabled = usuario.Enabled ? false : true\n\n    if (usuario.IdPerfil == 0) delete usuario.IdPerfil\n\n    await axios\n      .post(url, usuario, { headers: authHeader(user) })\n      .then((response) => {\n        checkStatusCode(response.status)\n        usuarioData = jsonConvert.deserializeObject(response.data, UsuarioModel)\n        customLog(\n          `Usuario created ${response.data.Id}`,\n          logType.INFO,\n          serviceName,\n          postUsuario.name,\n          methodsEndPointType.POST,\n        )\n        showToast('Usuario creado', NotifyType.success, 5000)\n      })\n      .catch((error) => {\n        showToast(error.response.data.Message, NotifyType.error, 5000)\n        customLog(\n          `Error create user  => ${error.message}`,\n          logType.ERROR,\n          serviceName,\n          postUsuario.name,\n          methodsEndPointType.PUT,\n        )\n        checkStatusCode(error.request.status)\n        usuarioData = null\n      })\n    // const response: Boolean = true\n    // const data: UsuarioModel = usuarioData\n    return usuarioData\n    //return [response, data]\n  } catch (error: any) {\n    showToast(error.response.data, NotifyType.error, 5000)\n    customLog(\n      `Error created user => ${error.message}`,\n      logType.ERROR,\n      serviceName,\n      postUsuario.name,\n      methodsEndPointType.POST,\n    )\n    showToast(error.response.data, NotifyType.error, 5000)\n  }\n}\nexport async function putUsuario(\n  user: UserModel,\n  usuario: UsuarioModel,\n): Promise<UsuarioModel | undefined | Boolean | any> {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/usuario`\n\n    let usuarioData: UsuarioModel | null = new UsuarioModel()\n    if (usuario.RolesTipoCuenta?.length > 0) {\n      usuario.IdRole = 0\n    }\n    usuario.Enabled = usuario.Enabled ? false : true\n    if (usuario.IdPerfil == 0) delete usuario.IdPerfil\n    await axios\n      .put(\n        url,\n        {\n          ...usuario,\n          IdPerfil: usuario.IdPerfil != 0 ? usuario.IdPerfil : null,\n        },\n        { headers: authHeader(user) },\n      )\n      .then((response) => {\n        checkStatusCode(response.status)\n        usuarioData = jsonConvert.deserializeObject(response.data, UsuarioModel)\n        customLog(\n          `User updated ${usuario.Id}`,\n          logType.INFO,\n          serviceName,\n          putUsuario.name,\n          methodsEndPointType.PUT,\n        )\n        showToast('Usuario editado', NotifyType.success, 5000)\n      })\n      .catch((error) => {\n        showToast(error.response.data.Message, NotifyType.error, 5000)\n        customLog(\n          `Error updated user  => ${error.message}`,\n          logType.ERROR,\n          serviceName,\n          putUsuario.name,\n          methodsEndPointType.PUT,\n        )\n        checkStatusCode(error.request.status)\n        usuarioData = null\n      })\n    // const response: Boolean = true\n    // const data: UsuarioModel = usuarioData\n    // return [response, data]\n    return usuarioData\n  } catch (error: any) {\n    showToast(error.response.data, NotifyType.error, 5000)\n  }\n}\nexport async function getStructure(\n  user: UserModel,\n): Promise<UsuarioCampoDatoModel> {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let url = `${process.env.REACT_APP_API_URL_CORE}/Usuario/Structure`\n\n  let usuario: UsuarioCampoDatoModel = new UsuarioCampoDatoModel()\n  await axios({\n    url: url,\n    method: methodsEndPointType.GET,\n    headers: authHeader(user),\n  })\n    .then((response) => {\n      checkStatusCode(response.status)\n      usuario = jsonConvert.deserializeObject(\n        response.data,\n        UsuarioCampoDatoModel,\n      )\n    })\n    .catch((error) => {\n      customLog(\n        null,\n        logType.ERROR,\n        serviceName,\n        getStructure.name,\n        methodsEndPointType.GET,\n      )\n      checkStatusCode(error.request.status)\n      return {}\n    })\n\n  return usuario\n}\n\nexport async function deleteUsuario(user: UserModel, idUsuario: number) {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Usuario/RelatedDeleteUser/${idUsuario}`\n    let url2 = `${process.env.REACT_APP_API_URL_CORE}/Usuario/${idUsuario}`\n    await axios.delete(url, { headers: authHeader(user!) }).then((response) => {\n      axios.delete(url2, { headers: authHeader(user!) }).then((response) => {\n        checkStatusCode(response.status)\n        customLog(\n          `usuario elminado`,\n          logType.INFO,\n          serviceName,\n          deleteUsuario.name,\n          methodsEndPointType.POST,\n        )\n        showToast('Usuario elminada', NotifyType.success, 5000)\n      })\n      checkStatusCode(response.status)\n      customLog(\n        `Usuario elminada`,\n        logType.INFO,\n        serviceName,\n        deleteUsuario.name,\n        methodsEndPointType.POST,\n      )\n      showToast('Usuario elminada', NotifyType.success, 5000)\n    })\n    return true\n  } catch (error: any) {\n    if (error.response.status == 400) {\n      showToast(error.response.data, NotifyType.error, 5000)\n    }\n    customLog(\n      `Error al eliminar Compa√±ia => ${error.response.data}`,\n      logType.ERROR,\n      serviceName,\n      deleteUsuario.name,\n      methodsEndPointType.POST,\n    )\n    checkStatusCode(error.request.status)\n    return false\n  }\n}\n\nexport function getMapperUsuario(usuarioData: any): UsuarioModel {\n  let jsonConvert: JsonConvert = new JsonConvert()\n  jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n  let usuario: UsuarioModel = jsonConvert.deserializeObject(\n    usuarioData,\n    UsuarioModel,\n  )\n  return usuario\n}\n","import { RoleModel } from '../../../../models/roleModel'\nimport { UsuarioCampoDatoModel } from '../models/usuarioCampoDatoModel'\nimport { UsuarioModel } from '../models/usuarioModel'\nimport {\n  ADD_USUARIOS,\n  ADD_USUARIO,\n  CLEAR_USUARIO,\n  UsuarioActionsTypes,\n  ADD_ROLES,\n} from './usuarioType'\n\nexport const addUsuarios = (\n  company: UsuarioCampoDatoModel | undefined,\n): UsuarioActionsTypes => ({\n  type: ADD_USUARIOS,\n  payload: company,\n})\nexport const addUsuario = (\n  usuario: Partial<UsuarioModel> | UsuarioModel | undefined,\n): UsuarioActionsTypes => ({\n  type: ADD_USUARIO,\n  payload: usuario,\n})\n\nexport const clearUsuario = (\n  usuario: UsuarioModel | undefined,\n): UsuarioActionsTypes => ({\n  type: CLEAR_USUARIO,\n  payload: usuario,\n})\nexport const addRoles = (\n  roles: RoleModel[] | undefined,\n): UsuarioActionsTypes => ({\n  type: ADD_ROLES,\n  payload: roles,\n})\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, TagBox } from 'devextreme-react'\nimport {\n  EmailRule,\n  GroupItem,\n  Label,\n  PatternRule,\n  RequiredRule,\n  SimpleItem,\n} from 'devextreme-react/form'\nimport { custom } from 'devextreme/ui/dialog'\nimport { useForm } from 'react-hook-form'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { useScreenSize } from '../../../../utils/media-query'\nimport { renderButtonsComponent } from '../../../../components/buttonsForm/renderButtons'\nimport { addUsuario, clearUsuario } from '../redux/usuarioActions'\nimport { postUsuario, putUsuario } from '../services/usuarioServices'\nimport { addDataFormChange } from '../../../../redux/actions/sharedUtilsActions'\nimport { refreshGrid, rolesName } from '../../../../utils/sharedUitls'\nimport {\n  isAdministrador,\n  isNormalUserByIdRole,\n  isSuperAdministrador,\n} from '../../../../utils/allowAuthUtil'\nimport { RoleModel } from '../../../../models/roleModel'\nimport { SujetoModel } from '../../../companyAdministracionPages/sujetoPage/models/sujetoModel'\nimport { UsuarioModel } from '../models/usuarioModel'\nimport { addSujetos } from '../../../companyAdministracionPages/sujetoPage/redux/sujetoActions'\nimport { getSujetos } from '../../../companyAdministracionPages/sujetoPage/service/sujetoService'\n\nfunction UsuarioFormPage(props: any): ReactElement {\n  const userState = useSelector((state: RootState) => state.user)\n  const usuarioState = useSelector((state: RootState) => state.usuario?.usuario)\n  const roleState = useSelector((state: RootState) => state.usuario?.roles)\n  const sujetoState = useSelector((state: RootState) => state.sujeto)\n  const isChangedState = useSelector(\n    (state: RootState) => state.sharedUtils.isChanged,\n  )\n  const { isXSmall, isLarge } = useScreenSize()\n  const [loading, setLoading] = useState(false)\n  const [isFirtsTimeShowForm, setFirtsTimeShowForm] = useState(false)\n  const [isSaveForm, setSaveForm] = useState(false)\n  const [updatedForm, setUpdatedForm] = useState(false)\n  const [isCuenta, setIsCuenta] = useState(\n    usuarioState?.IdRole == 99 ? true : false,\n  )\n\n  const perfilState = useSelector((state: RootState) => state.perfil)\n  const formData = useRef({})\n  const { register, handleSubmit } = useForm()\n  const dispatch = useDispatch()\n  //console.log(isCuenta)\n  const [showFormRolesPermisos, setShowFormRolesPermisos] = useState(false)\n  const diff = require('recursive-diff')\n  const [readOnlyTipoUsuario, setReadOnlyTipoUsuario] = useState(false)\n  useEffect(() => {\n    let isMounted = true\n    async function fetchData() {}\n    fetchData()\n    return () => {\n      isMounted = false\n    }\n  }, [props.showForm])\n\n  const onSubmit = async (formData: any) => {\n    if (usuarioState?.Id) {\n      await putUsuario(userState!.user!, usuarioState)\n      refreshGrid(props, true)\n      //dispatch(addSujetos(await getSujetos(userState!.user!)))\n      props.setShowForm(false)\n      setUpdatedForm(false)\n      dispatch(\n        addUsuario({\n          ...new UsuarioModel(),\n          IdRole: -1,\n          IdSujeto: sujetoState?.sujetos?.Datos[0].Id,\n          RolesTipoCuenta: [],\n        }),\n      )\n    } else {\n      const usuario = await postUsuario(userState!.user!, usuarioState!)\n      if (usuario) {\n        dispatch(\n          addUsuario({\n            ...new UsuarioModel(),\n            IdRole: -1,\n            IdSujeto: sujetoState?.sujetos?.Datos[0].Id,\n            RolesTipoCuenta: [],\n          }),\n        )\n        refreshGrid(props, true)\n\n        dispatch(addSujetos(await getSujetos(userState!.user!)))\n        setSaveForm(false)\n        setUpdatedForm(false)\n      } else {\n        setSaveForm(false)\n      }\n    }\n  }\n\n  const handleCancelClick = () => {\n    if (updatedForm) {\n      const buttonAttributes = {\n        id: 'usuarioCancelButton',\n        class: 'usuarioCancelButtonClass',\n      }\n      let confirmDialog = custom({\n        title: '',\n\n        messageHtml:\n          '<b>Para conservar los cambios antes pulsar Guardar, Si continua perder√° todos los datos cambiados</b>',\n        buttons: [\n          {\n            text: 'Continuar',\n            onClick: (e) => {\n              props.setShowForm(false)\n              setIsCuenta(false)\n              dispatch(clearUsuario(new UsuarioModel()))\n              setSaveForm(false)\n              setUpdatedForm(false)\n              confirmDialog.hide()\n            },\n          },\n          {\n            elementAttr: { buttonAttributes },\n            text: 'Cancelar',\n\n            onClick: (e) => {\n              confirmDialog.hide()\n            },\n          },\n        ],\n      })\n      confirmDialog.show().then((dialogResult: any) => {})\n    } else {\n      props.setShowForm(false)\n      setIsCuenta(false)\n      dispatch(clearUsuario(new UsuarioModel()))\n      setSaveForm(false)\n      setUpdatedForm(false)\n    }\n  }\n\n  const renderButtons = () => {\n    if (!props.showForm) {\n      usuarioFormRef.current.instance.resetValues()\n      if (usuarioState?.Id == 0) {\n        setIsCuenta(true)\n      } else {\n        setIsCuenta(false)\n      }\n      if (usuarioState?.IdTipoUsuario == 3) {\n        setIsCuenta(true)\n      }\n    }\n\n    return renderButtonsComponent(`usuarioData`, handleCancelClick)\n  }\n\n  const getSujetosForm = (\n    sujetosState: Partial<SujetoModel[]> | undefined,\n    readAll: Boolean = false,\n  ) => {\n    let sujetos: Partial<Partial<SujetoModel>[]> = []\n    if (sujetosState) {\n      if (readAll) {\n        sujetos?.push({ Id: 0, Nombre: `No selecci√≥n` })\n        sujetoState.sujetos?.Datos.map((x) => {\n          return sujetos?.push({ Id: x.Id, Nombre: x.Nombre })\n        })\n        return sujetos\n      } else {\n        if (isAdministrador(userState!.user!)) {\n          sujetos = sujetosState!.filter(\n            (x) => x?.Id == parseInt(userState!.user!.SujetoId),\n          )\n        } else return sujetoState.sujetos?.Datos\n      }\n\n      return sujetos.map((x) => {\n        return { Id: x?.Id, Nombre: x?.Nombre }\n      })\n    } else return []\n  }\n\n  //Select para los sujetos\n  const sujetoSelectedBoxOptions = {\n    items: getSujetosForm(sujetoState?.sujetos?.Datos, true),\n    value: usuarioState?.IdSujeto,\n    placeholder: 'Seleccione una compa√±√≠a',\n    displayExpr: 'Nombre',\n    valueExpr: 'Id',\n    onValueChanged: (event: any) => {\n      if (props.showForm) {\n        if (event.previousValue != event.value && event.previousValue != null) {\n          if (event.value != 0) {\n            handleUpdatedUsuario({\n              IdSujeto: event.value,\n              SujetoIndetification: '',\n            })\n          } else if (event.event) {\n            handleUpdatedUsuario({ IdSujeto: event.value })\n          }\n        }\n      }\n    },\n  }\n  const getSujetoList = () => {\n    let id: Number | undefined = 0\n    if (isAdministrador(userState!.user!)) {\n      id = parseInt(userState!.user!.SujetoId)\n    } else if (isSuperAdministrador(userState!.user!)) {\n      id = usuarioState?.IdSujeto\n    } else id = parseInt(userState!.user!.SujetoId)\n\n    if (id == 0) {\n      return sujetoState?.sujetos?.Datos[0].Id\n    } else return id\n  }\n  //Select para los gestorias\n  const gestoriasSelectedBoxOptions = {\n    items: getSujetosForm(sujetoState?.sujetos?.Datos),\n    value: getSujetoList(),\n    placeholder: 'Seleccione una compa√±√≠a',\n    displayExpr: 'Nombre',\n    valueExpr: 'Id',\n    readOnly: isAdministrador(userState!.user!) ? true : false,\n    disabled: usuarioState?.Id ? true : false, //deshabilito cuando hay usuario cargado\n    onValueChanged: (event: any) => {\n      if (props.showForm) {\n        if (event.previousValue != event.value && event.previousValue != null) {\n          if (event.value != 0) {\n            handleUpdatedUsuario({\n              IdSujeto: event.value,\n              SujetoIndetification: '',\n            })\n          } else if (event.event) {\n            handleUpdatedUsuario({\n              IdSujeto: sujetoState?.sujetos?.Datos[0].Id,\n            })\n          }\n        }\n      }\n    },\n  }\n  const getRolesTipoUsuario = (): RoleModel[] | undefined => {\n    let roles = roleState\n    let id: Number = 99\n    if (userState?.user!.role == rolesName.ADMINISTRADOR) {\n      roles = roles?.filter((x) => x.Name == rolesName.EMPLEADO)\n      roles?.push({ Id: id, Name: rolesName.CUENTA })\n    } else if (userState?.user!.role == rolesName.SUPERADMINISTRADOR) {\n      roles = roles?.filter((x) => x.Name == rolesName.ADMINISTRADOR)\n    }\n    if (roles) {\n      if (\n        usuarioState?.IdRole == 0 &&\n        usuarioState?.RolesTipoCuenta?.length == 0\n      ) {\n        if (!isSaveForm) {\n          dispatch(\n            addUsuario({\n              ...usuarioState,\n              IdRole: roles!.length > 0 ? roles![0].Id : 0,\n            }),\n          )\n        }\n      }\n    }\n    return roles\n  }\n\n  //Select para los roles\n  const roleSelectedBoxOptions = {\n    items: getRolesTipoUsuario(),\n    value: usuarioState?.IdRole,\n    placeholder: 'Seleccione un tipo',\n    displayExpr: 'Name',\n    valueExpr: 'Id',\n    readOnly: isNormalUserByIdRole(usuarioState!) == true ? false : true,\n    onValueChanged: (event: any) => {\n      if (event.previousValue != event.value && event.previousValue != null) {\n        if (event.value != null) {\n          const tipoUsuario = getRolesTipoUsuario()?.find(\n            (x) => x.Id == event.value,\n          )\n          if (tipoUsuario != null) {\n            if (tipoUsuario.Name == rolesName.CUENTA) {\n              setIsCuenta(false)\n            } else {\n              setIsCuenta(true)\n            }\n          }\n          handleUpdatedUsuario({\n            IdRole: event.value != null ? event.value : usuarioState?.IdRole,\n          })\n        }\n      }\n    },\n  }\n\n  //Select para los perfiles\n  const perfilSelectedBoxOptions = {\n    items: perfilState.perfiles,\n    value: usuarioState?.IdPerfil != null ? usuarioState?.IdPerfil : 0,\n    placeholder: 'Seleccione un perfil',\n    displayExpr: 'Nombre',\n    valueExpr: 'Id',\n    onValueChanged: (event: any) => {\n      if (event.previousValue != event.value && event.previousValue != null) {\n        if (event.value != null) {\n          handleUpdatedUsuario({\n            IdPerfil:\n              event.value != null ? event.value : usuarioState?.IdPerfil,\n          })\n        }\n      }\n    },\n  }\n\n  const getRolesTipoCuenta = (): RoleModel[] | undefined => {\n    let roles = roleState\n    roles = roles?.filter(\n      (x) =>\n        x.Name == rolesName.COLABORADOR ||\n        x.Name == rolesName.TRANSMITENTE ||\n        x.Name == rolesName.CLIENTE,\n    )\n    return roles\n  }\n\n  const getRolesLits = (id: Number): RoleModel | undefined => {\n    const role = roleState?.find((x) => x.Id == id)\n    return role\n  }\n\n  const roleCuentaSelectedBoxOptions = {\n    items: getRolesTipoCuenta(),\n    value: 0, //usuarioState?.IdRole,\n    placeholder: 'Seleccione un tipo',\n    displayExpr: 'Name',\n    valueExpr: 'Id',\n    disabled: isCuenta,\n    onValueChanged: (event: any) => {\n      if (event.previousValue != event.value && event.previousValue != null) {\n        if (event.value != null) {\n          handleUpdatedUsuario({\n            IdRole: event.value != null ? event.value : usuarioState?.IdRole,\n          })\n        }\n      }\n    },\n  }\n\n  const handleUpdatedUsuario = (property: any) => {\n    if (property['IdRole'] != undefined) {\n      if (property['IdRole'] == null) {\n        return\n      }\n    }\n    const usuario = {\n      ...usuarioState,\n      ...property,\n    }\n    if (usuario['IdRole'] == -1) {\n      dispatch(\n        addUsuario({\n          ...new UsuarioModel(),\n          IdRole: 0,\n          IdSujeto: 0,\n          RolesTipoCuenta: [],\n        }),\n      )\n      setUpdatedForm(true)\n    } else {\n      if (usuario.RolesTipoCuenta?.length > 0) {\n        if (usuario.IdRole != 99 && usuario.IdRole != 0) {\n          if (!isSaveForm || usuario.Id) {\n            dispatch(\n              addUsuario({\n                ...usuario,\n                RolesTipoCuenta: [],\n              }),\n            )\n            if (!usuario.Id || usuario.Id == 0) {\n              setUpdatedForm(true)\n            }\n          }\n        } else {\n          const id: Number = 99\n          let roles = roleState?.filter((x) => x.Name == rolesName.EMPLEADO)\n          roles?.push({ Id: id, Name: rolesName.CUENTA })\n          if (!isSaveForm || usuario.Id) {\n            dispatch(\n              addUsuario({\n                ...usuario,\n                IdRole: id,\n              }),\n            )\n            if (!usuario.Id || usuario.Id == 0) {\n              setUpdatedForm(true)\n            }\n          }\n        }\n      } else {\n        if (!isSaveForm || usuario.Id) {\n          dispatch(\n            addUsuario({\n              ...usuario,\n              IdSujeto:\n                usuario.IdSujeto == 0\n                  ? sujetoState?.sujetos?.Datos[0].Id\n                  : usuario.IdSujeto,\n            }),\n          )\n          setUpdatedForm(true)\n          // if (!usuario.Id || usuario.Id == 0) {\n          //   setUpdatedForm(true)\n          // }\n        }\n      }\n    }\n  }\n  const usuarioFormRef: any = useRef(null)\n  if (!props.showForm) {\n    if (usuarioFormRef != null) {\n      usuarioFormRef.current?.instance.resetValues()\n    }\n  }\n  return (\n    <>\n      <div className={'content-block  responsive-paddings'}>\n        <div className={'content-block  '}>\n          <form\n            className={'legalForm'}\n            onSubmit={handleSubmit(onSubmit)}\n            encType=\"multipart/form-data\"\n            style={{ width: '100%' }}\n            autoComplete={'new-password'}\n          >\n            {/* <div\n              style={{\n                display: 'none',\n              }}\n            >\n              <input type=\"password\" />\n            </div> */}\n            <Form\n              formData={formData.current}\n              disabled={loading}\n              ref={usuarioFormRef}\n              readOnly={false}\n              labelLocation={isLarge ? 'left' : 'top'}\n              showValidationSummary={false}\n              validationGroup=\"usuarioData\"\n              showColonAfterLabel={true}\n              // autoComplete={'off'}\n              //onFieldDataChanged={formFieldDataChanged}\n            >\n              <GroupItem colCount=\"2\">\n                <SimpleItem\n                  dataField=\"Login usuario\"\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    disabled: usuarioState?.Id ? true : false,\n                    stylingMode: 'filled',\n                    placeholder: 'Login usuario',\n                    mode: 'text',\n                    value: usuarioState?.NombreUsuario\n                      ? usuarioState?.NombreUsuario\n                      : '',\n                    onValueChanged: (event: any) => {\n                      //const user = userState?.user\n                      //if (userState!.user!.UserName != event.value) {\n                      if (event.event) {\n                        handleUpdatedUsuario({\n                          NombreUsuario: event.value.replace(/\\s+$/, ''),\n                        })\n                        if (!isChangedState) dispatch(addDataFormChange(true))\n                      }\n                      // } else {\n                      //   handleUpdatedUsuario({\n                      //     NombreUsuario: '',\n                      //   })\n                      //   if (!isFirtsTimeShowForm) {\n                      //     setFirtsTimeShowForm(true)\n                      //   } else {\n                      //     showToast(\n                      //       'Estas itentando insertar tu nombre de usuario actual',\n                      //       NotifyType.warning,\n                      //       5000,\n                      //     )\n                      //   }\n                      // }\n                    },\n                  }}\n                >\n                  {/* pattern=\"^[ A-Za-z0-9_@./#&+-]*$\" */}\n                  <PatternRule\n                    pattern=\"^[a-zA-Z√±√ë√°√©√≠√≥√∫√Å√â√ç√ì√ö\\s]*$\"\n                    message=\"Caracters no validos para el usuario\"\n                  />\n                  {usuarioState?.IdSujeto == 0 &&\n                  usuarioState?.SujetoIndetification == '' ? (\n                    <RequiredRule message=\"Caracters no validos para el usuario\" />\n                  ) : null}\n                  <RequiredRule message=\"Debes introducir un nombre de usuario,debe ser √∫nico\" />\n                </SimpleItem>\n                <SimpleItem\n                  dataField=\"NIF/NIE/CIF\"\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'N√∫mero de identificaci√≥n(NIF,NIE,CIF...)',\n                    mode: 'text',\n                    value: usuarioState?.IdentificationNumber\n                      ? usuarioState?.IdentificationNumber\n                      : '',\n                    onValueChanged: (event: any) => {\n                      if (event.event) {\n                        handleUpdatedUsuario({\n                          IdentificationNumber: event.value,\n                        })\n                        if (!isChangedState) dispatch(addDataFormChange(true))\n                      }\n                    },\n                  }}\n                >\n                  <PatternRule\n                    pattern=\"^([a-z]|[A-Z]|[0-9])[0-9]{7}([a-z]|[A-Z]|[0-9])$\"\n                    message=\"Debes introducir un numero de identificaci√≥n NIF/CIF/NIE\"\n                  />\n                  {usuarioState?.IdSujeto == 0 &&\n                  usuarioState?.SujetoIndetification == '' ? (\n                    <RequiredRule message=\"Debes introducir un numero de identificaci√≥n NIF/CIF/NIE\" />\n                  ) : null}\n                </SimpleItem>\n                <SimpleItem\n                  dataField={'Nombre'}\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Nombre',\n                    mode: 'text',\n                    value: usuarioState?.Nombre ? usuarioState?.Nombre : '',\n                    onValueChanged: (event: any) => {\n                      if (event.event) {\n                        handleUpdatedUsuario({ Nombre: event.value })\n                        if (!isChangedState) dispatch(addDataFormChange(true))\n                      }\n                    },\n                  }}\n                >\n                  <RequiredRule message=\"Debes introducir un Nombre\" />\n                </SimpleItem>\n                <SimpleItem\n                  dataField={'Apellidos'}\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Apellidos',\n                    mode: 'text',\n                    value: usuarioState?.Apellidos\n                      ? usuarioState?.Apellidos\n                      : '',\n                    onValueChanged: (event: any) => {\n                      if (event.event) {\n                        handleUpdatedUsuario({ Apellidos: event.value })\n                        if (!isChangedState) dispatch(addDataFormChange(true))\n                      }\n                    },\n                  }}\n                ></SimpleItem>\n                <SimpleItem\n                  dataField={'Email'}\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Email',\n                    mode: 'text',\n                    value: usuarioState?.Email ? usuarioState?.Email : '',\n                    onValueChanged: (event: any) => {\n                      if (event.event) {\n                        handleUpdatedUsuario({\n                          Email: event.value.replaceAll(/\\s/g, ''),\n                        })\n                        if (!isChangedState) dispatch(addDataFormChange(true))\n                      }\n                    },\n                  }}\n                >\n                  <RequiredRule message=\"El campo es requerido\" />\n                  <EmailRule message=\"Debe introducir un email con un formato correcto\" />\n                </SimpleItem>\n                <SimpleItem\n                  dataField={'Telefono'}\n                  editorType={'dxTextBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Telefono',\n                    mode: 'text',\n                    value: usuarioState?.Telefono ? usuarioState?.Telefono : '',\n                    onValueChanged: (event: any) => {\n                      if (event.event) {\n                        handleUpdatedUsuario({ Telefono: event.value })\n                        if (!isChangedState) dispatch(addDataFormChange(true))\n                      }\n                    },\n                  }}\n                ></SimpleItem>\n                {userState?.user?.UserName == usuarioState?.NombreUsuario ? (\n                  <SimpleItem\n                    dataField={'Tipo Usuarios'}\n                    editorType={'dxTextBox'}\n                    editorOptions={{\n                      readOnly: true,\n                      stylingMode: 'filled',\n                      mode: 'text',\n                      value: rolesName.ADMINISTRADOR,\n                    }}\n                  ></SimpleItem>\n                ) : (\n                  <SimpleItem\n                    dataField=\"Tipo Usuario\"\n                    editorType=\"dxSelectBox\"\n                    editorOptions={roleSelectedBoxOptions}\n                  ></SimpleItem>\n                )}\n                <SimpleItem\n                  dataField=\"Gestoria\"\n                  editorType=\"dxSelectBox\"\n                  editorOptions={gestoriasSelectedBoxOptions}\n                >\n                  <RequiredRule message=\"Debes elegir al menos una Compa√±√≠a\" />\n                </SimpleItem>\n                {isAdministrador(userState!.user!) ? (\n                  <SimpleItem\n                    dataField=\"Tipo Cuenta\"\n                    editorOptions={{\n                      readOnly:\n                        isNormalUserByIdRole(usuarioState!) == true\n                          ? false\n                          : true,\n                    }}\n                  >\n                    <TagBox\n                      readOnly={\n                        isNormalUserByIdRole(usuarioState!) == true\n                          ? false\n                          : true\n                      }\n                      dataSource={getRolesTipoCuenta()}\n                      value={usuarioState?.RolesTipoCuenta}\n                      displayExpr=\"Name\"\n                      valueExpr=\"Id\"\n                      disabled={isCuenta}\n                      onValueChanged={(e) => {\n                        handleUpdatedUsuario({ RolesTipoCuenta: e.value })\n                      }}\n                    />\n                  </SimpleItem>\n                ) : null}\n                {isAdministrador(userState!.user!) ? (\n                  <GroupItem colCount=\"2\">\n                    <SimpleItem\n                      dataField={'Relaci√≥n con'}\n                      editorType={'dxTextBox'}\n                      editorOptions={{\n                        readOnly:\n                          usuarioState?.NombreUsuario != '' &&\n                          usuarioState?.Id != 0\n                            ? true\n                            : usuarioState.IdRole != 99 &&\n                              usuarioState.IdRole != 0\n                            ? getRolesLits(usuarioState?.IdRole!)?.Name !=\n                                rolesName.EMPLEADO &&\n                              getRolesLits(usuarioState?.IdRole!)?.Name !=\n                                rolesName.ADMINISTRADOR &&\n                              getRolesLits(usuarioState?.IdRole!)?.Name !=\n                                rolesName.SUPERADMINISTRADOR\n                              ? false\n                              : true\n                            : true\n                            ? false\n                            : true,\n                        stylingMode: 'filled',\n                        placeholder: 'Numero Identifaci√≥n',\n                        mode: 'text',\n                        value: usuarioState?.SujetoIndetification\n                          ? usuarioState?.SujetoIndetification\n                          : '',\n                        onValueChanged: (event: any) => {\n                          if (event.event) {\n                            handleUpdatedUsuario({\n                              SujetoIndetification: event.value,\n                            })\n                            if (!isChangedState)\n                              dispatch(addDataFormChange(true))\n                          }\n                        },\n                      }}\n                    >\n                      {usuarioState?.IdSujeto == 0 &&\n                      usuarioState?.IdentificationNumber == '' ? (\n                        <RequiredRule message=\"Debes seleccionar relaci√≥n o insertar un NIF valido\" />\n                      ) : null}\n                    </SimpleItem>\n                    <SimpleItem\n                      editorType=\"dxSelectBox\"\n                      editorOptions={{\n                        ...sujetoSelectedBoxOptions,\n                        readOnly:\n                          usuarioState?.NombreUsuario != '' &&\n                          usuarioState?.Id != 0\n                            ? true\n                            : usuarioState.IdRole != 99 &&\n                              usuarioState.IdRole != 0\n                            ? getRolesLits(usuarioState?.IdRole!)?.Name !=\n                                rolesName.EMPLEADO &&\n                              getRolesLits(usuarioState?.IdRole!)?.Name !=\n                                rolesName.ADMINISTRADOR &&\n                              getRolesLits(usuarioState?.IdRole!)?.Name !=\n                                rolesName.SUPERADMINISTRADOR\n                              ? false\n                              : true\n                            : true\n                            ? false\n                            : true,\n\n                        placeholder: 'No Seleccionado',\n                      }}\n                    >\n                      {usuarioState?.SujetoIndetification == '' &&\n                      usuarioState?.IdentificationNumber == '' ? (\n                        <RequiredRule message=\"Debes elegir al menos una Compa√±√≠a\" />\n                      ) : null}\n                    </SimpleItem>\n                  </GroupItem>\n                ) : null}\n                <SimpleItem\n                  dataField={'Passwor'}\n                  editorType={'dxTextBox'}\n                  visible={false}\n                  editorOptions={{\n                    autocomplete: 'false',\n                    stylingMode: 'filled',\n                    mode: 'password',\n                  }}\n                >\n                  <RequiredRule message=\"El campo es requerido\" />\n                  <Label visible={true} text=\"Contrase√±a\" />\n                </SimpleItem>\n                {usuarioState?.Id == 0 ? (\n                  <SimpleItem\n                    dataField={'Passwor'}\n                    editorType={'dxTextBox'}\n                    editorOptions={{\n                      autocomplete: 'false',\n                      stylingMode: 'filled',\n                      mode: 'password',\n                      value: usuarioState?.Password,\n                      onValueChanged: (event: any) => {\n                        if (event.event) {\n                          if (event.event) {\n                            handleUpdatedUsuario({\n                              Password: event.value,\n                            })\n                            if (!isChangedState)\n                              dispatch(addDataFormChange(true))\n                          }\n                        }\n                      },\n                    }}\n                  >\n                    <RequiredRule message=\"El campo es requerido\" />\n                    <Label visible={true} text=\"Contrase√±a\" />\n                  </SimpleItem>\n                ) : null}\n              </GroupItem>\n              <GroupItem colCount=\"2\">\n                <SimpleItem\n                  dataField=\"Perfiles\"\n                  editorType=\"dxSelectBox\"\n                  editorOptions={perfilSelectedBoxOptions}\n                ></SimpleItem>\n                <SimpleItem\n                  dataField={'Bloqueado'}\n                  editorType={'dxCheckBox'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n\n                    value: usuarioState?.Enabled\n                      ? usuarioState?.Enabled\n                      : false,\n\n                    onValueChanged: (event: any) => {\n                      if (event.event) {\n                        handleUpdatedUsuario({\n                          Enabled: event.value,\n                        })\n                        if (!isChangedState) dispatch(addDataFormChange(true))\n                      }\n                    },\n                  }}\n                >\n                  <Label visible={true} text=\"Bloqueado\" />\n                </SimpleItem>\n              </GroupItem>\n\n              <SimpleItem render={renderButtons} cssClass=\"alignBottom\" />\n            </Form>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default UsuarioFormPage\n","import { JsonObject, JsonProperty } from 'json2typescript'\n\n@JsonObject('RoleModel')\nexport class RoleModel {\n  @JsonProperty('Id', Number)\n  Id: Number = 0\n  @JsonProperty('Name', String)\n  Name: String = ``\n}\n","import axios from 'axios'\nimport { JsonConvert, ValueCheckingMode } from 'json2typescript'\nimport {\n  logType,\n  methodsEndPointType,\n  customLog,\n  checkStatusCode,\n} from 'shared-utils'\nimport { UserModel } from 'shared-models'\nimport { RoleModel } from '../models/roleModel'\nimport { authHeader } from 'shared-services'\nimport { NotifyType, rolesName, showToast } from '../utils/sharedUitls'\n\nconst serviceName = 'authService'\n\nexport const getRoles = async (\n  user: UserModel,\n): Promise<RoleModel[] | undefined> => {\n  try {\n    let jsonConvert: JsonConvert = new JsonConvert()\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL\n    let url = `${process.env.REACT_APP_API_URL_CORE}/Role`\n    let roles: RoleModel[] = []\n    await axios({\n      url: url,\n      method: 'GET',\n      headers: authHeader(user!),\n    })\n      .then((response) => {\n        roles = jsonConvert.deserializeArray(response.data, RoleModel)\n      })\n      .catch((error) => {\n        customLog(\n          null,\n          logType.ERROR,\n          serviceName,\n          getRoles.name,\n          methodsEndPointType.GET,\n        )\n        showToast(\n          'No se han podido obtener los sujetos.',\n          NotifyType.error,\n          5000,\n        )\n      })\n    return roles\n  } catch (err) {\n    // Handle Error Here\n    console.error(err)\n  }\n}\n","import { useState, ReactElement, useEffect, useRef } from 'react'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Popup, ToolbarItem } from 'devextreme-react/popup'\nimport ScrollView from 'devextreme-react/scroll-view'\nimport { SharedGrid } from 'react-library-grid'\nimport { useHistory } from 'react-router-dom'\nimport { RootState } from '../../../../redux/combineReducers'\nimport {\n  getUsuario,\n  getStructure,\n  getMapperUsuario,\n  deleteUsuario,\n} from '../services/usuarioServices'\nimport {\n  addHideLoader,\n  addShowLoader,\n} from '../../../../redux/actions/configActions'\nimport NotFound from '../../../../components/notFound/notFound'\nimport { addRoles, addUsuario, clearUsuario } from '../redux/usuarioActions'\nimport { UsuarioCampoDatoModel } from '../models/usuarioCampoDatoModel'\nimport { UsuarioModel } from '../models/usuarioModel'\nimport UsuarioFormPage from './usuarioFormPage'\nimport { getSujetos } from '../../../companyAdministracionPages/sujetoPage/service/sujetoService'\nimport { addSujetos } from '../../../companyAdministracionPages/sujetoPage/redux/sujetoActions'\nimport { getRoles } from '../../../../services/roleService'\nimport {\n  isAdministrador,\n  isNormalUserByIdRole,\n  isRolAllowed,\n  isSuperAdministrador,\n  modulosClaims,\n} from '../../../../utils/allowAuthUtil'\nimport { modulos } from '../../../../utils/allowModuloUtil'\nimport { confirm, custom } from 'devextreme/ui/dialog'\nimport { ButtonColumnModel, DataGridModel } from 'shared-models'\nimport { addDataFormChange } from '../../../../redux/actions/sharedUtilsActions'\nimport { addPerfiles } from '../../../administracionPages/perfilPage/redux/perfilActions'\nimport { getPerfiles } from '../../../administracionPages/perfilPage/service/perfilService'\nimport {\n  NotifyType,\n  refreshGrid,\n  showToast,\n} from '../../../../utils/sharedUitls'\nimport { useScreenSize, useScreenSizeGrid } from '../../../../utils/media-query'\n\n\nfunction UsuarioPage(): ReactElement {\n  const dispatch = useDispatch()\n  const userState = useSelector((state: RootState) => state.user)\n  const sujetoState = useSelector((state: RootState) => state.sujeto)\n  const [structure, setStructure] = useState(new UsuarioCampoDatoModel())\n  const [rowFocused, setRowFocused] = useState('')\n  const [showForm, setShowForm] = useState(false)\n  const [showFormDatoUsuario, setShowFormDatoUsuario] = useState(false)\n  const [rowSelected, setRow] = useState(0)\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n  const gridRef: any = useRef(null)\n  const usuarioState = useSelector((state: RootState) => state.usuario?.usuario)\n  const isChangedState = useSelector(\n    (state: RootState) => state.sharedUtils.isChanged,\n  )\n  const perfilState = useSelector((state: RootState) => state.perfil)\n  const { isLarge, isMedium, isSmall, isXSmall } = useScreenSize()\n  const gridheight = useScreenSizeGrid()\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        localStorage.removeItem('storage')\n        setStructure(await getStructure(userState!.user!))\n        await dispatch(addSujetos(await getSujetos(userState!.user!)))\n        await dispatch(addRoles(await getRoles(userState!.user!)))\n        await dispatch(addPerfiles(await getPerfiles(userState!.user!)))\n        dispatch(addHideLoader(false))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetchData()\n  }, [])\n\n  const handleOpenCreatePopup = async () => {\n    if (\n      isAdministrador(userState!.user!) ||\n      isSuperAdministrador(userState!.user!)\n    ) {\n      dispatch(addSujetos(await getSujetos(userState!.user!)))\n      dispatch(\n        addUsuario({\n          ...new UsuarioModel(),\n          IdRole: 0,\n          IdSujeto: sujetoState?.sujetos?.Datos[0].Id,\n        }),\n      )\n      dispatch(addDataFormChange(false))\n      setShowForm(!showForm)\n    }\n  }\n\n  function fillDataGrid(): DataGridModel {\n    const buttonColumn: ButtonColumnModel = new ButtonColumnModel({\n      text: '',\n      icon: `edit`,\n      hint: 'Editar',\n      cellRender: async (row: any) => {\n        const usuario: UsuarioModel = getMapperUsuario(\n          await getUsuario(userState!.user!, row.data.Id),\n        )\n        // if (\n        //   isSuperAdministrador(userState!.user!) ||\n        //   (isAdministrador(userState!.user!) &&\n        //     userState!.user!.UserName == usuario.NombreUsuario)\n        // ) {\n        dispatch(addShowLoader(true))\n        setRow(row.data)\n        dispatch(addSujetos(await getSujetos(userState!.user!)))\n        if (usuario.RolesTipoCuenta == null) {\n          usuario.RolesTipoCuenta = []\n        }\n        dispatch(addUsuario(usuario))\n        dispatch(addDataFormChange(false))\n        setShowForm(!showForm)\n        dispatch(addShowLoader(false))\n        // } else {\n        //   showToast(\n        //     'Actualmente no se puede editar o eliminar un usuario Administrador',\n        //     NotifyType.info,\n        //     5000,\n        //   )\n        // }\n      },\n    })\n    const buttonColumn2: ButtonColumnModel = new ButtonColumnModel({\n      text: '',\n      icon: `trash`,\n      hint: 'Elimimar',\n      cellRender: async (row: any) => {\n        let confirmDialog = confirm(\n          '<i>¬øDesear eliminar este usuario?</i>',\n          'Confirma los cambios',\n        )\n        confirmDialog.then(async (dialogResult) => {\n          if (dialogResult) {\n            const usuario: UsuarioModel = getMapperUsuario(\n              await getUsuario(userState!.user!, row.data.Id),\n            )\n            if (\n              // isSuperAdministrador(userState!.user!) &&\n              userState!.user?.UserName != usuario.NombreUsuario\n            ) {\n              dispatch(addShowLoader(true))\n              await deleteUsuario(userState!.user!, row.data.Id)\n              setTimeout(() => {\n                refreshGrid(\n                  {\n                    setShowForm: setShowForm,\n                  },\n                  showForm,\n                )\n                dispatch(addShowLoader(false))\n              }, 2000)\n            } else {\n              showToast(\n                'No se pueden eliminar usuarios administradores,contacte con la empresa gestora de software',\n                NotifyType.info,\n                5000,\n              )\n            }\n          } else {\n          }\n        })\n      },\n    })\n    let dataGridModel = new DataGridModel({\n      dataGridName: 'usuarioGridComponent',\n      height:gridheight ,\n      ref: gridRef,\n      rowFocused: rowFocused,\n      columns: structure.Campos,\n      openRow: ({}) => {},\n      openRowEnterKey: ({}) => {},\n      focusEventChanged: (e: any) => {\n        if (e.row) {\n          setRowFocused(e.row.key)\n        }\n      },\n      focusEventChanging: ({}) => {},\n      openCreatePopup: handleOpenCreatePopup,\n      user: userState!.user!,\n      url: `${process.env.REACT_APP_API_URL_CORE}/Usuario/Grid/FilterGroup`,\n      urlAux: `${process.env.REACT_APP_API_URL_CORE}/Usuario/Grid`,\n      buttonsColumns: [buttonColumn, buttonColumn2],\n      filterRow: true,\n      filterPanel: true,\n      columnChooser: true,\n      headerFilter: false,\n      exportData: false,\n      showSearchPanel: true,\n      showToolbar: true,\n      history: history,\n      singularName: 'Usuario',\n      pluralName: 'Usuarios',\n      pageName: 'Usarios', //TODO: revisar esta propiedad sera la pagina que nos quiera abrir en history de create\n      openedPopup: showForm,\n    })\n\n    return dataGridModel\n  }\n  const preventClose = (data: any) => {\n    setLoading(true)\n\n    // let confirmDialog = confirm(\n    //   '<i>¬øSalir sin guardar?</i>',\n    //   'Confirma los cambios',\n    // )\n    // confirmDialog.then((dialogResult) => {\n    //   if (dialogResult) {\n    //     setShowForm(false)\n    //   } else {\n    //     setShowForm(true)\\\n    //     setLoading(false)\n    //   }\n    // })\n\n    setShowForm(true)\n    setLoading(false)\n  }\n  return (\n    <>\n      {isRolAllowed(userState!.user!, modulos.ADMINISTRACION, [\n        modulosClaims.VIEW,\n      ]) ? (\n        <div\n          className={'content-block dx-card'}\n          style={{\n            borderColor: '#f4f9ff',\n            borderWidth: '2px',\n            margin: '0.3%',\n            padding: '0.16%',\n          }}\n        >\n          <h3 style={{ margin: 0, padding: 0 }}>Usuarios</h3>\n          {structure?.Campos != undefined && structure?.Campos.length > 0 ? (\n            <div>\n           \n                  <SharedGrid\n                    key=\"dataGridUsuarios\"\n                    dataGridModel={fillDataGrid()}\n                  />\n             \n            </div>\n          ) : null}\n          <Popup\n            visible={showForm}\n             onHiding={(e) => {\n              if (isChangedState) {\n                preventClose(e)\n              } else {\n                dispatch(addDataFormChange(false))\n              }\n              dispatch(clearUsuario(new UsuarioModel()))\n              setShowForm(!showForm)\n            }} \n     \n           \n            dragEnabled={true}\n            closeOnOutsideClick={false}\n            showTitle={true}\n            title={`Usuario ${usuarioState?.Id?usuarioState?.Id:\"\"}`}\n            width={'90%'}\n            height={'90%'}\n            showCloseButton={false}\n          >\n            <ToolbarItem\n            widget=\"dxButton\"\n            toolbar=\"top\"\n            location=\"after\"\n            options={{ text: '',\n            icon:\"close\",\n            onClick: ()=>{\n              if(isChangedState){\n                \n                  const buttonAttributes={\n                    id: 'usuarioCancelButton',\n                    class: 'usuarioCancelButtonClass'\n                  }\n                  let confirmDialog = custom({\n                    title: '',\n                    \n                    messageHtml:\n                      '<b>Para conservar los cambios antes pulsar Guardar, Si continua perder√° todos los datos cambiados</b>',\n                    buttons: [\n                      {\n                        text: 'Continuar',\n                        onClick: (e) => {\n                          setShowForm(false)\n                          \n                          dispatch(clearUsuario(new UsuarioModel()))\n                        \n                  \n                          confirmDialog.hide()\n                        },\n                      },\n                      {\n                        \n                        text: 'Cancelar',\n                        \n                        onClick: (e) => {\n                          confirmDialog.hide()\n                        },\n                      },\n                    ],\n                  })\n                  confirmDialog.show().then((dialogResult: any) => {\n                    console.log(dialogResult)\n                  })\n                } else {\n                  setShowForm(false)\n                 \n                  dispatch(clearUsuario(new UsuarioModel()))\n                \n                 \n                }\n              }\n              }\n            }\n          />\n            <ScrollView width=\"100%\" height=\"100%\">\n              <UsuarioFormPage\n                row={rowSelected}\n                setShowForm={setShowForm}\n                showForm={showForm}\n              ></UsuarioFormPage>\n            </ScrollView>\n          </Popup>\n        </div>\n      ) : (\n        <div\n          className={'content-block dx-card responsive-paddings'}\n          style={{ borderColor: '#f4f9ff', borderWidth: '2px', margin: '0.6%' }}\n        >\n          <NotFound data={{ type: 1 }}></NotFound>\n        </div>\n      )}\n      {}\n    </>\n  )\n}\n\nexport default UsuarioPage\n\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form } from 'devextreme-react'\nimport { GroupItem, RequiredRule, SimpleItem } from 'devextreme-react/form'\nimport { confirm, custom } from 'devextreme/ui/dialog'\nimport { useForm } from 'react-hook-form'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { useScreenSize } from '../../../../utils/media-query'\nimport { postPerfil, putPerfil } from '../service/perfilService'\nimport { addPerfil } from '../redux/perfilActions'\nimport { renderButtonsComponent } from '../../../../components/buttonsForm/renderButtons'\n\nfunction PerfilFormPage(props: any): ReactElement {\n  const userState = useSelector((state: RootState) => state.user)\n  const perfilState = useSelector((state: RootState) => state.perfil)\n  const { isXSmall, isLarge } = useScreenSize()\n  const [loading, setLoading] = useState(false)\n  const formData = useRef({})\n  const { register, handleSubmit } = useForm()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    async function fetchData() {}\n    fetchData()\n  }, [])\n\n  const onSubmit = async (data: any) => {\n    setLoading(true)\n\n    let result: boolean = false\n    if (!perfilState?.perfil?.Id) {\n      dispatch(addPerfil({ ...perfilState, Id: 0 }))\n    }\n\n    if (perfilState?.perfil?.Id) {\n      result = await putPerfil(userState!.user!, perfilState.perfil)\n    } else {\n      result = await postPerfil(userState!.user!, perfilState.perfil!)\n    }\n\n    if (result) {\n      setLoading(false)\n      const refreshButton = document.getElementsByClassName(\n        'dx-icon dx-icon-refresh',\n      )[0] as HTMLElement\n      refreshButton.click()\n      props.setShowForm(false)\n    } else {\n      setLoading(false)\n    }\n  }\n\n  const handleCancelClick = () => {\n    // let confirmDialog = custom({\n    //   title: '',\n    //   messageHtml:\n    //     '<b>Para conservar los cambios antes pulsar Guardar, Si continua perder√° todos los datos cambiados</b>',\n    //   buttons: [\n    //     {\n    //       text: 'Continuar',\n    //       onClick: (e) => {\n    //         props.setShowForm(false)\n    //         confirmDialog.hide()\n    //       },\n    //     },\n    //     {\n    //       text: 'Cancelar',\n    //       onClick: (e) => {\n    //         confirmDialog.hide()\n    //       },\n    //     },\n    //   ],\n    // })\n    // confirmDialog.show().then((dialogResult: any) => {\n    //   console.log(dialogResult)\n    // })\n    props.setShowForm(false)\n  }\n\n  const renderButtons = () => {\n    if (!props.showForm) {\n      perfilFormRef.current.instance.resetValues()\n    }\n    return renderButtonsComponent(`perfilData`, handleCancelClick)\n  }\n\n  const handleUpdatedPerfil = (property: any) => {\n    const perfil = perfilState.perfil\n    dispatch(\n      addPerfil({\n        ...perfil,\n        ...property,\n      }),\n    )\n  }\n  const perfilFormRef: any = useRef(null)\n  return (\n    <>\n      <div className={'content-block  responsive-paddings'}>\n        <div className={'content-block  '}>\n          <form\n            className={'legalForm'}\n            onSubmit={handleSubmit(onSubmit)}\n            encType=\"multipart/form-data\"\n            style={{ width: '100%' }}\n          >\n            <Form\n              ref={perfilFormRef}\n              formData={formData.current}\n              disabled={loading}\n              readOnly={false}\n              labelLocation={isLarge ? 'left' : 'top'}\n              showValidationSummary={false}\n              validationGroup=\"perfilData\"\n              showColonAfterLabel={true}\n            >\n              <GroupItem colCount=\"2\">\n                <SimpleItem\n                  dataField=\"Nombre\"\n                  helpText=\"\"\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Nombre',\n                    mode: 'text',\n                    value: perfilState?.perfil?.Nombre,\n                    onValueChanged: (event: any) => {\n                      if (event.event) {\n                        handleUpdatedPerfil({ Nombre: event.value })\n                      }\n                    },\n                  }}\n                >\n                  <RequiredRule message=\"Debes introducir un nombre\" />\n                </SimpleItem>\n                <SimpleItem\n                  dataField={'Descripci√≥n'}\n                  editorType={'dxTextArea'}\n                  editorOptions={{\n                    stylingMode: 'filled',\n                    placeholder: 'Descripci√≥n',\n                    mode: 'text',\n                    value: perfilState?.perfil?.Descripcion\n                      ? perfilState.perfil.Descripcion\n                      : null,\n                    onValueChanged: (event: any) => {\n                      if (event.event) {\n                        handleUpdatedPerfil({ Descripcion: event.value })\n                      }\n                    },\n                  }}\n                ></SimpleItem>\n              </GroupItem>\n              <SimpleItem render={renderButtons} cssClass=\"alignBottom\" />\n            </Form>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default PerfilFormPage\n","import { useState, ReactElement, useEffect, useRef } from 'react'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport ScrollView from 'devextreme-react/scroll-view'\nimport { SharedGrid } from 'react-library-grid'\nimport { RootState } from '../../../../redux/combineReducers'\nimport { addHideLoader } from '../../../../redux/actions/configActions'\nimport NotFound from '../../../../components/notFound/notFound'\nimport { getStructure, getPerfil, getPerfiles } from '../service/perfilService'\nimport { addPerfil } from '../redux/perfilActions'\nimport { ButtonColumnModel, DataGridModel } from 'shared-models'\nimport { Popup } from 'devextreme-react'\nimport PerfilFormPage from './perfilFormPage'\nimport { PerfilModel } from '../models/perfilModel'\nimport { useHistory } from 'react-router-dom'\nimport { PerfilesCampoDatoModel } from '../models/perfilCampoDatoModel'\nimport {\n  addDataFormChange,\n  isOpenPopup,\n} from '../../../../redux/actions/sharedUtilsActions'\nimport {\n  isAdministrador,\n  isSuperAdministrador,\n} from '../../../../utils/allowAuthUtil'\nimport {\n  useScreenSize,\n} from '../../../../utils/media-query'\nimport { GridHeight } from '../../../../utils/sharedUitls'\n\nfunction PerfilPage(): ReactElement {\n  const dispatch = useDispatch()\n  const [structure, setStructure] = useState(new PerfilesCampoDatoModel())\n  const userState = useSelector((state: RootState) => state.user)\n  const perfilState = useSelector((state: RootState) => state.perfil)\n  const [rowFocused, setRowFocused] = useState('')\n  const [showForm, setShowForm] = useState(false)\n  const [rowSelected, setRow] = useState(0)\n  const history = useHistory()\n  const popupPerfilsRef = useRef(null)\n  const { isLarge, isMedium, isSmall, isXSmall } = useScreenSize()\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setStructure(await getStructure(userState!.user!))\n        dispatch(addHideLoader(false))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetchData()\n  }, [])\n\n  const handleOpenCreatePopup = async () => {\n    if (\n      isAdministrador(userState!.user!) ||\n      isSuperAdministrador(userState!.user!)\n    ) {\n      dispatch(addPerfil(new PerfilModel()))\n      dispatch(addDataFormChange(false))\n      setShowForm(!showForm)\n      dispatch(isOpenPopup(!showForm, popupPerfilsRef))\n    }\n  }\n\n  const dataGridPerfilsRef = useRef(null)\n  function fillDataGrid(): DataGridModel {\n    const buttonColumn: ButtonColumnModel = new ButtonColumnModel({\n      icon: 'edit',\n      text: '',\n      hint: 'Editar',\n      cellRender: async (row: any) => {\n        setRow(row.data)\n        setShowForm(!showForm)\n        const perfil: PerfilModel = await getPerfil(\n          userState!.user!,\n          row.data.Id,\n        )\n        dispatch(addPerfil(await getPerfil(userState!.user!, row.data.Id)))\n      },\n    })\n    let gridheight = '600;'\n    gridheight = isXSmall ? '300' : '600'\n    gridheight = isSmall ? '400' : '600'\n    gridheight = isMedium ? '600' : '600'\n    gridheight = isLarge ? '700' : '600'\n    let dataGridModel = new DataGridModel({\n      dataGridName: 'perfilGridComponent',\n      height: gridheight,\n      ref: dataGridPerfilsRef,\n      rowFocused: rowFocused,\n      columns: structure.Campos,\n      openRow: ({}) => {},\n      openRowEnterKey: ({}) => {},\n      focusEventChanged: (e: any) => {\n        if (e.row) {\n          setRowFocused(e.row.key)\n        }\n      },\n      focusEventChanging: ({}) => {},\n      openCreatePopup: handleOpenCreatePopup,\n      user: userState!.user!,\n      url: `${process.env.REACT_APP_API_URL_CORE}/Perfil/Grid/FilterGroup`,\n      urlAux: `${process.env.REACT_APP_API_URL_CORE}/Perfil/Grid`,\n      buttonsColumns: [buttonColumn],\n      filterRow: true,\n      filterPanel: true,\n      columnChooser: true,\n      headerFilter: false,\n      exportData: false,\n      showSearchPanel: true,\n      showToolbar: true,\n      history: history,\n      singularName: 'Perfil',\n      pluralName: 'Perfiles',\n      pageName: 'Perfil',\n      openedPopup: showForm,\n    })\n\n    return dataGridModel\n  }\n\n  return (\n    <>\n      {/* {isAllowed(PermisoType.AccesoAdministracion, userState!.user) ? ( */}\n      {true ? (\n        <div\n          className={'content-block dx-card'}\n          style={{\n            borderColor: '#f4f9ff',\n            borderWidth: '2px',\n            margin: '0.3%',\n            padding: '0.16%',\n          }}\n        >\n          <h3 style={{ margin: 0, padding: 0 }}>Perfiles</h3>\n          {structure?.Campos != undefined && structure?.Campos.length > 0 ? (\n            <ScrollView direction=\"vertical\">\n              <div style={{ height: '75vh' }}>\n                <SharedGrid dataGridModel={fillDataGrid()} />\n              </div>\n            </ScrollView>\n          ) : null}\n          <Popup\n            visible={showForm}\n            ref={popupPerfilsRef}\n            onHiding={({}) => {\n              setShowForm(!showForm)\n              dispatch(isOpenPopup(false, popupPerfilsRef))\n            }}\n            dragEnabled={true}\n            closeOnOutsideClick={false}\n            showTitle={true}\n            title=\"Formulario Perfil\"\n            width={'60%'}\n            height={'50%'}\n          >\n            <PerfilFormPage\n              row={rowSelected}\n              setShowForm={setShowForm}\n              showForm={showForm}\n            ></PerfilFormPage>\n          </Popup>\n        </div>\n      ) : (\n        <div className={'content-block dx-card'}>\n          <NotFound data={{ type: 1 }}></NotFound>\n        </div>\n      )}\n      {}\n    </>\n  )\n}\n\nexport default PerfilPage\n","import LoaderComponent from './components/loader/loaderComponent'\nimport { withNavigationWatcher } from './contexts/navigation'\nimport AccesoSoloCalculadoraPage from './pages/accesoSoloCalculadoraPage/accesoSoloCalculadoraPage'\nimport AdministracionTabsPage from './pages/administracionPages/AdministracionTabsPage'\nimport ExpedientePage from './pages/expedientePage/expedientePage'\nimport LoginPage from './pages/loginPage/login'\nimport CambiarContrase√±aPage from './pages/loginPage/components/cambiarContrase√±a'\nimport tasksPage from './components/tasks/tasks'\nimport ProfilePage from './pages/profile/profile'\nimport CompaniesAdministracionComponent from './pages/companyAdministracionPages/companyPage/pages/companiesAdministracionComponent'\nimport PlantillasPage from './pages/companyAdministracionPages/plantillasAdministracion/Index'\nimport SujetoPage from './pages/companyAdministracionPages/sujetoPage/Index'\nimport SujetoFormPage from './pages/companyAdministracionPages/sujetoPage/pages/sujetoFormPage'\nimport CompanyFormPage from './pages/companyAdministracionPages/companyPage/pages/CompanyFormPage'\nimport CompaniesPage from './pages/companyAdministracionPages/companyPage'\nimport UsuarioPage from './pages/usuarioAdministracionPages/usuarioPage/pages/usuariosPage'\nimport PerfilPage from './pages/administracionPages/perfilPage/pages/perfilPage'\n\n//import { HomePage, TasksPage, ProfilePage } from './pages';\n\nconst routes = [\n  {\n    path: '/',\n    component: LoginPage,\n  },\n  {\n    path: '/expedientePage',\n    component: ExpedientePage,\n  },\n  {\n    path: '/login',\n    component: LoginPage,\n  },\n  {\n    path: '/loader',\n    component: LoaderComponent,\n  },\n  {\n    path: '/CambiarContrase√±a',\n    component: CambiarContrase√±aPage,\n  },\n  {\n    path: '/AccesoSoloCalculadoraPage',\n    component: AccesoSoloCalculadoraPage,\n  },\n  {\n    path: '/Administracion',\n    component: AdministracionTabsPage,\n  },\n  {\n    path: '/createCompany',\n    component: CompaniesAdministracionComponent,\n  },\n  {\n    path: '/editCompany',\n    component: CompanyFormPage,\n  },\n  {\n    path: '/Companies',\n    component: CompaniesPage,\n  },\n  {\n    path: '/plantillas',\n    component: PlantillasPage,\n  },\n\n  {\n    path: '/tasks',\n    component: tasksPage,\n  },\n  {\n    path: '/profile',\n    component: ProfilePage,\n  },\n  {\n    path: '/sujetos',\n    component: SujetoPage,\n  },\n  {\n    path: '/sujetoForm',\n    component: SujetoFormPage,\n  },\n  {\n    path: '/usuarios',\n    component: UsuarioPage,\n  },\n  {\n    path: '/perfiles',\n    component: PerfilPage,\n  },\n]\n\nexport default routes.map((route) => {\n  return {\n    ...route,\n    component: withNavigationWatcher(route.component),\n  }\n})\n","import React, { useEffect, useState } from 'react'\nimport { Switch, Route, Redirect, Router } from 'react-router-dom'\nimport appInfo from './app-info'\nimport routes from './app-routes'\nimport SideNavbarInner from './components/side-nav-inner-toolbar/side-nav-inner-toolbar'\nimport { Footer } from './components'\nimport { useSelector } from 'react-redux'\nimport { RootState } from './redux/combineReducers'\nimport Box, { Item } from 'devextreme-react/box'\nimport { LoadPanel } from 'devextreme-react'\nimport FeedBack from './components/feedBack/feebackComponent'\n\nconst Content = () => {\n  const configState = useSelector((state: RootState) => state.config)\n  const userState = useSelector((state: RootState) => state.user)\n  const enlaceState = useSelector((state: RootState) => state.enlace)\n\n  const EnlaceLegal = JSON.parse(localStorage.getItem('parentEnlaces')!)[0]\n  const EnlacePrivcacidadCookies = JSON.parse(\n    localStorage.getItem('parentEnlaces')!,\n  )[1]\n  const EnlaceRGPD = JSON.parse(localStorage.getItem('parentEnlaces')!)[2]\n\n  const [legal, setLegal]: any = useState()\n  const [cookies, setCookies]: any = useState()\n  const [RGPD, setRGPD]: any = useState()\n  useEffect(() => {\n    if (\n      enlaceState?.enlace?.CodigoTipoEnlace == 'Legal' &&\n      enlaceState.enlace.EnlaceValue != undefined\n    ) {\n      setLegal(enlaceState.enlace.EnlaceValue)\n    } else {\n      setLegal(EnlaceLegal != undefined ? EnlaceLegal.EnlaceValue : '')\n    }\n    if (\n      enlaceState?.enlace?.CodigoTipoEnlace == 'Cookies' &&\n      enlaceState.enlace.EnlaceValue != undefined\n    ) {\n      setCookies(enlaceState.enlace.EnlaceValue)\n    } else {\n      setCookies(\n        EnlacePrivcacidadCookies != undefined\n          ? EnlacePrivcacidadCookies.EnlaceValue\n          : '',\n      )\n    }\n    if (\n      enlaceState?.enlace?.CodigoTipoEnlace == 'RGPD' &&\n      enlaceState.enlace.EnlaceValue != undefined\n    ) {\n      setRGPD(enlaceState.enlace.EnlaceValue)\n    } else {\n      setRGPD(EnlaceRGPD != undefined ? EnlaceRGPD.EnlaceValue : '')\n    }\n  }, [enlaceState?.enlace, EnlaceLegal, EnlacePrivcacidadCookies, EnlaceRGPD]) // Solo se vuelve a ejecutar si count cambia\n\n  return (\n    <div>\n      <LoadPanel\n        shadingColor=\"rgba(192,192,192,0.9)\"\n        position=\"center\"\n        // onHiding={ocultarLoader}\n        visible={configState.visibleLoader}\n        showIndicator={true}\n        shading={true}\n        showPane={true}\n        closeOnOutsideClick={false}\n      />\n      <SideNavbarInner title={appInfo.title}>\n        <Switch>\n          {routes.map(({ path, component }) => (\n            <Route exact key={path} path={path} component={component} />\n          ))}\n          <Redirect to={'/expedientePage'} />\n        </Switch>\n\n        <Footer>\n          <Box direction=\"row\" width=\"100%\" style={{ textAlign: 'center' }}>\n            <Item ratio={1}>\n              <div>\n                {\n                  <a href={cookies} target=\"_blank\">\n                    Pol√≠tica de privacidad y cookies\n                  </a>\n                }\n              </div>\n            </Item>\n            <Item ratio={1}>\n              <div>\n                {\n                  <a href={legal} target=\"__blank\">\n                    Legal\n                  </a>\n                }\n              </div>\n            </Item>\n            <Item ratio={1}>\n              <div>\n                <a href={RGPD} target=\"_blank\">\n                  Reglamento General de Protecci√≥n de Datos\n                </a>\n              </div>\n            </Item>\n          </Box>\n\n          {}\n          {/*  Copyright ¬© 2011-{new Date().getFullYear()} {appInfo.title} Inc.\n        <br />\n        All trademarks or registered trademarks are property of their respective\n        owners. */}\n        </Footer>\n      </SideNavbarInner>\n      <FeedBack\n        user={userState?.user}\n        isLoggedIn={userState?.isLoggedIn}\n      ></FeedBack>\n    </div>\n  )\n}\nexport default Content\n","import React from \"react\";\nimport ScrollView from \"devextreme-react/scroll-view\";\nimport \"./single-card.scss\";\n\nexport default ({\n  title,\n  description,\n  children,\n}: {\n  title: any;\n  description: any;\n  children: any;\n}) => (\n  <ScrollView\n    height={\"100%\"}\n    width={\"100%\"}\n    className={\"with-footer single-card\"}\n  >\n    <div className={\"dx-card content\"}>\n      <div className={\"header\"}>\n        <div className={\"title\"}>{title}</div>\n        <div className={\"description\"}>{description}</div>\n      </div>\n      {children}\n    </div>\n  </ScrollView>\n);\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport NotFound from './components/notFound/notFound'\nimport { SingleCard } from './layouts'\nimport ChangePassword from './pages/loginPage/components/cambiarContrase√±a'\nimport Login from './pages/loginPage/login'\n/* import {\n  LoginForm,\n  ResetPasswordForm,\n  ChangePasswordForm,\n  CreateAccountForm,\n} from \"./components\";  */\n\nexport default function UnauthenticatedContent() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/login\">\n          {/*  <SingleCard title=\"\" description=\"\"> */}\n          <Login />\n          {/* </SingleCard> */}\n        </Route>\n        <Route exact path=\"/\">\n          {/*  <SingleCard title=\"\" description=\"\"> */}\n          <Login />\n          {/* </SingleCard> */}\n        </Route>\n\n        {/*  <Route exact path=\"/create-account\">\n        <SingleCard title=\"Sign Up\" description=\"\">\n          <Login />\n        </SingleCard>\n      </Route> */}\n        <Route exact path=\"/ResetPassword\">\n          <SingleCard title=\"\" description=\"\">\n            <ChangePassword />\n          </SingleCard>\n        </Route>\n        {/*   <Route exact path=\"/change-password/:recoveryCode\">\n        <SingleCard title=\"Change Password\" description=\"\">\n          <ChangePasswordForm />\n        </SingleCard>\n      </Route> */}\n        <Route component={Login} />\n        {/*  <Redirect to={'/login'} /> */}\n      </Switch>\n    </Router>\n  )\n}\n","import React from 'react'\n//import { HashRouter as Router, useHistory } from 'react-router-dom'\nimport './dx-styles.scss'\nimport LoadPanel from 'devextreme-react/load-panel'\nimport { NavigationProvider } from './contexts/navigation'\n//import { AuthProvider, useAuth } from \"./contexts/auth\";\nimport { useScreenSizeClass } from './utils/media-query'\nimport Content from './Content'\nimport UnauthenticatedContent from './UnauthenticatedContent'\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport store from './redux/store'\nimport { RootState } from './redux/combineReducers'\nimport { isAlreadyLoggedUser } from './redux/utils/reduxUtils'\nimport { Router, Route } from 'react-router'\nimport { createBrowserHistory } from 'history'\nimport { useHistory } from 'react-router-dom'\nconst App = () => {\n  const usuarioState = useSelector((state: RootState) => state.user)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  if (usuarioState?.isLoggedIn) {\n    return <Content />\n  }\n  if (usuarioState!.isLoggedIn === false) {\n    if (isAlreadyLoggedUser('/administracion', history, dispatch)) {\n      return <Content />\n    }\n  }\n\n  return <UnauthenticatedContent />\n}\n\nexport default function () {\n  const screenSizeClass = useScreenSizeClass()\n  //window.localStorage.setItem(\"dx-theme\", \"material.orange.dark\");\n  return (\n    <Router history={createBrowserHistory()}>\n      {/* <AuthProvider> */}\n      <NavigationProvider>\n        <Provider store={store}>\n          {/* si quitamos el app la aplicaci√≥n se ve bien \n          <div className={`app ${screenSizeClass}`}>\n          */}\n          <div className={`${screenSizeClass}`}>\n            <App />\n          </div>\n        </Provider>\n      </NavigationProvider>\n      {/* </AuthProvider> */}\n    </Router>\n  )\n}\n","import React, { ReactElement, ReactFragment } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './dx-styles.scss'\nimport * as serviceWorker from './serviceWorker'\n//import { BrowserRouter as Router, Redirect } from 'react-router-dom'\n// redux toolkit\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport Box, { Item } from 'devextreme-react/box'\nimport Routes from './routes/routes'\nimport themes from 'devextreme/ui/themes'\nimport esMessages from 'devextreme/localization/messages/es.json'\nimport enMessages from 'devextreme/localization/messages/en.json'\nimport { locale, loadMessages } from 'devextreme/localization'\nimport { checkScreenSize } from 'shared-utils'\n//import { runInsights } from \"./services/telemetryService\";\nimport MenuComponent from './components/menu/menuComponent'\nimport MenuResponsiveComponent from './components/menu/menuResponsiveComponent'\n//import { sizes, subscribe, unsubscribe } from \"./utils/media-query\";\nimport { unregister } from './serviceWorker'\nimport { register } from './serviceWorker'\nimport { runInsights } from 'telemetry-portal'\nimport { Drawer } from 'devextreme-react/drawer'\nimport NavigationList from './components/navigationList/navigationList'\nimport Toolbar from 'devextreme-react/toolbar'\nimport SideNavbarInner from './components/side-nav-inner-toolbar/side-nav-inner-toolbar'\nimport { NavigationProvider } from './contexts/navigation'\nimport App from './app'\nimport { Router, Route } from 'react-router'\nimport { createBrowserHistory } from 'history'\n\nfunction isMobileScreen() {\n  // console.log(process.env.NODE_ENV);\n  if (checkScreenSize()) return <MenuComponent></MenuComponent>\n  else return <MenuResponsiveComponent></MenuResponsiveComponent>\n}\n/*   function getScreenSizeClass() {\n    const screenSizes = sizes();\n    return Object.keys(screenSizes).filter((cl:any) => screenSizes[cl]).join(' ');\n  } */\nconst toolbarItems = [\n  {\n    widget: 'dxButton',\n    location: 'before',\n    options: {\n      icon: 'menu',\n      //onClick: () => this.setState({ opened: !this.state.opened }),\n    },\n  },\n]\nfunction recordarUsuario() {\n  localStorage['recordarUsuario'] = 'true'\n  //return <Redirect from=\"/\" to=\"/ExpedientePage\" />;\n}\nlocalStorage.removeItem('APP_VERSION')\nvar routing: JSX.Element\nrouting = (\n  <>\n    <Router history={createBrowserHistory()}>\n      {localStorage.getItem('user') && localStorage.getItem('recordarUsuario')\n        ? recordarUsuario()\n        : undefined}\n      <NavigationProvider>\n        <Provider store={store}>\n          {/* {isMobileScreen()} */}\n          <SideNavbarInner title=\"prueba\">\n            <div className=\"page\">\n              <Box direction=\"row\" width=\"100%\" height={125}>\n                <Item ratio={1}>\n                  <div className=\"rect demo-light\">\n                    <Routes></Routes>\n                  </div>\n                </Item>\n              </Box>\n            </div>\n          </SideNavbarInner>\n        </Provider>\n      </NavigationProvider>\n    </Router>\n  </>\n)\n//runInsights()\n//Obtener config\nlet currentLenguage = window.localStorage.getItem('lenguage') || 'es-ES'\nloadMessages(esMessages)\nloadMessages(enMessages)\nlocale(currentLenguage)\n\nthemes.ready(() => {\n  ReactDOM.render(<App />, document.getElementById('root'))\n})\nthemes.current(window.localStorage.getItem('dx-theme') || 'generic.light')\n//themes.current(currentTheme);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n//serviceWorker.register();\nunregister()\n"],"sourceRoot":""}